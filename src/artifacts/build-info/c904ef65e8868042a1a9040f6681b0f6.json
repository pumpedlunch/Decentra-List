{"id":"c904ef65e8868042a1a9040f6681b0f6","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/proxy/Clones.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n *\n * _Available since v3.4._\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(0, 0x09, 0x37)\n        }\n        require(instance != address(0), \"ERC1167: create failed\");\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(0, 0x09, 0x37, salt)\n        }\n        require(instance != address(0), \"ERC1167: create2 failed\");\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := keccak256(add(ptr, 0x43), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(address implementation, bytes32 salt)\n        internal\n        view\n        returns (address predicted)\n    {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedSafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SignedSafeMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SignedSafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SignedSafeMath {\n    /**\n     * @dev Returns the multiplication of two signed integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(int256 a, int256 b) internal pure returns (int256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two signed integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(int256 a, int256 b) internal pure returns (int256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two signed integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(int256 a, int256 b) internal pure returns (int256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the addition of two signed integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(int256 a, int256 b) internal pure returns (int256) {\n        return a + b;\n    }\n}\n"},"@uma/core/contracts/common/implementation/AncillaryData.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\n/**\n * @title Library for encoding and decoding ancillary data for DVM price requests.\n * @notice  We assume that on-chain ancillary data can be formatted directly from bytes to utf8 encoding via\n * web3.utils.hexToUtf8, and that clients will parse the utf8-encoded ancillary data as a comma-delimitted key-value\n * dictionary. Therefore, this library provides internal methods that aid appending to ancillary data from Solidity\n * smart contracts. More details on UMA's ancillary data guidelines below:\n * https://docs.google.com/document/d/1zhKKjgY1BupBGPPrY_WOJvui0B6DMcd-xDR8-9-SPDw/edit\n */\nlibrary AncillaryData {\n    // This converts the bottom half of a bytes32 input to hex in a highly gas-optimized way.\n    // Source: the brilliant implementation at https://gitter.im/ethereum/solidity?at=5840d23416207f7b0ed08c9b.\n    function toUtf8Bytes32Bottom(bytes32 bytesIn) private pure returns (bytes32) {\n        unchecked {\n            uint256 x = uint256(bytesIn);\n\n            // Nibble interleave\n            x = x & 0x00000000000000000000000000000000ffffffffffffffffffffffffffffffff;\n            x = (x | (x * 2**64)) & 0x0000000000000000ffffffffffffffff0000000000000000ffffffffffffffff;\n            x = (x | (x * 2**32)) & 0x00000000ffffffff00000000ffffffff00000000ffffffff00000000ffffffff;\n            x = (x | (x * 2**16)) & 0x0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff;\n            x = (x | (x * 2**8)) & 0x00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff;\n            x = (x | (x * 2**4)) & 0x0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f;\n\n            // Hex encode\n            uint256 h = (x & 0x0808080808080808080808080808080808080808080808080808080808080808) / 8;\n            uint256 i = (x & 0x0404040404040404040404040404040404040404040404040404040404040404) / 4;\n            uint256 j = (x & 0x0202020202020202020202020202020202020202020202020202020202020202) / 2;\n            x = x + (h & (i | j)) * 0x27 + 0x3030303030303030303030303030303030303030303030303030303030303030;\n\n            // Return the result.\n            return bytes32(x);\n        }\n    }\n\n    /**\n     * @notice Returns utf8-encoded bytes32 string that can be read via web3.utils.hexToUtf8.\n     * @dev Will return bytes32 in all lower case hex characters and without the leading 0x.\n     * This has minor changes from the toUtf8BytesAddress to control for the size of the input.\n     * @param bytesIn bytes32 to encode.\n     * @return utf8 encoded bytes32.\n     */\n    function toUtf8Bytes(bytes32 bytesIn) internal pure returns (bytes memory) {\n        return abi.encodePacked(toUtf8Bytes32Bottom(bytesIn >> 128), toUtf8Bytes32Bottom(bytesIn));\n    }\n\n    /**\n     * @notice Returns utf8-encoded address that can be read via web3.utils.hexToUtf8.\n     * Source: https://ethereum.stackexchange.com/questions/8346/convert-address-to-string/8447#8447\n     * @dev Will return address in all lower case characters and without the leading 0x.\n     * @param x address to encode.\n     * @return utf8 encoded address bytes.\n     */\n    function toUtf8BytesAddress(address x) internal pure returns (bytes memory) {\n        return\n            abi.encodePacked(toUtf8Bytes32Bottom(bytes32(bytes20(x)) >> 128), bytes8(toUtf8Bytes32Bottom(bytes20(x))));\n    }\n\n    /**\n     * @notice Converts a uint into a base-10, UTF-8 representation stored in a `string` type.\n     * @dev This method is based off of this code: https://stackoverflow.com/a/65707309.\n     */\n    function toUtf8BytesUint(uint256 x) internal pure returns (bytes memory) {\n        if (x == 0) {\n            return \"0\";\n        }\n        uint256 j = x;\n        uint256 len;\n        while (j != 0) {\n            len++;\n            j /= 10;\n        }\n        bytes memory bstr = new bytes(len);\n        uint256 k = len;\n        while (x != 0) {\n            k = k - 1;\n            uint8 temp = (48 + uint8(x - (x / 10) * 10));\n            bytes1 b1 = bytes1(temp);\n            bstr[k] = b1;\n            x /= 10;\n        }\n        return bstr;\n    }\n\n    function appendKeyValueBytes32(\n        bytes memory currentAncillaryData,\n        bytes memory key,\n        bytes32 value\n    ) internal pure returns (bytes memory) {\n        bytes memory prefix = constructPrefix(currentAncillaryData, key);\n        return abi.encodePacked(currentAncillaryData, prefix, toUtf8Bytes(value));\n    }\n\n    /**\n     * @notice Adds \"key:value\" to `currentAncillaryData` where `value` is an address that first needs to be converted\n     * to utf8 bytes. For example, if `utf8(currentAncillaryData)=\"k1:v1\"`, then this function will return\n     * `utf8(k1:v1,key:value)`, and if `currentAncillaryData` is blank, then this will return `utf8(key:value)`.\n     * @param currentAncillaryData This bytes data should ideally be able to be utf8-decoded, but its OK if not.\n     * @param key Again, this bytes data should ideally be able to be utf8-decoded, but its OK if not.\n     * @param value An address to set as the value in the key:value pair to append to `currentAncillaryData`.\n     * @return Newly appended ancillary data.\n     */\n    function appendKeyValueAddress(\n        bytes memory currentAncillaryData,\n        bytes memory key,\n        address value\n    ) internal pure returns (bytes memory) {\n        bytes memory prefix = constructPrefix(currentAncillaryData, key);\n        return abi.encodePacked(currentAncillaryData, prefix, toUtf8BytesAddress(value));\n    }\n\n    /**\n     * @notice Adds \"key:value\" to `currentAncillaryData` where `value` is a uint that first needs to be converted\n     * to utf8 bytes. For example, if `utf8(currentAncillaryData)=\"k1:v1\"`, then this function will return\n     * `utf8(k1:v1,key:value)`, and if `currentAncillaryData` is blank, then this will return `utf8(key:value)`.\n     * @param currentAncillaryData This bytes data should ideally be able to be utf8-decoded, but its OK if not.\n     * @param key Again, this bytes data should ideally be able to be utf8-decoded, but its OK if not.\n     * @param value A uint to set as the value in the key:value pair to append to `currentAncillaryData`.\n     * @return Newly appended ancillary data.\n     */\n    function appendKeyValueUint(\n        bytes memory currentAncillaryData,\n        bytes memory key,\n        uint256 value\n    ) internal pure returns (bytes memory) {\n        bytes memory prefix = constructPrefix(currentAncillaryData, key);\n        return abi.encodePacked(currentAncillaryData, prefix, toUtf8BytesUint(value));\n    }\n\n    /**\n     * @notice Helper method that returns the left hand side of a \"key:value\" pair plus the colon \":\" and a leading\n     * comma \",\" if the `currentAncillaryData` is not empty. The return value is intended to be prepended as a prefix to\n     * some utf8 value that is ultimately added to a comma-delimited, key-value dictionary.\n     */\n    function constructPrefix(bytes memory currentAncillaryData, bytes memory key) internal pure returns (bytes memory) {\n        if (currentAncillaryData.length > 0) {\n            return abi.encodePacked(\",\", key, \":\");\n        } else {\n            return abi.encodePacked(key, \":\");\n        }\n    }\n}\n"},"@uma/core/contracts/common/implementation/FixedPoint.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\";\n\n/**\n * @title Library for fixed point arithmetic on uints\n */\nlibrary FixedPoint {\n    using SafeMath for uint256;\n    using SignedSafeMath for int256;\n\n    // Supports 18 decimals. E.g., 1e18 represents \"1\", 5e17 represents \"0.5\".\n    // For unsigned values:\n    //   This can represent a value up to (2^256 - 1)/10^18 = ~10^59. 10^59 will be stored internally as uint256 10^77.\n    uint256 private constant FP_SCALING_FACTOR = 10**18;\n\n    // --------------------------------------- UNSIGNED -----------------------------------------------------------------------------\n    struct Unsigned {\n        uint256 rawValue;\n    }\n\n    /**\n     * @notice Constructs an `Unsigned` from an unscaled uint, e.g., `b=5` gets stored internally as `5*(10**18)`.\n     * @param a uint to convert into a FixedPoint.\n     * @return the converted FixedPoint.\n     */\n    function fromUnscaledUint(uint256 a) internal pure returns (Unsigned memory) {\n        return Unsigned(a.mul(FP_SCALING_FACTOR));\n    }\n\n    /**\n     * @notice Whether `a` is equal to `b`.\n     * @param a a FixedPoint.\n     * @param b a uint256.\n     * @return True if equal, or False.\n     */\n    function isEqual(Unsigned memory a, uint256 b) internal pure returns (bool) {\n        return a.rawValue == fromUnscaledUint(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is equal to `b`.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return True if equal, or False.\n     */\n    function isEqual(Unsigned memory a, Unsigned memory b) internal pure returns (bool) {\n        return a.rawValue == b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than `b`.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return True if `a > b`, or False.\n     */\n    function isGreaterThan(Unsigned memory a, Unsigned memory b) internal pure returns (bool) {\n        return a.rawValue > b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than `b`.\n     * @param a a FixedPoint.\n     * @param b a uint256.\n     * @return True if `a > b`, or False.\n     */\n    function isGreaterThan(Unsigned memory a, uint256 b) internal pure returns (bool) {\n        return a.rawValue > fromUnscaledUint(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than `b`.\n     * @param a a uint256.\n     * @param b a FixedPoint.\n     * @return True if `a > b`, or False.\n     */\n    function isGreaterThan(uint256 a, Unsigned memory b) internal pure returns (bool) {\n        return fromUnscaledUint(a).rawValue > b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than or equal to `b`.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return True if `a >= b`, or False.\n     */\n    function isGreaterThanOrEqual(Unsigned memory a, Unsigned memory b) internal pure returns (bool) {\n        return a.rawValue >= b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than or equal to `b`.\n     * @param a a FixedPoint.\n     * @param b a uint256.\n     * @return True if `a >= b`, or False.\n     */\n    function isGreaterThanOrEqual(Unsigned memory a, uint256 b) internal pure returns (bool) {\n        return a.rawValue >= fromUnscaledUint(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than or equal to `b`.\n     * @param a a uint256.\n     * @param b a FixedPoint.\n     * @return True if `a >= b`, or False.\n     */\n    function isGreaterThanOrEqual(uint256 a, Unsigned memory b) internal pure returns (bool) {\n        return fromUnscaledUint(a).rawValue >= b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than `b`.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return True if `a < b`, or False.\n     */\n    function isLessThan(Unsigned memory a, Unsigned memory b) internal pure returns (bool) {\n        return a.rawValue < b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than `b`.\n     * @param a a FixedPoint.\n     * @param b a uint256.\n     * @return True if `a < b`, or False.\n     */\n    function isLessThan(Unsigned memory a, uint256 b) internal pure returns (bool) {\n        return a.rawValue < fromUnscaledUint(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than `b`.\n     * @param a a uint256.\n     * @param b a FixedPoint.\n     * @return True if `a < b`, or False.\n     */\n    function isLessThan(uint256 a, Unsigned memory b) internal pure returns (bool) {\n        return fromUnscaledUint(a).rawValue < b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than or equal to `b`.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return True if `a <= b`, or False.\n     */\n    function isLessThanOrEqual(Unsigned memory a, Unsigned memory b) internal pure returns (bool) {\n        return a.rawValue <= b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than or equal to `b`.\n     * @param a a FixedPoint.\n     * @param b a uint256.\n     * @return True if `a <= b`, or False.\n     */\n    function isLessThanOrEqual(Unsigned memory a, uint256 b) internal pure returns (bool) {\n        return a.rawValue <= fromUnscaledUint(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than or equal to `b`.\n     * @param a a uint256.\n     * @param b a FixedPoint.\n     * @return True if `a <= b`, or False.\n     */\n    function isLessThanOrEqual(uint256 a, Unsigned memory b) internal pure returns (bool) {\n        return fromUnscaledUint(a).rawValue <= b.rawValue;\n    }\n\n    /**\n     * @notice The minimum of `a` and `b`.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return the minimum of `a` and `b`.\n     */\n    function min(Unsigned memory a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        return a.rawValue < b.rawValue ? a : b;\n    }\n\n    /**\n     * @notice The maximum of `a` and `b`.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return the maximum of `a` and `b`.\n     */\n    function max(Unsigned memory a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        return a.rawValue > b.rawValue ? a : b;\n    }\n\n    /**\n     * @notice Adds two `Unsigned`s, reverting on overflow.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return the sum of `a` and `b`.\n     */\n    function add(Unsigned memory a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        return Unsigned(a.rawValue.add(b.rawValue));\n    }\n\n    /**\n     * @notice Adds an `Unsigned` to an unscaled uint, reverting on overflow.\n     * @param a a FixedPoint.\n     * @param b a uint256.\n     * @return the sum of `a` and `b`.\n     */\n    function add(Unsigned memory a, uint256 b) internal pure returns (Unsigned memory) {\n        return add(a, fromUnscaledUint(b));\n    }\n\n    /**\n     * @notice Subtracts two `Unsigned`s, reverting on overflow.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return the difference of `a` and `b`.\n     */\n    function sub(Unsigned memory a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        return Unsigned(a.rawValue.sub(b.rawValue));\n    }\n\n    /**\n     * @notice Subtracts an unscaled uint256 from an `Unsigned`, reverting on overflow.\n     * @param a a FixedPoint.\n     * @param b a uint256.\n     * @return the difference of `a` and `b`.\n     */\n    function sub(Unsigned memory a, uint256 b) internal pure returns (Unsigned memory) {\n        return sub(a, fromUnscaledUint(b));\n    }\n\n    /**\n     * @notice Subtracts an `Unsigned` from an unscaled uint256, reverting on overflow.\n     * @param a a uint256.\n     * @param b a FixedPoint.\n     * @return the difference of `a` and `b`.\n     */\n    function sub(uint256 a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        return sub(fromUnscaledUint(a), b);\n    }\n\n    /**\n     * @notice Multiplies two `Unsigned`s, reverting on overflow.\n     * @dev This will \"floor\" the product.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return the product of `a` and `b`.\n     */\n    function mul(Unsigned memory a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        // There are two caveats with this computation:\n        // 1. Max output for the represented number is ~10^41, otherwise an intermediate value overflows. 10^41 is\n        // stored internally as a uint256 ~10^59.\n        // 2. Results that can't be represented exactly are truncated not rounded. E.g., 1.4 * 2e-18 = 2.8e-18, which\n        // would round to 3, but this computation produces the result 2.\n        // No need to use SafeMath because FP_SCALING_FACTOR != 0.\n        return Unsigned(a.rawValue.mul(b.rawValue) / FP_SCALING_FACTOR);\n    }\n\n    /**\n     * @notice Multiplies an `Unsigned` and an unscaled uint256, reverting on overflow.\n     * @dev This will \"floor\" the product.\n     * @param a a FixedPoint.\n     * @param b a uint256.\n     * @return the product of `a` and `b`.\n     */\n    function mul(Unsigned memory a, uint256 b) internal pure returns (Unsigned memory) {\n        return Unsigned(a.rawValue.mul(b));\n    }\n\n    /**\n     * @notice Multiplies two `Unsigned`s and \"ceil's\" the product, reverting on overflow.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return the product of `a` and `b`.\n     */\n    function mulCeil(Unsigned memory a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        uint256 mulRaw = a.rawValue.mul(b.rawValue);\n        uint256 mulFloor = mulRaw / FP_SCALING_FACTOR;\n        uint256 mod = mulRaw.mod(FP_SCALING_FACTOR);\n        if (mod != 0) {\n            return Unsigned(mulFloor.add(1));\n        } else {\n            return Unsigned(mulFloor);\n        }\n    }\n\n    /**\n     * @notice Multiplies an `Unsigned` and an unscaled uint256 and \"ceil's\" the product, reverting on overflow.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return the product of `a` and `b`.\n     */\n    function mulCeil(Unsigned memory a, uint256 b) internal pure returns (Unsigned memory) {\n        // Since b is an uint, there is no risk of truncation and we can just mul it normally\n        return Unsigned(a.rawValue.mul(b));\n    }\n\n    /**\n     * @notice Divides one `Unsigned` by an `Unsigned`, reverting on overflow or division by 0.\n     * @dev This will \"floor\" the quotient.\n     * @param a a FixedPoint numerator.\n     * @param b a FixedPoint denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function div(Unsigned memory a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        // There are two caveats with this computation:\n        // 1. Max value for the number dividend `a` represents is ~10^41, otherwise an intermediate value overflows.\n        // 10^41 is stored internally as a uint256 10^59.\n        // 2. Results that can't be represented exactly are truncated not rounded. E.g., 2 / 3 = 0.6 repeating, which\n        // would round to 0.666666666666666667, but this computation produces the result 0.666666666666666666.\n        return Unsigned(a.rawValue.mul(FP_SCALING_FACTOR).div(b.rawValue));\n    }\n\n    /**\n     * @notice Divides one `Unsigned` by an unscaled uint256, reverting on overflow or division by 0.\n     * @dev This will \"floor\" the quotient.\n     * @param a a FixedPoint numerator.\n     * @param b a uint256 denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function div(Unsigned memory a, uint256 b) internal pure returns (Unsigned memory) {\n        return Unsigned(a.rawValue.div(b));\n    }\n\n    /**\n     * @notice Divides one unscaled uint256 by an `Unsigned`, reverting on overflow or division by 0.\n     * @dev This will \"floor\" the quotient.\n     * @param a a uint256 numerator.\n     * @param b a FixedPoint denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function div(uint256 a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        return div(fromUnscaledUint(a), b);\n    }\n\n    /**\n     * @notice Divides one `Unsigned` by an `Unsigned` and \"ceil's\" the quotient, reverting on overflow or division by 0.\n     * @param a a FixedPoint numerator.\n     * @param b a FixedPoint denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function divCeil(Unsigned memory a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        uint256 aScaled = a.rawValue.mul(FP_SCALING_FACTOR);\n        uint256 divFloor = aScaled.div(b.rawValue);\n        uint256 mod = aScaled.mod(b.rawValue);\n        if (mod != 0) {\n            return Unsigned(divFloor.add(1));\n        } else {\n            return Unsigned(divFloor);\n        }\n    }\n\n    /**\n     * @notice Divides one `Unsigned` by an unscaled uint256 and \"ceil's\" the quotient, reverting on overflow or division by 0.\n     * @param a a FixedPoint numerator.\n     * @param b a uint256 denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function divCeil(Unsigned memory a, uint256 b) internal pure returns (Unsigned memory) {\n        // Because it is possible that a quotient gets truncated, we can't just call \"Unsigned(a.rawValue.div(b))\"\n        // similarly to mulCeil with a uint256 as the second parameter. Therefore we need to convert b into an Unsigned.\n        // This creates the possibility of overflow if b is very large.\n        return divCeil(a, fromUnscaledUint(b));\n    }\n\n    /**\n     * @notice Raises an `Unsigned` to the power of an unscaled uint256, reverting on overflow. E.g., `b=2` squares `a`.\n     * @dev This will \"floor\" the result.\n     * @param a a FixedPoint numerator.\n     * @param b a uint256 denominator.\n     * @return output is `a` to the power of `b`.\n     */\n    function pow(Unsigned memory a, uint256 b) internal pure returns (Unsigned memory output) {\n        output = fromUnscaledUint(1);\n        for (uint256 i = 0; i < b; i = i.add(1)) {\n            output = mul(output, a);\n        }\n    }\n\n    // ------------------------------------------------- SIGNED -------------------------------------------------------------\n    // Supports 18 decimals. E.g., 1e18 represents \"1\", 5e17 represents \"0.5\".\n    // For signed values:\n    //   This can represent a value up (or down) to +-(2^255 - 1)/10^18 = ~10^58. 10^58 will be stored internally as int256 10^76.\n    int256 private constant SFP_SCALING_FACTOR = 10**18;\n\n    struct Signed {\n        int256 rawValue;\n    }\n\n    function fromSigned(Signed memory a) internal pure returns (Unsigned memory) {\n        require(a.rawValue >= 0, \"Negative value provided\");\n        return Unsigned(uint256(a.rawValue));\n    }\n\n    function fromUnsigned(Unsigned memory a) internal pure returns (Signed memory) {\n        require(a.rawValue <= uint256(type(int256).max), \"Unsigned too large\");\n        return Signed(int256(a.rawValue));\n    }\n\n    /**\n     * @notice Constructs a `Signed` from an unscaled int, e.g., `b=5` gets stored internally as `5*(10**18)`.\n     * @param a int to convert into a FixedPoint.Signed.\n     * @return the converted FixedPoint.Signed.\n     */\n    function fromUnscaledInt(int256 a) internal pure returns (Signed memory) {\n        return Signed(a.mul(SFP_SCALING_FACTOR));\n    }\n\n    /**\n     * @notice Whether `a` is equal to `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b a int256.\n     * @return True if equal, or False.\n     */\n    function isEqual(Signed memory a, int256 b) internal pure returns (bool) {\n        return a.rawValue == fromUnscaledInt(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is equal to `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return True if equal, or False.\n     */\n    function isEqual(Signed memory a, Signed memory b) internal pure returns (bool) {\n        return a.rawValue == b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return True if `a > b`, or False.\n     */\n    function isGreaterThan(Signed memory a, Signed memory b) internal pure returns (bool) {\n        return a.rawValue > b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b an int256.\n     * @return True if `a > b`, or False.\n     */\n    function isGreaterThan(Signed memory a, int256 b) internal pure returns (bool) {\n        return a.rawValue > fromUnscaledInt(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than `b`.\n     * @param a an int256.\n     * @param b a FixedPoint.Signed.\n     * @return True if `a > b`, or False.\n     */\n    function isGreaterThan(int256 a, Signed memory b) internal pure returns (bool) {\n        return fromUnscaledInt(a).rawValue > b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than or equal to `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return True if `a >= b`, or False.\n     */\n    function isGreaterThanOrEqual(Signed memory a, Signed memory b) internal pure returns (bool) {\n        return a.rawValue >= b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than or equal to `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b an int256.\n     * @return True if `a >= b`, or False.\n     */\n    function isGreaterThanOrEqual(Signed memory a, int256 b) internal pure returns (bool) {\n        return a.rawValue >= fromUnscaledInt(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than or equal to `b`.\n     * @param a an int256.\n     * @param b a FixedPoint.Signed.\n     * @return True if `a >= b`, or False.\n     */\n    function isGreaterThanOrEqual(int256 a, Signed memory b) internal pure returns (bool) {\n        return fromUnscaledInt(a).rawValue >= b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return True if `a < b`, or False.\n     */\n    function isLessThan(Signed memory a, Signed memory b) internal pure returns (bool) {\n        return a.rawValue < b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b an int256.\n     * @return True if `a < b`, or False.\n     */\n    function isLessThan(Signed memory a, int256 b) internal pure returns (bool) {\n        return a.rawValue < fromUnscaledInt(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than `b`.\n     * @param a an int256.\n     * @param b a FixedPoint.Signed.\n     * @return True if `a < b`, or False.\n     */\n    function isLessThan(int256 a, Signed memory b) internal pure returns (bool) {\n        return fromUnscaledInt(a).rawValue < b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than or equal to `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return True if `a <= b`, or False.\n     */\n    function isLessThanOrEqual(Signed memory a, Signed memory b) internal pure returns (bool) {\n        return a.rawValue <= b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than or equal to `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b an int256.\n     * @return True if `a <= b`, or False.\n     */\n    function isLessThanOrEqual(Signed memory a, int256 b) internal pure returns (bool) {\n        return a.rawValue <= fromUnscaledInt(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than or equal to `b`.\n     * @param a an int256.\n     * @param b a FixedPoint.Signed.\n     * @return True if `a <= b`, or False.\n     */\n    function isLessThanOrEqual(int256 a, Signed memory b) internal pure returns (bool) {\n        return fromUnscaledInt(a).rawValue <= b.rawValue;\n    }\n\n    /**\n     * @notice The minimum of `a` and `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return the minimum of `a` and `b`.\n     */\n    function min(Signed memory a, Signed memory b) internal pure returns (Signed memory) {\n        return a.rawValue < b.rawValue ? a : b;\n    }\n\n    /**\n     * @notice The maximum of `a` and `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return the maximum of `a` and `b`.\n     */\n    function max(Signed memory a, Signed memory b) internal pure returns (Signed memory) {\n        return a.rawValue > b.rawValue ? a : b;\n    }\n\n    /**\n     * @notice Adds two `Signed`s, reverting on overflow.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return the sum of `a` and `b`.\n     */\n    function add(Signed memory a, Signed memory b) internal pure returns (Signed memory) {\n        return Signed(a.rawValue.add(b.rawValue));\n    }\n\n    /**\n     * @notice Adds an `Signed` to an unscaled int, reverting on overflow.\n     * @param a a FixedPoint.Signed.\n     * @param b an int256.\n     * @return the sum of `a` and `b`.\n     */\n    function add(Signed memory a, int256 b) internal pure returns (Signed memory) {\n        return add(a, fromUnscaledInt(b));\n    }\n\n    /**\n     * @notice Subtracts two `Signed`s, reverting on overflow.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return the difference of `a` and `b`.\n     */\n    function sub(Signed memory a, Signed memory b) internal pure returns (Signed memory) {\n        return Signed(a.rawValue.sub(b.rawValue));\n    }\n\n    /**\n     * @notice Subtracts an unscaled int256 from an `Signed`, reverting on overflow.\n     * @param a a FixedPoint.Signed.\n     * @param b an int256.\n     * @return the difference of `a` and `b`.\n     */\n    function sub(Signed memory a, int256 b) internal pure returns (Signed memory) {\n        return sub(a, fromUnscaledInt(b));\n    }\n\n    /**\n     * @notice Subtracts an `Signed` from an unscaled int256, reverting on overflow.\n     * @param a an int256.\n     * @param b a FixedPoint.Signed.\n     * @return the difference of `a` and `b`.\n     */\n    function sub(int256 a, Signed memory b) internal pure returns (Signed memory) {\n        return sub(fromUnscaledInt(a), b);\n    }\n\n    /**\n     * @notice Multiplies two `Signed`s, reverting on overflow.\n     * @dev This will \"floor\" the product.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return the product of `a` and `b`.\n     */\n    function mul(Signed memory a, Signed memory b) internal pure returns (Signed memory) {\n        // There are two caveats with this computation:\n        // 1. Max output for the represented number is ~10^41, otherwise an intermediate value overflows. 10^41 is\n        // stored internally as an int256 ~10^59.\n        // 2. Results that can't be represented exactly are truncated not rounded. E.g., 1.4 * 2e-18 = 2.8e-18, which\n        // would round to 3, but this computation produces the result 2.\n        // No need to use SafeMath because SFP_SCALING_FACTOR != 0.\n        return Signed(a.rawValue.mul(b.rawValue) / SFP_SCALING_FACTOR);\n    }\n\n    /**\n     * @notice Multiplies an `Signed` and an unscaled int256, reverting on overflow.\n     * @dev This will \"floor\" the product.\n     * @param a a FixedPoint.Signed.\n     * @param b an int256.\n     * @return the product of `a` and `b`.\n     */\n    function mul(Signed memory a, int256 b) internal pure returns (Signed memory) {\n        return Signed(a.rawValue.mul(b));\n    }\n\n    /**\n     * @notice Multiplies two `Signed`s and \"ceil's\" the product, reverting on overflow.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return the product of `a` and `b`.\n     */\n    function mulAwayFromZero(Signed memory a, Signed memory b) internal pure returns (Signed memory) {\n        int256 mulRaw = a.rawValue.mul(b.rawValue);\n        int256 mulTowardsZero = mulRaw / SFP_SCALING_FACTOR;\n        // Manual mod because SignedSafeMath doesn't support it.\n        int256 mod = mulRaw % SFP_SCALING_FACTOR;\n        if (mod != 0) {\n            bool isResultPositive = isLessThan(a, 0) == isLessThan(b, 0);\n            int256 valueToAdd = isResultPositive ? int256(1) : int256(-1);\n            return Signed(mulTowardsZero.add(valueToAdd));\n        } else {\n            return Signed(mulTowardsZero);\n        }\n    }\n\n    /**\n     * @notice Multiplies an `Signed` and an unscaled int256 and \"ceil's\" the product, reverting on overflow.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return the product of `a` and `b`.\n     */\n    function mulAwayFromZero(Signed memory a, int256 b) internal pure returns (Signed memory) {\n        // Since b is an int, there is no risk of truncation and we can just mul it normally\n        return Signed(a.rawValue.mul(b));\n    }\n\n    /**\n     * @notice Divides one `Signed` by an `Signed`, reverting on overflow or division by 0.\n     * @dev This will \"floor\" the quotient.\n     * @param a a FixedPoint numerator.\n     * @param b a FixedPoint denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function div(Signed memory a, Signed memory b) internal pure returns (Signed memory) {\n        // There are two caveats with this computation:\n        // 1. Max value for the number dividend `a` represents is ~10^41, otherwise an intermediate value overflows.\n        // 10^41 is stored internally as an int256 10^59.\n        // 2. Results that can't be represented exactly are truncated not rounded. E.g., 2 / 3 = 0.6 repeating, which\n        // would round to 0.666666666666666667, but this computation produces the result 0.666666666666666666.\n        return Signed(a.rawValue.mul(SFP_SCALING_FACTOR).div(b.rawValue));\n    }\n\n    /**\n     * @notice Divides one `Signed` by an unscaled int256, reverting on overflow or division by 0.\n     * @dev This will \"floor\" the quotient.\n     * @param a a FixedPoint numerator.\n     * @param b an int256 denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function div(Signed memory a, int256 b) internal pure returns (Signed memory) {\n        return Signed(a.rawValue.div(b));\n    }\n\n    /**\n     * @notice Divides one unscaled int256 by an `Signed`, reverting on overflow or division by 0.\n     * @dev This will \"floor\" the quotient.\n     * @param a an int256 numerator.\n     * @param b a FixedPoint denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function div(int256 a, Signed memory b) internal pure returns (Signed memory) {\n        return div(fromUnscaledInt(a), b);\n    }\n\n    /**\n     * @notice Divides one `Signed` by an `Signed` and \"ceil's\" the quotient, reverting on overflow or division by 0.\n     * @param a a FixedPoint numerator.\n     * @param b a FixedPoint denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function divAwayFromZero(Signed memory a, Signed memory b) internal pure returns (Signed memory) {\n        int256 aScaled = a.rawValue.mul(SFP_SCALING_FACTOR);\n        int256 divTowardsZero = aScaled.div(b.rawValue);\n        // Manual mod because SignedSafeMath doesn't support it.\n        int256 mod = aScaled % b.rawValue;\n        if (mod != 0) {\n            bool isResultPositive = isLessThan(a, 0) == isLessThan(b, 0);\n            int256 valueToAdd = isResultPositive ? int256(1) : int256(-1);\n            return Signed(divTowardsZero.add(valueToAdd));\n        } else {\n            return Signed(divTowardsZero);\n        }\n    }\n\n    /**\n     * @notice Divides one `Signed` by an unscaled int256 and \"ceil's\" the quotient, reverting on overflow or division by 0.\n     * @param a a FixedPoint numerator.\n     * @param b an int256 denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function divAwayFromZero(Signed memory a, int256 b) internal pure returns (Signed memory) {\n        // Because it is possible that a quotient gets truncated, we can't just call \"Signed(a.rawValue.div(b))\"\n        // similarly to mulCeil with an int256 as the second parameter. Therefore we need to convert b into an Signed.\n        // This creates the possibility of overflow if b is very large.\n        return divAwayFromZero(a, fromUnscaledInt(b));\n    }\n\n    /**\n     * @notice Raises an `Signed` to the power of an unscaled uint256, reverting on overflow. E.g., `b=2` squares `a`.\n     * @dev This will \"floor\" the result.\n     * @param a a FixedPoint.Signed.\n     * @param b a uint256 (negative exponents are not allowed).\n     * @return output is `a` to the power of `b`.\n     */\n    function pow(Signed memory a, uint256 b) internal pure returns (Signed memory output) {\n        output = fromUnscaledInt(1);\n        for (uint256 i = 0; i < b; i = i.add(1)) {\n            output = mul(output, a);\n        }\n    }\n}\n"},"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\ninterface AddressWhitelistInterface {\n    function addToWhitelist(address newElement) external;\n\n    function removeFromWhitelist(address newElement) external;\n\n    function isOnWhitelist(address newElement) external view returns (bool);\n\n    function getWhitelist() external view returns (address[] memory);\n}\n"},"@uma/core/contracts/oracle/implementation/Constants.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\n/**\n * @title Stores common interface names used throughout the DVM by registration in the Finder.\n */\nlibrary OracleInterfaces {\n    bytes32 public constant Oracle = \"Oracle\";\n    bytes32 public constant IdentifierWhitelist = \"IdentifierWhitelist\";\n    bytes32 public constant Store = \"Store\";\n    bytes32 public constant FinancialContractsAdmin = \"FinancialContractsAdmin\";\n    bytes32 public constant Registry = \"Registry\";\n    bytes32 public constant CollateralWhitelist = \"CollateralWhitelist\";\n    bytes32 public constant OptimisticOracle = \"OptimisticOracle\";\n    bytes32 public constant OptimisticOracleV2 = \"OptimisticOracleV2\";\n    bytes32 public constant Bridge = \"Bridge\";\n    bytes32 public constant GenericHandler = \"GenericHandler\";\n    bytes32 public constant SkinnyOptimisticOracle = \"SkinnyOptimisticOracle\";\n    bytes32 public constant ChildMessenger = \"ChildMessenger\";\n    bytes32 public constant OracleHub = \"OracleHub\";\n    bytes32 public constant OracleSpoke = \"OracleSpoke\";\n}\n\n/**\n * @title Commonly re-used values for contracts associated with the OptimisticOracle.\n */\nlibrary OptimisticOracleConstraints {\n    // Any price request submitted to the OptimisticOracle must contain ancillary data no larger than this value.\n    // This value must be <= the Voting contract's `ancillaryBytesLimit` constant value otherwise it is possible\n    // that a price can be requested to the OptimisticOracle successfully, but cannot be resolved by the DVM which\n    // refuses to accept a price request made with ancillary data length over a certain size.\n    uint256 public constant ancillaryBytesLimit = 8192;\n}\n"},"@uma/core/contracts/oracle/interfaces/FinderInterface.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\n/**\n * @title Provides addresses of the live contracts implementing certain interfaces.\n * @dev Examples are the Oracle or Store interfaces.\n */\ninterface FinderInterface {\n    /**\n     * @notice Updates the address of the contract that implements `interfaceName`.\n     * @param interfaceName bytes32 encoding of the interface name that is either changed or registered.\n     * @param implementationAddress address of the deployed contract that implements the interface.\n     */\n    function changeImplementationAddress(bytes32 interfaceName, address implementationAddress) external;\n\n    /**\n     * @notice Gets the address of the contract that implements the given `interfaceName`.\n     * @param interfaceName queried interface.\n     * @return implementationAddress address of the deployed contract that implements the interface.\n     */\n    function getImplementationAddress(bytes32 interfaceName) external view returns (address);\n}\n"},"@uma/core/contracts/oracle/interfaces/OptimisticOracleV2Interface.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./FinderInterface.sol\";\n\n/**\n * @title Financial contract facing Oracle interface.\n * @dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.\n */\nabstract contract OptimisticOracleV2Interface {\n    event RequestPrice(\n        address indexed requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes ancillaryData,\n        address currency,\n        uint256 reward,\n        uint256 finalFee\n    );\n    event ProposePrice(\n        address indexed requester,\n        address indexed proposer,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes ancillaryData,\n        int256 proposedPrice,\n        uint256 expirationTimestamp,\n        address currency\n    );\n    event DisputePrice(\n        address indexed requester,\n        address indexed proposer,\n        address indexed disputer,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes ancillaryData,\n        int256 proposedPrice\n    );\n    event Settle(\n        address indexed requester,\n        address indexed proposer,\n        address indexed disputer,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes ancillaryData,\n        int256 price,\n        uint256 payout\n    );\n    // Struct representing the state of a price request.\n    enum State {\n        Invalid, // Never requested.\n        Requested, // Requested, no other actions taken.\n        Proposed, // Proposed, but not expired or disputed yet.\n        Expired, // Proposed, not disputed, past liveness.\n        Disputed, // Disputed, but no DVM price returned yet.\n        Resolved, // Disputed and DVM price is available.\n        Settled // Final price has been set in the contract (can get here from Expired or Resolved).\n    }\n\n    struct RequestSettings {\n        bool eventBased; // True if the request is set to be event-based.\n        bool refundOnDispute; // True if the requester should be refunded their reward on dispute.\n        bool callbackOnPriceProposed; // True if callbackOnPriceProposed callback is required.\n        bool callbackOnPriceDisputed; // True if callbackOnPriceDisputed callback is required.\n        bool callbackOnPriceSettled; // True if callbackOnPriceSettled callback is required.\n        uint256 bond; // Bond that the proposer and disputer must pay on top of the final fee.\n        uint256 customLiveness; // Custom liveness value set by the requester.\n    }\n\n    // Struct representing a price request.\n    struct Request {\n        address proposer; // Address of the proposer.\n        address disputer; // Address of the disputer.\n        IERC20 currency; // ERC20 token used to pay rewards and fees.\n        bool settled; // True if the request is settled.\n        RequestSettings requestSettings; // Custom settings associated with a request.\n        int256 proposedPrice; // Price that the proposer submitted.\n        int256 resolvedPrice; // Price resolved once the request is settled.\n        uint256 expirationTime; // Time at which the request auto-settles without a dispute.\n        uint256 reward; // Amount of the currency to pay to the proposer on settlement.\n        uint256 finalFee; // Final fee to pay to the Store upon request to the DVM.\n    }\n\n    // This value must be <= the Voting contract's `ancillaryBytesLimit` value otherwise it is possible\n    // that a price can be requested to this contract successfully, but cannot be disputed because the DVM refuses\n    // to accept a price request made with ancillary data length over a certain size.\n    uint256 public constant ancillaryBytesLimit = 8192;\n\n    function defaultLiveness() external view virtual returns (uint256);\n\n    function finder() external view virtual returns (FinderInterface);\n\n    function getCurrentTime() external view virtual returns (uint256);\n\n    // Note: this is required so that typechain generates a return value with named fields.\n    mapping(bytes32 => Request) public requests;\n\n    /**\n     * @notice Requests a new price.\n     * @param identifier price identifier being requested.\n     * @param timestamp timestamp of the price being requested.\n     * @param ancillaryData ancillary data representing additional args being passed with the price request.\n     * @param currency ERC20 token used for payment of rewards and fees. Must be approved for use with the DVM.\n     * @param reward reward offered to a successful proposer. Will be pulled from the caller. Note: this can be 0,\n     *               which could make sense if the contract requests and proposes the value in the same call or\n     *               provides its own reward system.\n     * @return totalBond default bond (final fee) + final fee that the proposer and disputer will be required to pay.\n     * This can be changed with a subsequent call to setBond().\n     */\n    function requestPrice(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        IERC20 currency,\n        uint256 reward\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Set the proposal bond associated with a price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param bond custom bond amount to set.\n     * @return totalBond new bond + final fee that the proposer and disputer will be required to pay. This can be\n     * changed again with a subsequent call to setBond().\n     */\n    function setBond(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        uint256 bond\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Sets the request to refund the reward if the proposal is disputed. This can help to \"hedge\" the caller\n     * in the event of a dispute-caused delay. Note: in the event of a dispute, the winner still receives the other's\n     * bond, so there is still profit to be made even if the reward is refunded.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     */\n    function setRefundOnDispute(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) external virtual;\n\n    /**\n     * @notice Sets a custom liveness value for the request. Liveness is the amount of time a proposal must wait before\n     * being auto-resolved.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param customLiveness new custom liveness.\n     */\n    function setCustomLiveness(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        uint256 customLiveness\n    ) external virtual;\n\n    /**\n     * @notice Sets the request to be an \"event-based\" request.\n     * @dev Calling this method has a few impacts on the request:\n     *\n     * 1. The timestamp at which the request is evaluated is the time of the proposal, not the timestamp associated\n     *    with the request.\n     *\n     * 2. The proposer cannot propose the \"too early\" value (TOO_EARLY_RESPONSE). This is to ensure that a proposer who\n     *    prematurely proposes a response loses their bond.\n     *\n     * 3. RefundoOnDispute is automatically set, meaning disputes trigger the reward to be automatically refunded to\n     *    the requesting contract.\n     *\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     */\n    function setEventBased(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) external virtual;\n\n    /**\n     * @notice Sets which callbacks should be enabled for the request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param callbackOnPriceProposed whether to enable the callback onPriceProposed.\n     * @param callbackOnPriceDisputed whether to enable the callback onPriceDisputed.\n     * @param callbackOnPriceSettled whether to enable the callback onPriceSettled.\n     */\n    function setCallbacks(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        bool callbackOnPriceProposed,\n        bool callbackOnPriceDisputed,\n        bool callbackOnPriceSettled\n    ) external virtual;\n\n    /**\n     * @notice Proposes a price value on another address' behalf. Note: this address will receive any rewards that come\n     * from this proposal. However, any bonds are pulled from the caller.\n     * @param proposer address to set as the proposer.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param proposedPrice price being proposed.\n     * @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n     * the proposer once settled if the proposal is correct.\n     */\n    function proposePriceFor(\n        address proposer,\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        int256 proposedPrice\n    ) public virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Proposes a price value for an existing price request.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param proposedPrice price being proposed.\n     * @return totalBond the amount that's pulled from the proposer's wallet as a bond. The bond will be returned to\n     * the proposer once settled if the proposal is correct.\n     */\n    function proposePrice(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        int256 proposedPrice\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Disputes a price request with an active proposal on another address' behalf. Note: this address will\n     * receive any rewards that come from this dispute. However, any bonds are pulled from the caller.\n     * @param disputer address to set as the disputer.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n     * the disputer once settled if the dispute was value (the proposal was incorrect).\n     */\n    function disputePriceFor(\n        address disputer,\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) public virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Disputes a price value for an existing price request with an active proposal.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return totalBond the amount that's pulled from the disputer's wallet as a bond. The bond will be returned to\n     * the disputer once settled if the dispute was valid (the proposal was incorrect).\n     */\n    function disputePrice(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Retrieves a price that was previously requested by a caller. Reverts if the request is not settled\n     * or settleable. Note: this method is not view so that this call may actually settle the price request if it\n     * hasn't been settled.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return resolved price.\n     */\n    function settleAndGetPrice(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) external virtual returns (int256);\n\n    /**\n     * @notice Attempts to settle an outstanding price request. Will revert if it isn't settleable.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return payout the amount that the \"winner\" (proposer or disputer) receives on settlement. This amount includes\n     * the returned bonds as well as additional rewards.\n     */\n    function settle(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) external virtual returns (uint256 payout);\n\n    /**\n     * @notice Gets the current data structure containing all information about a price request.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return the Request data structure.\n     */\n    function getRequest(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) public view virtual returns (Request memory);\n\n    /**\n     * @notice Returns the state of a price request.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return the State enum value.\n     */\n    function getState(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) public view virtual returns (State);\n\n    /**\n     * @notice Checks if a given request has resolved or been settled (i.e the optimistic oracle has a price).\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return true if price has resolved or settled, false otherwise.\n     */\n    function hasPrice(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) public view virtual returns (bool);\n\n    function stampAncillaryData(bytes memory ancillaryData, address requester)\n        public\n        view\n        virtual\n        returns (bytes memory);\n}\n"},"@uma/core/contracts/oracle/interfaces/StoreInterface.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../../common/implementation/FixedPoint.sol\";\n\n/**\n * @title Interface that allows financial contracts to pay oracle fees for their use of the system.\n */\ninterface StoreInterface {\n    /**\n     * @notice Pays Oracle fees in ETH to the store.\n     * @dev To be used by contracts whose margin currency is ETH.\n     */\n    function payOracleFees() external payable;\n\n    /**\n     * @notice Pays oracle fees in the margin currency, erc20Address, to the store.\n     * @dev To be used if the margin currency is an ERC20 token rather than ETH.\n     * @param erc20Address address of the ERC20 token used to pay the fee.\n     * @param amount number of tokens to transfer. An approval for at least this amount must exist.\n     */\n    function payOracleFeesErc20(address erc20Address, FixedPoint.Unsigned calldata amount) external;\n\n    /**\n     * @notice Computes the regular oracle fees that a contract should pay for a period.\n     * @param startTime defines the beginning time from which the fee is paid.\n     * @param endTime end time until which the fee is paid.\n     * @param pfc \"profit from corruption\", or the maximum amount of margin currency that a\n     * token sponsor could extract from the contract through corrupting the price feed in their favor.\n     * @return regularFee amount owed for the duration from start to end time for the given pfc.\n     * @return latePenalty for paying the fee after the deadline.\n     */\n    function computeRegularFee(\n        uint256 startTime,\n        uint256 endTime,\n        FixedPoint.Unsigned calldata pfc\n    ) external view returns (FixedPoint.Unsigned memory regularFee, FixedPoint.Unsigned memory latePenalty);\n\n    /**\n     * @notice Computes the final oracle fees that a contract should pay at settlement.\n     * @param currency token used to pay the final fee.\n     * @return finalFee amount due.\n     */\n    function computeFinalFee(address currency) external view returns (FixedPoint.Unsigned memory);\n}\n"},"contracts/Decentralist.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.2;\r\n\r\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\nimport \"@uma/core/contracts/oracle/implementation/Constants.sol\";\r\nimport \"@uma/core/contracts/oracle/interfaces/FinderInterface.sol\";\r\nimport \"@uma/core/contracts/common/implementation/AncillaryData.sol\";\r\nimport \"@uma/core/contracts/oracle/interfaces/StoreInterface.sol\";\r\nimport \"@uma/core/contracts/oracle/interfaces/OptimisticOracleV2Interface.sol\";\r\n\r\ncontract Decentralist is Initializable, Ownable {\r\n    using SafeERC20 for IERC20;\r\n\r\n    event RevisionProposed(\r\n        uint256 indexed revisionId,\r\n        RevisionType revisionType,\r\n        address[] proposedAddresses\r\n    );\r\n    event RevisionApproved(\r\n        uint256 indexed revisionId,\r\n        RevisionType revisionType\r\n    );\r\n    event RevisionRejected(\r\n        uint256 indexed revisionId,\r\n        RevisionType revisionType\r\n    );\r\n    event RevisionExecuted(\r\n        uint256 indexed revisionId,\r\n        RevisionType revisionType,\r\n        address[] revisedAddresses\r\n    );\r\n\r\n    event RewardsSet(uint256 additionReward, uint256 removalReward);\r\n    event LivenessSet(uint64 liveness);\r\n    event BondSet(uint256 bondAmount);\r\n\r\n    OptimisticOracleV2Interface public oracle;\r\n    StoreInterface public store;\r\n\r\n    FinderInterface public finder;\r\n    bytes public fixedAncillaryData;\r\n    string public title;\r\n    uint256 public bondAmount;\r\n    IERC20 public token;\r\n    uint256 public additionReward;\r\n    uint256 public removalReward;\r\n    uint64 public liveness;\r\n    uint64 public minimumLiveness;\r\n    uint256 private revisionCounter;\r\n    uint256 private finalFee;\r\n\r\n    int256 internal constant PROPOSAL_YES_RESPONSE = int256(1e18);\r\n    bytes32 internal constant IDENTIFIER = \"DECENTRA-LIST\";\r\n\r\n    enum RevisionType {\r\n        Remove,\r\n        Add\r\n    }\r\n\r\n    enum Status {\r\n        Invalid,\r\n        Proposed,\r\n        Approved,\r\n        Rejected,\r\n        Executed\r\n    }\r\n\r\n    struct Revision {\r\n        address proposer;\r\n        bytes32 addressesHash;\r\n        RevisionType revisionType;\r\n        Status status;\r\n    }\r\n\r\n    // maps hash of oracle revision data to revisionId\r\n    mapping(bytes32 => uint256) private revisionIds;\r\n    // maps revisionId to Revision\r\n    mapping(uint256 => Revision) public revisions;\r\n    // maps addresses to bool for inclusion on list\r\n    mapping(address => bool) public onList;\r\n\r\n    /**\r\n     * @notice Initializes the contract.\r\n     * @param _finder The address of UMA Finder contract. This is set in the DecentralistProxyFactory constructor.\r\n     * @param _listCriteria Criteria for what addresses should be included on the list. Can be on-chain text or a link to IPFS.\r\n     * @param _title Short title for the list.\r\n     * @param _token The address of the token currency used for this contract. Must be on UMA's collateral whitelist.\r\n     * @param _bondAmount Additional bond required, beyond the final fee.\r\n     * @param _additionReward Reward per address successfully added to the list, paid by the contract to the proposer.\r\n     * @param _removalReward Reward per address successfully removed from the list, paid by the contract to the proposer.\r\n     * @param _liveness The period, in seconds, in which a proposal can be disputed.\r\n     * @param _minimumLiveness The minimum allowable liveness period, in seconds.\r\n     * @param _owner Owner of the contract can remove funds from the contract and adjust reward rates. Set to the 0 address to make the contract 'public'.\r\n     */\r\n    function initialize(\r\n        address _finder,\r\n        bytes memory _listCriteria,\r\n        string memory _title,\r\n        address _token,\r\n        uint256 _bondAmount,\r\n        uint256 _additionReward,\r\n        uint256 _removalReward,\r\n        uint64 _liveness,\r\n        uint64 _minimumLiveness,\r\n        address _owner\r\n    ) external initializer {\r\n        finder = FinderInterface(_finder);\r\n        syncContracts();\r\n        token = IERC20(_token);\r\n\r\n        finalFee = store.computeFinalFee(address(token)).rawValue;\r\n\r\n        require(\r\n            _bondAmount >= store.computeFinalFee(address(token)).rawValue,\r\n            \"bond must be >= final fee\"\r\n        );\r\n        require(\r\n            _liveness >= _minimumLiveness,\r\n            \"liveness must be >= minimumLiveness\"\r\n        );\r\n        require(_liveness < 5200 weeks, \"liveness must be < 5200 weeks\");\r\n\r\n        // add boilerplate directions for verification to _listCriteria\r\n        fixedAncillaryData = bytes.concat(\r\n            \"meet the List Criteria at the time of the price request? List Criteria: \",\r\n            _listCriteria,\r\n            \". Decentra-List Revision ID = \"\r\n        );\r\n        title = _title;\r\n        token = IERC20(_token);\r\n        bondAmount = _bondAmount;\r\n        additionReward = _additionReward;\r\n        removalReward = _removalReward;\r\n        liveness = _liveness;\r\n        minimumLiveness = _minimumLiveness;\r\n        _transferOwnership(_owner);\r\n\r\n        revisionCounter = 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Proposes addresses to add or remove from the list.\r\n     * @param _revisionType Enum indicatting if the proposed revision is adding or removing addresses. 0 = Remove, 1 = Add.\r\n     * @param _addresses Array of addresses for the proposed revision.\r\n     * @dev Caller must have approved this contract to spend the total bond amount of the contract's token before calling.\r\n     */\r\n    function proposeRevision(\r\n        RevisionType _revisionType,\r\n        address[] calldata _addresses\r\n    ) external {\r\n        require(\r\n            _addresses.length < 100,\r\n            \"addresses array length must be < 100\"\r\n        );\r\n\r\n        // prepare oracle request data\r\n        bytes memory ancillaryData = \"Do all Proposed Addresses \";\r\n        if (_revisionType == RevisionType.Remove) {\r\n            ancillaryData = bytes.concat(ancillaryData, \"fail to \");\r\n        }\r\n        ancillaryData = bytes.concat(\r\n            ancillaryData,\r\n            fixedAncillaryData,\r\n            AncillaryData.toUtf8BytesUint(revisionCounter),\r\n            \". For directions to find the Proposed Addresses, see Implementation section of UMIP-169.\"\r\n        );\r\n        uint256 currentTime = block.timestamp;\r\n\r\n        // prepare data for storage in Revision\r\n        bytes32 oracleRequestHash = keccak256(\r\n            abi.encodePacked(ancillaryData, currentTime)\r\n        );\r\n        bytes32 addressesHash = keccak256(abi.encodePacked(_addresses));\r\n\r\n        // map oracleRequestHash to the current revisionCounter\r\n        revisionIds[oracleRequestHash] = revisionCounter;\r\n\r\n        // store Revision data in revisions mapping under the revisionCounter\r\n        revisions[revisionCounter].proposer = msg.sender;\r\n        revisions[revisionCounter].addressesHash = addressesHash;\r\n        revisions[revisionCounter].revisionType = _revisionType;\r\n        revisions[revisionCounter].status = Status.Proposed;\r\n\r\n        // request data from oracle and configure request settings\r\n        oracle.requestPrice(IDENTIFIER, currentTime, ancillaryData, token, 0);\r\n        oracle.setCallbacks(\r\n            IDENTIFIER,\r\n            currentTime,\r\n            ancillaryData,\r\n            false,\r\n            false,\r\n            true\r\n        );\r\n        oracle.setCustomLiveness(\r\n            IDENTIFIER,\r\n            currentTime,\r\n            ancillaryData,\r\n            liveness\r\n        );\r\n        uint256 totalBond = oracle.setBond(\r\n            IDENTIFIER,\r\n            currentTime,\r\n            ancillaryData,\r\n            bondAmount\r\n        );\r\n\r\n        // transfer totalBond from proposer to contract for forwarding to Oracle\r\n        token.safeTransferFrom(msg.sender, address(this), totalBond);\r\n\r\n        // approve oracle to transfer total bond amount from list contract\r\n        token.safeApprove(address(oracle), totalBond);\r\n\r\n        // propose value to oracle\r\n        oracle.proposePriceFor(\r\n            msg.sender,\r\n            address(this),\r\n            IDENTIFIER,\r\n            currentTime,\r\n            ancillaryData,\r\n            PROPOSAL_YES_RESPONSE\r\n        );\r\n\r\n        emit RevisionProposed(revisionCounter, _revisionType, _addresses);\r\n        revisionCounter++;\r\n    }\r\n\r\n    /**\r\n     * @notice Callback function called upon oracle data settlement to update the Revision status to Approved or Rejected.\r\n     * @param timestamp Timestamp to identify the existing request.\r\n     * @param ancillaryData Ancillary data of the data being requested.\r\n     * @param value Value returned from the oracle.\r\n     */\r\n    function priceSettled(\r\n        bytes32, /* identifier */\r\n        uint256 timestamp,\r\n        bytes memory ancillaryData,\r\n        int256 value\r\n    ) external {\r\n        // restrict function access to oracle\r\n        require(\r\n            msg.sender == address(oracle),\r\n            \"only oracle can call this function\"\r\n        );\r\n\r\n        // get revisionId from oracleRequestHash\r\n        bytes32 oracleRequestHash = keccak256(\r\n            abi.encodePacked(ancillaryData, timestamp)\r\n        );\r\n        uint256 revisionId = revisionIds[oracleRequestHash];\r\n\r\n        // set status to Approved or Rejected\r\n        if (value == PROPOSAL_YES_RESPONSE) {\r\n            revisions[revisionId].status = Status.Approved;\r\n            emit RevisionApproved(\r\n                revisionId,\r\n                revisions[revisionId].revisionType\r\n            );\r\n        } else {\r\n            revisions[revisionId].status = Status.Rejected;\r\n            emit RevisionRejected(\r\n                revisionId,\r\n                revisions[revisionId].revisionType\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Executes approved revisions by revising the list and paying out rewards to the proposer.\r\n     * @param _revisionId ID of revision to be executed. If Revision submitted does not have status Approved, tx will revert.\r\n     * @param _addresses Address array that matches the array logged in the RevisionProposed event for the provided _revisionId.\r\n     */\r\n    function executeRevision(uint256 _revisionId, address[] calldata _addresses)\r\n        external\r\n    {\r\n        require(\r\n            revisions[_revisionId].status == Status.Approved,\r\n            \"revisionId is not approved\"\r\n        );\r\n        require(\r\n            revisions[_revisionId].addressesHash ==\r\n                keccak256(abi.encodePacked(_addresses)),\r\n            \"hash of addresses != revisionId's addressesHash\"\r\n        );\r\n\r\n        // update Revision status\r\n        revisions[_revisionId].status = Status.Executed;\r\n\r\n        // set helper variables based on revisionType = Remove or Add\r\n        bool setOnListTo;\r\n        uint256 rewardRate;\r\n\r\n        if (revisions[_revisionId].revisionType == RevisionType.Remove) {\r\n            setOnListTo = false;\r\n            rewardRate = removalReward;\r\n        } else if (revisions[_revisionId].revisionType == RevisionType.Add) {\r\n            setOnListTo = true;\r\n            rewardRate = additionReward;\r\n        }\r\n\r\n        // add or remove address from the list, increment rewardCounter for calculating rewards and record revised Addresses\r\n        uint256 rewardCounter;\r\n        address[] memory revisedAddresses = new address[](_addresses.length);\r\n\r\n        for (uint256 i = 0; i < _addresses.length; i++) {\r\n            if (onList[_addresses[i]] != setOnListTo) {\r\n                onList[_addresses[i]] = setOnListTo;\r\n                revisedAddresses[i] = _addresses[i];\r\n                rewardCounter++;\r\n            }\r\n        }\r\n\r\n        // calculate & pay out rewards to proposer\r\n        uint256 reward = rewardRate * rewardCounter;\r\n        if (reward > 0) {\r\n            if (token.balanceOf(address(this)) < reward) {\r\n                token.safeTransfer(\r\n                    revisions[_revisionId].proposer,\r\n                    token.balanceOf(address(this))\r\n                );\r\n            } else {\r\n                token.safeTransfer(revisions[_revisionId].proposer, reward);\r\n            }\r\n        }\r\n        emit RevisionExecuted(\r\n            _revisionId,\r\n            revisions[_revisionId].revisionType,\r\n            revisedAddresses\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @notice Allows owner to withdraw the default tokens from the contract.\r\n     * @param recipient The recipient of the tokens.\r\n     * @param amount The amount of tokens to to send.\r\n     */\r\n    function withdraw(address recipient, uint256 amount) external onlyOwner {\r\n        token.safeTransfer(recipient, amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Allows owner to rescue tokens sent accidentally to the contract.\r\n     * @param recipient The recipient of the tokens.\r\n     * @param amount The amount of tokens to to send.\r\n     * @param _token The contract address of the token to send.\r\n     */\r\n    function rescue(\r\n        address recipient,\r\n        uint256 amount,\r\n        address _token\r\n    ) external onlyOwner {\r\n        IERC20(_token).safeTransfer(recipient, amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Sets the rewards for successful revisions.\r\n     * @param _additionReward Reward to proposer per address successfully added to the list.\r\n     * @param _removalReward Reward to proposer per address successfully removed from the list.\r\n     */\r\n    function setRewards(uint256 _additionReward, uint256 _removalReward)\r\n        external\r\n        onlyOwner\r\n    {\r\n        additionReward = _additionReward;\r\n        removalReward = _removalReward;\r\n        emit RewardsSet(_additionReward, _removalReward);\r\n    }\r\n\r\n    /**\r\n     * @notice Sets the bond amount for revisions.\r\n     * @param _bondAmount Amount of the bond token that will need to be paid for future proposals.\r\n     */\r\n    function setBond(uint256 _bondAmount) external onlyOwner {\r\n        // Value of the bond required for proposing revisions, in addition to the final fee. Bond must be\r\n        // greater or equal to the final fee\r\n        require(\r\n            _bondAmount >= store.computeFinalFee(address(token)).rawValue,\r\n            \"bond must be >= final fee\"\r\n        );\r\n\r\n        bondAmount = _bondAmount;\r\n        emit BondSet(_bondAmount);\r\n    }\r\n\r\n    /**\r\n     * @notice Sets the liveness for future revisions. This is the amount of delay before a proposal is approved by\r\n     * default.\r\n     * @param _liveness Liveness to set in seconds.\r\n     */\r\n    function setLiveness(uint64 _liveness) external onlyOwner {\r\n        require(\r\n            _liveness >= minimumLiveness,\r\n            \"liveness must be >= minimumLiveness\"\r\n        );\r\n        require(_liveness < 1 weeks, \"liveness must be < than 1 week\");\r\n        liveness = _liveness;\r\n        emit LivenessSet(_liveness);\r\n    }\r\n\r\n    /**\r\n     * @notice This pulls in the most up-to-date Optimistic Oracle contract.\r\n     * @dev If a new OptimisticOracle is added and this is run between a revision's introduction and execution, the\r\n     * proposal will become unexecutable.\r\n     */\r\n    function syncContracts() public {\r\n        oracle = OptimisticOracleV2Interface(\r\n            finder.getImplementationAddress(OracleInterfaces.OptimisticOracleV2)\r\n        );\r\n        store = StoreInterface(\r\n            finder.getImplementationAddress(OracleInterfaces.Store)\r\n        );\r\n    }\r\n}"},"contracts/DecentralistProxyFactory.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.2;\r\n\r\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\r\nimport \"@uma/core/contracts/oracle/interfaces/FinderInterface.sol\";\r\nimport \"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol\";\r\nimport \"@uma/core/contracts/oracle/implementation/Constants.sol\";\r\n\r\ncontract DecentralistProxyFactory {\r\n\r\n    uint64 public minimumLiveness;\r\n\r\n    address public implementationContract;\r\n\r\n    address[] public allClones;\r\n\r\n    FinderInterface public finder;\r\n    AddressWhitelistInterface public collateralWhitelist;\r\n\r\n    event NewClone(address _clone);\r\n\r\n    /**\r\n    * @param _implementation The decentraList implementation contract that clones will be based on.\r\n    * @param _finder The address of UMA Finder contract. This is set in the DecentralistProxyFactory constructor.\r\n    */\r\n    constructor(address _implementation, address _finder, uint64 _minimumLiveness) {\r\n        require(_finder != address(0), \"implementation address can not be empty\");\r\n        require(_finder != address(0), \"finder address can not be empty\");\r\n        implementationContract = _implementation;\r\n        finder = FinderInterface(_finder);\r\n        minimumLiveness = _minimumLiveness;\r\n        syncWhitelist();\r\n    }\r\n\r\n    /**\r\n    * @notice Creates a new decentraList smart contract.\r\n    * @param _listCriteria Criteria for what addresses should be included on the list. Can be on-chain text or a link to IPFS.\r\n    * @param _title Short title for the list.\r\n    * @param _token The address of the token currency used for this contract. Must be on UMA's collateral whitelist.\r\n    * @param _bondAmount Additional bond required, beyond the final fee.\r\n    * @param _additionReward Reward per address successfully added to the list, paid by the contract to the proposer.\r\n    * @param _removalReward Reward per address successfully removed from the list, paid by the contract to the proposer.\r\n    * @param _liveness The period, in seconds, in which a proposal can be disputed. Must be greater than 8 hours.\r\n    * @param _owner Owner of the contract can remove funds from the contract and adjust bondAmount, rewards and liveness. \r\n    * Set to the 0 address to make the contract a non-managed public good.\r\n    */\r\n    function createNewDecentralist(\r\n        bytes memory _listCriteria,\r\n        string memory _title,\r\n        address _token,\r\n        uint256 _bondAmount,\r\n        uint256 _additionReward,\r\n        uint256 _removalReward,\r\n        uint64 _liveness,\r\n        address _owner\r\n    ) external returns (address instance) {\r\n        // check _token is on UMA's whitelist\r\n        require(collateralWhitelist.isOnWhitelist(_token), \"token is not on UMA's collateral whitelist\");\r\n        \r\n        // clone implementation\r\n        instance = Clones.clone(implementationContract);\r\n        // initialize new contract\r\n        (bool success, ) = instance.call(\r\n            abi.encodeWithSignature(\r\n                \"initialize(address,bytes,string,address,uint256,uint256,uint256,uint64,uint64,address)\",\r\n                address(finder),\r\n                _listCriteria,\r\n\t\t\t\t_title,\r\n\t\t\t\t_token,\r\n\t\t\t\t_bondAmount,\r\n\t\t\t\t_additionReward,\r\n\t\t\t\t_removalReward,\r\n                _liveness,\r\n                minimumLiveness,\r\n                _owner\r\n            )\r\n        );\r\n        require(success, \"failed to create a new instance\");\r\n\r\n        // store new address\r\n        allClones.push(instance);\r\n        emit NewClone(instance);\r\n        return instance;\r\n    }\r\n\r\n    /**\r\n    * @notice Returns all instances created.\r\n    */\r\n\tfunction getAllClones() external view returns(address[] memory) {\r\n\t\treturn allClones;\r\n\t}\r\n\r\n    /**\r\n     * @notice This pulls in the most up-to-date collateral whitelist.\r\n     * @dev If a new OptimisticOracle is added and this function is run between a list revision's proposal and execution,\r\n     * the proposal will become unexecutable.\r\n     */\r\n    function syncWhitelist() public {\r\n        collateralWhitelist = AddressWhitelistInterface(finder.getImplementationAddress(OracleInterfaces.CollateralWhitelist));\r\n    }\r\n}\r\n"},"contracts/interfaces/DecentralistInterface.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.2;\r\n\r\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\nimport \"@uma/core/contracts/oracle/interfaces/StoreInterface.sol\";\r\nimport \"@uma/core/contracts/oracle/interfaces/OptimisticOracleV2Interface.sol\";\r\n\r\nabstract contract DecentralistInterface is Initializable, Ownable {\r\n    using SafeERC20 for IERC20;\r\n\r\n    event RevisionProposed(\r\n        uint256 indexed revisionId,\r\n        int256 proposedValue,\r\n        address[] pendingAddresses\r\n    );\r\n    event RevisionApproved(uint256 indexed revisionId, int256 proposedValue);\r\n    event RevisionRejected(uint256 indexed revisionId, int256 proposedValue);\r\n    event RevisionExecuted(\r\n        uint256 indexed revisionId,\r\n        int256 proposedValue,\r\n        address[] revisedAddresses\r\n    );\r\n\r\n    event RewardsSet(uint256 additionReward, uint256 removalReward);\r\n    event LivenessSet(uint64 liveness);\r\n    event BondSet(uint256 bondAmount);\r\n\r\n    function oracle()\r\n        external\r\n        view\r\n        virtual\r\n        returns (OptimisticOracleV2Interface);\r\n\r\n    function store() external view virtual returns (StoreInterface);\r\n\r\n    function finder() external view virtual returns (FinderInterface);\r\n\r\n    function fixedAncillaryData() external view virtual returns (bytes memory);\r\n\r\n    function title() external view virtual returns (string memory);\r\n\r\n    function bondAmount() external view virtual returns (uint256);\r\n\r\n    function token() external view virtual returns (IERC20);\r\n\r\n    function additionReward() external view virtual returns (uint256);\r\n\r\n    function removalReward() external view virtual returns (uint256);\r\n\r\n    function liveness() external view virtual returns (uint64);\r\n\r\n    function minimumLiveness() external view virtual returns (uint64);\r\n\r\n    enum Status {\r\n        Invalid,\r\n        Pending,\r\n        Approved,\r\n        Rejected,\r\n        Executed\r\n    }\r\n\r\n    struct Revision {\r\n        address proposer;\r\n        bytes32 addressesHash;\r\n        int256 proposedValue;\r\n        Status status;\r\n    }\r\n\r\n    // maps revisionId to Revision struct\r\n    function revisions(uint256 RevisionId)\r\n        external\r\n        view\r\n        virtual\r\n        returns (Revision memory);\r\n\r\n    // returns boolean whether address is on list\r\n    function onList(address) external view virtual returns (bool);\r\n\r\n    /**\r\n     * @notice Initializes the contract.\r\n     * @param _finder The address of UMA Finder contract. This is set in the DecentralistProxyFactory constructor.\r\n     * @param _listCriteria Criteria for what addresses should be included on the list. Can be on-chain text or a link to IPFS.\r\n     * @param _title Short title for the list.\r\n     * @param _token The address of the token currency used for this contract. Must be on UMA's collateral whitelist.\r\n     * @param _bondAmount Additional bond required, beyond the final fee.\r\n     * @param _additionReward Reward per address successfully added to the list, paid by the contract to the proposer.\r\n     * @param _removalReward Reward per address successfully removed from the list, paid by the contract to the proposer.\r\n     * @param _liveness The period, in seconds, in which a proposal can be disputed.\r\n     * @param _minimumLiveness The minimum allowable liveness period, in seconds.\r\n     * @param _owner Owner of the contract can remove funds from the contract and adjust reward rates. Set to the 0 address to make the contract 'public'.\r\n     */\r\n    function initialize(\r\n        address _finder,\r\n        bytes memory _listCriteria,\r\n        string memory _title,\r\n        address _token,\r\n        uint256 _bondAmount,\r\n        uint256 _additionReward,\r\n        uint256 _removalReward,\r\n        uint64 _liveness,\r\n        uint64 _minimumLiveness,\r\n        address _owner\r\n    ) external virtual;\r\n\r\n    /**\r\n     * @notice Proposes addresses to add or remove from the list.\r\n     * @param _value Indicates if the proposed revision is adding or removing addresses. 0 = remove, 1e18 = add.\r\n     * @param _addresses Array of addresses for the proposed revision.\r\n     * @dev Caller must have approved this contract to spend the total bond amount of the contract's token before calling.\r\n     */\r\n    function proposeRevision(int256 _value, address[] calldata _addresses)\r\n        external\r\n        virtual;\r\n\r\n    /**\r\n     * @notice Callback function called upon oracle data settlement to update the Revision status to Approved or Rejected.\r\n     * @param timestamp Timestamp to identify the existing request.\r\n     * @param ancillaryData Ancillary data of the data being requested.\r\n     * @param value Value returned from the oracle.\r\n     */\r\n    function priceSettled(\r\n        bytes32, /* identifier */\r\n        uint256 timestamp,\r\n        bytes memory ancillaryData,\r\n        int256 value\r\n    ) external virtual;\r\n\r\n    /**\r\n     * @notice Executes approved revisions by revising the list and paying out rewards to the proposer.\r\n     * @param _revisionId ID of revision to be executed. If Revision submitted does not have status Approved, tx will revert.\r\n     * @param _addresses Address array that matches the array logged in the RevisionProposed event for the provided _revisionId.\r\n     */\r\n    function executeRevision(uint256 _revisionId, address[] calldata _addresses)\r\n        external virtual;\r\n\r\n    /**\r\n     * @notice Allows owner to withdraw the default tokens from the contract.\r\n     * @param recipient The recipient of the tokens.\r\n     * @param amount The amount of tokens to to send.\r\n     */\r\n    function withdraw(address recipient, uint256 amount) external virtual;\r\n\r\n    /**\r\n     * @notice Allows owner to rescue tokens sent accidentally to the contract.\r\n     * @param recipient The recipient of the tokens.\r\n     * @param amount The amount of tokens to to send.\r\n     * @param _token The contract address of the token to send.\r\n     */\r\n    function rescue(\r\n        address recipient,\r\n        uint256 amount,\r\n        address _token\r\n    ) external virtual;\r\n\r\n    /**\r\n     * @notice Sets the rewards for successful revisions.\r\n     * @param _additionReward Reward to proposer per address successfully added to the list.\r\n     * @param _removalReward Reward to proposer per address successfully removed from the list.\r\n     */\r\n    function setRewards(uint256 _additionReward, uint256 _removalReward)\r\n        external virtual;\r\n\r\n    /**\r\n     * @notice Sets the bond amount for revisions.\r\n     * @param _bondAmount Amount of the bond token that will need to be paid for future proposals.\r\n     */\r\n    function setBond(uint256 _bondAmount) external virtual;\r\n\r\n    /**\r\n     * @notice Sets the liveness for future revisions. This is the amount of delay before a proposal is approved by\r\n     * default.\r\n     * @param _liveness Liveness to set in seconds.\r\n     */\r\n    function setLiveness(uint64 _liveness) external virtual;\r\n\r\n    /**\r\n     * @notice This pulls in the most up-to-date Optimistic Oracle contract.\r\n     * @dev If a new OptimisticOracle is added and this is run between a revision's introduction and execution, the\r\n     * proposal will become unexecutable.\r\n     */\r\n    function syncContracts() public virtual;\r\n}\r\n"},"contracts/interfaces/DecentralistProxyFactoryInterface.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.2;\r\n\r\nimport \"@uma/core/contracts/oracle/interfaces/FinderInterface.sol\";\r\nimport \"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol\";\r\n\r\nabstract contract DecentralistProxyFactoryInterface {\r\n    function minimumLiveness() external view virtual returns (uint64);\r\n\r\n    function implementationContract() external view virtual returns (address);\r\n\r\n    function allClones() external view virtual returns (address[] memory);\r\n\r\n    function finder() external view virtual returns (FinderInterface);\r\n\r\n    function collateralWhitelist()\r\n        external\r\n        view virtual\r\n        returns (AddressWhitelistInterface);\r\n\r\n    event NewClone(address _clone);\r\n\r\n    /**\r\n     * @notice Creates a new decentraList smart contract.\r\n     * @param _listCriteria Criteria for what addresses should be included on the list. Can be on-chain text or a link to IPFS.\r\n     * @param _title Short title for the list.\r\n     * @param _token The address of the token currency used for this contract. Must be on UMA's collateral whitelist.\r\n     * @param _bondAmount Additional bond required, beyond the final fee.\r\n     * @param _additionReward Reward per address successfully added to the list, paid by the contract to the proposer.\r\n     * @param _removalReward Reward per address successfully removed from the list, paid by the contract to the proposer.\r\n     * @param _liveness The period, in seconds, in which a proposal can be disputed. Must be greater than 8 hours.\r\n     * @param _owner Owner of the contract can remove funds from the contract and adjust bondAmount, rewards and liveness.\r\n     * Set to the 0 address to make the contract a non-managed public good.\r\n     */\r\n    function createNewDecentralist(\r\n        bytes memory _listCriteria,\r\n        string memory _title,\r\n        address _token,\r\n        uint256 _bondAmount,\r\n        uint256 _additionReward,\r\n        uint256 _removalReward,\r\n        uint64 _liveness,\r\n        address _owner\r\n    ) external virtual returns(address instance);\r\n\r\n    /**\r\n     * @notice Returns all instances created.\r\n     */\r\n    function getAllClones() external view virtual returns (address[] memory);\r\n\r\n    /**\r\n     * @notice This pulls in the most up-to-date collateral whitelist.\r\n     * @dev If a new OptimisticOracle is added and this function is run between a list revision's proposal and execution,\r\n     * the proposal will become unexecutable.\r\n     */\r\n    function syncWhitelist() public virtual;\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":1000},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1108],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":1109,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1108,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1108],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1875:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2141:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/proxy/Clones.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","exportedSymbols":{"Clones":[192]},"id":193,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"Clones","contractDependencies":[],"contractKind":"library","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"125:629:1","text":" @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method.\n _Available since v3.4._"},"fullyImplemented":true,"id":192,"linearizedBaseContracts":[192],"name":"Clones","nameLocation":"763:6:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":134,"nodeType":"Block","src":"1048:684:1","statements":[{"AST":{"nodeType":"YulBlock","src":"1110:549:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1315:4:1","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1328:4:1","type":"","value":"0xe8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1338:4:1","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"1344:14:1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1334:3:1"},"nodeType":"YulFunctionCall","src":"1334:25:1"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1324:3:1"},"nodeType":"YulFunctionCall","src":"1324:36:1"},{"kind":"number","nodeType":"YulLiteral","src":"1362:48:1","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1321:2:1"},"nodeType":"YulFunctionCall","src":"1321:90:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1308:6:1"},"nodeType":"YulFunctionCall","src":"1308:104:1"},"nodeType":"YulExpressionStatement","src":"1308:104:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1533:4:1","type":"","value":"0x20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1546:4:1","type":"","value":"0x78"},{"name":"implementation","nodeType":"YulIdentifier","src":"1552:14:1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1542:3:1"},"nodeType":"YulFunctionCall","src":"1542:25:1"},{"kind":"number","nodeType":"YulLiteral","src":"1569:32:1","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1539:2:1"},"nodeType":"YulFunctionCall","src":"1539:63:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1526:6:1"},"nodeType":"YulFunctionCall","src":"1526:77:1"},"nodeType":"YulExpressionStatement","src":"1526:77:1"},{"nodeType":"YulAssignment","src":"1616:33:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1635:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1638:4:1","type":"","value":"0x09"},{"kind":"number","nodeType":"YulLiteral","src":"1644:4:1","type":"","value":"0x37"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"1628:6:1"},"nodeType":"YulFunctionCall","src":"1628:21:1"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"1616:8:1"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":118,"isOffset":false,"isSlot":false,"src":"1344:14:1","valueSize":1},{"declaration":118,"isOffset":false,"isSlot":false,"src":"1552:14:1","valueSize":1},{"declaration":121,"isOffset":false,"isSlot":false,"src":"1616:8:1","valueSize":1}],"id":123,"nodeType":"InlineAssembly","src":"1101:558:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":125,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"1676:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1696:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1688:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"1688:7:1","typeDescriptions":{}}},"id":129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1688:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1676:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313136373a20637265617465206661696c6564","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1700:24:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335","typeString":"literal_string \"ERC1167: create failed\""},"value":"ERC1167: create failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335","typeString":"literal_string \"ERC1167: create failed\""}],"id":124,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1668:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1668:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":133,"nodeType":"ExpressionStatement","src":"1668:57:1"}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"776:192:1","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."},"id":135,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"982:5:1","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"implementation","nameLocation":"996:14:1","nodeType":"VariableDeclaration","scope":135,"src":"988:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"987:24:1"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"instance","nameLocation":"1038:8:1","nodeType":"VariableDeclaration","scope":135,"src":"1030:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"1030:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1029:18:1"},"scope":192,"src":"973:759:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":156,"nodeType":"Block","src":"2209:692:1","statements":[{"AST":{"nodeType":"YulBlock","src":"2271:556:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2476:4:1","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2489:4:1","type":"","value":"0xe8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2499:4:1","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"2505:14:1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2495:3:1"},"nodeType":"YulFunctionCall","src":"2495:25:1"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2485:3:1"},"nodeType":"YulFunctionCall","src":"2485:36:1"},{"kind":"number","nodeType":"YulLiteral","src":"2523:48:1","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2482:2:1"},"nodeType":"YulFunctionCall","src":"2482:90:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2469:6:1"},"nodeType":"YulFunctionCall","src":"2469:104:1"},"nodeType":"YulExpressionStatement","src":"2469:104:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2694:4:1","type":"","value":"0x20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2707:4:1","type":"","value":"0x78"},{"name":"implementation","nodeType":"YulIdentifier","src":"2713:14:1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2703:3:1"},"nodeType":"YulFunctionCall","src":"2703:25:1"},{"kind":"number","nodeType":"YulLiteral","src":"2730:32:1","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2700:2:1"},"nodeType":"YulFunctionCall","src":"2700:63:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2687:6:1"},"nodeType":"YulFunctionCall","src":"2687:77:1"},"nodeType":"YulExpressionStatement","src":"2687:77:1"},{"nodeType":"YulAssignment","src":"2777:40:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2797:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2800:4:1","type":"","value":"0x09"},{"kind":"number","nodeType":"YulLiteral","src":"2806:4:1","type":"","value":"0x37"},{"name":"salt","nodeType":"YulIdentifier","src":"2812:4:1"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"2789:7:1"},"nodeType":"YulFunctionCall","src":"2789:28:1"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"2777:8:1"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":138,"isOffset":false,"isSlot":false,"src":"2505:14:1","valueSize":1},{"declaration":138,"isOffset":false,"isSlot":false,"src":"2713:14:1","valueSize":1},{"declaration":143,"isOffset":false,"isSlot":false,"src":"2777:8:1","valueSize":1},{"declaration":140,"isOffset":false,"isSlot":false,"src":"2812:4:1","valueSize":1}],"id":145,"nodeType":"InlineAssembly","src":"2262:565:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":147,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"2844:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2864:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2856:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":148,"name":"address","nodeType":"ElementaryTypeName","src":"2856:7:1","typeDescriptions":{}}},"id":151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2856:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2844:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313136373a2063726561746532206661696c6564","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2868:25:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73","typeString":"literal_string \"ERC1167: create2 failed\""},"value":"ERC1167: create2 failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73","typeString":"literal_string \"ERC1167: create2 failed\""}],"id":146,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2836:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2836:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":155,"nodeType":"ExpressionStatement","src":"2836:58:1"}]},"documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"1738:364:1","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."},"id":157,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"2116:18:1","nodeType":"FunctionDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"implementation","nameLocation":"2143:14:1","nodeType":"VariableDeclaration","scope":157,"src":"2135:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":137,"name":"address","nodeType":"ElementaryTypeName","src":"2135:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":140,"mutability":"mutable","name":"salt","nameLocation":"2167:4:1","nodeType":"VariableDeclaration","scope":157,"src":"2159:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2159:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2134:38:1"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"mutability":"mutable","name":"instance","nameLocation":"2199:8:1","nodeType":"VariableDeclaration","scope":157,"src":"2191:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":142,"name":"address","nodeType":"ElementaryTypeName","src":"2191:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2190:18:1"},"scope":192,"src":"2107:794:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":170,"nodeType":"Block","src":"3176:515:1","statements":[{"AST":{"nodeType":"YulBlock","src":"3238:447:1","statements":[{"nodeType":"YulVariableDeclaration","src":"3252:22:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3269:4:1","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3263:5:1"},"nodeType":"YulFunctionCall","src":"3263:11:1"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3256:3:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3298:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"3303:4:1","type":"","value":"0x38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3294:3:1"},"nodeType":"YulFunctionCall","src":"3294:14:1"},{"name":"deployer","nodeType":"YulIdentifier","src":"3310:8:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3287:6:1"},"nodeType":"YulFunctionCall","src":"3287:32:1"},"nodeType":"YulExpressionStatement","src":"3287:32:1"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3343:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"3348:4:1","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3339:3:1"},"nodeType":"YulFunctionCall","src":"3339:14:1"},{"kind":"number","nodeType":"YulLiteral","src":"3355:34:1","type":"","value":"0x5af43d82803e903d91602b57fd5bf3ff"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3332:6:1"},"nodeType":"YulFunctionCall","src":"3332:58:1"},"nodeType":"YulExpressionStatement","src":"3332:58:1"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3414:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"3419:4:1","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3410:3:1"},"nodeType":"YulFunctionCall","src":"3410:14:1"},{"name":"implementation","nodeType":"YulIdentifier","src":"3426:14:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3403:6:1"},"nodeType":"YulFunctionCall","src":"3403:38:1"},"nodeType":"YulExpressionStatement","src":"3403:38:1"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3461:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"3466:42:1","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3454:6:1"},"nodeType":"YulFunctionCall","src":"3454:55:1"},"nodeType":"YulExpressionStatement","src":"3454:55:1"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3533:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"3538:4:1","type":"","value":"0x58"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3529:3:1"},"nodeType":"YulFunctionCall","src":"3529:14:1"},{"name":"salt","nodeType":"YulIdentifier","src":"3545:4:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3522:6:1"},"nodeType":"YulFunctionCall","src":"3522:28:1"},"nodeType":"YulExpressionStatement","src":"3522:28:1"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3574:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"3579:4:1","type":"","value":"0x78"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3570:3:1"},"nodeType":"YulFunctionCall","src":"3570:14:1"},{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3600:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"3605:4:1","type":"","value":"0x0c"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3596:3:1"},"nodeType":"YulFunctionCall","src":"3596:14:1"},{"kind":"number","nodeType":"YulLiteral","src":"3612:4:1","type":"","value":"0x37"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3586:9:1"},"nodeType":"YulFunctionCall","src":"3586:31:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3563:6:1"},"nodeType":"YulFunctionCall","src":"3563:55:1"},"nodeType":"YulExpressionStatement","src":"3563:55:1"},{"nodeType":"YulAssignment","src":"3631:44:1","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3658:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"3663:4:1","type":"","value":"0x43"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3654:3:1"},"nodeType":"YulFunctionCall","src":"3654:14:1"},{"kind":"number","nodeType":"YulLiteral","src":"3670:4:1","type":"","value":"0x55"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3644:9:1"},"nodeType":"YulFunctionCall","src":"3644:31:1"},"variableNames":[{"name":"predicted","nodeType":"YulIdentifier","src":"3631:9:1"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":164,"isOffset":false,"isSlot":false,"src":"3310:8:1","valueSize":1},{"declaration":160,"isOffset":false,"isSlot":false,"src":"3426:14:1","valueSize":1},{"declaration":167,"isOffset":false,"isSlot":false,"src":"3631:9:1","valueSize":1},{"declaration":162,"isOffset":false,"isSlot":false,"src":"3545:4:1","valueSize":1}],"id":169,"nodeType":"InlineAssembly","src":"3229:456:1"}]},"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"2907:99:1","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":171,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"3020:27:1","nodeType":"FunctionDefinition","parameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"implementation","nameLocation":"3065:14:1","nodeType":"VariableDeclaration","scope":171,"src":"3057:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"3057:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"salt","nameLocation":"3097:4:1","nodeType":"VariableDeclaration","scope":171,"src":"3089:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3089:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"deployer","nameLocation":"3119:8:1","nodeType":"VariableDeclaration","scope":171,"src":"3111:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"3111:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3047:86:1"},"returnParameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"predicted","nameLocation":"3165:9:1","nodeType":"VariableDeclaration","scope":171,"src":"3157:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3157:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3156:19:1"},"scope":192,"src":"3011:680:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":190,"nodeType":"Block","src":"3946:88:1","statements":[{"expression":{"arguments":[{"id":182,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"3991:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":183,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"4007:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":186,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4021:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$192","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$192","typeString":"library Clones"}],"id":185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4013:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:1","typeDescriptions":{}}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4013:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":181,"name":"predictDeterministicAddress","nodeType":"Identifier","overloadedDeclarations":[171,191],"referencedDeclaration":171,"src":"3963:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes32,address) pure returns (address)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3963:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":180,"id":189,"nodeType":"Return","src":"3956:71:1"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"3697:99:1","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":191,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"3810:27:1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"implementation","nameLocation":"3846:14:1","nodeType":"VariableDeclaration","scope":191,"src":"3838:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"3838:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"salt","nameLocation":"3870:4:1","nodeType":"VariableDeclaration","scope":191,"src":"3862:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3862:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3837:38:1"},"returnParameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"mutability":"mutable","name":"predicted","nameLocation":"3931:9:1","nodeType":"VariableDeclaration","scope":191,"src":"3923:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":178,"name":"address","nodeType":"ElementaryTypeName","src":"3923:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3922:19:1"},"scope":192,"src":"3801:233:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":193,"src":"755:3281:1","usedErrors":[]}],"src":"100:3937:1"},"id":1},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","exportedSymbols":{"Address":[1086],"Initializable":[361]},"id":362,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":194,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":195,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":362,"sourceUnit":1087,"src":"138:33:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"173:2198:2","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":361,"linearizedBaseContracts":[361],"name":"Initializable","nameLocation":"2390:13:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"2410:109:2","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":199,"mutability":"mutable","name":"_initialized","nameLocation":"2538:12:2","nodeType":"VariableDeclaration","scope":361,"src":"2524:26:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":198,"name":"uint8","nodeType":"ElementaryTypeName","src":"2524:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"2557:91:2","text":" @dev Indicates that the contract is in the process of being initialized."},"id":202,"mutability":"mutable","name":"_initializing","nameLocation":"2666:13:2","nodeType":"VariableDeclaration","scope":361,"src":"2653:26:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":201,"name":"bool","nodeType":"ElementaryTypeName","src":"2653:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"2686:90:2","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":207,"name":"Initialized","nameLocation":"2787:11:2","nodeType":"EventDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2805:7:2","nodeType":"VariableDeclaration","scope":207,"src":"2799:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":204,"name":"uint8","nodeType":"ElementaryTypeName","src":"2799:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2798:15:2"},"src":"2781:33:2"},{"body":{"id":262,"nodeType":"Block","src":"3247:472:2","statements":[{"assignments":[211],"declarations":[{"constant":false,"id":211,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3262:14:2","nodeType":"VariableDeclaration","scope":262,"src":"3257:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":210,"name":"bool","nodeType":"ElementaryTypeName","src":"3257:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":214,"initialValue":{"id":213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3279:14:2","subExpression":{"id":212,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"3280:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3257:36:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":216,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3325:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":217,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"3343:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3358:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3343:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3325:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":221,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3324:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3365:34:2","subExpression":{"arguments":[{"arguments":[{"id":226,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3393:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$361","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$361","typeString":"contract Initializable"}],"id":225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3385:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"3385:7:2","typeDescriptions":{}}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":222,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"3366:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1086_$","typeString":"type(library Address)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3374:10:2","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":774,"src":"3366:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3366:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":230,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"3403:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3419:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3403:17:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3365:55:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3364:57:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3324:97:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3435:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":215,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3303:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3303:190:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":238,"nodeType":"ExpressionStatement","src":"3303:190:2"},{"expression":{"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":239,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"3503:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3518:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3503:16:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":242,"nodeType":"ExpressionStatement","src":"3503:16:2"},{"condition":{"id":243,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3533:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":249,"nodeType":"IfStatement","src":"3529:65:2","trueBody":{"id":248,"nodeType":"Block","src":"3549:45:2","statements":[{"expression":{"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":244,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"3563:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3579:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3563:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":247,"nodeType":"ExpressionStatement","src":"3563:20:2"}]}},{"id":250,"nodeType":"PlaceholderStatement","src":"3603:1:2"},{"condition":{"id":251,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3618:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":261,"nodeType":"IfStatement","src":"3614:99:2","trueBody":{"id":260,"nodeType":"Block","src":"3634:79:2","statements":[{"expression":{"id":254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":252,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"3648:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3664:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3648:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":255,"nodeType":"ExpressionStatement","src":"3648:21:2"},{"eventCall":{"arguments":[{"hexValue":"31","id":257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":256,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"3688:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3688:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":259,"nodeType":"EmitStatement","src":"3683:19:2"}]}}]},"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"2820:399:2","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":263,"name":"initializer","nameLocation":"3233:11:2","nodeType":"ModifierDefinition","parameters":{"id":209,"nodeType":"ParameterList","parameters":[],"src":"3244:2:2"},"src":"3224:495:2","virtual":false,"visibility":"internal"},{"body":{"id":295,"nodeType":"Block","src":"4830:255:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4848:14:2","subExpression":{"id":269,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"4849:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":271,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"4866:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":272,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4881:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4866:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4848:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4890:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":268,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4840:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4840:99:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":277,"nodeType":"ExpressionStatement","src":"4840:99:2"},{"expression":{"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":278,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"4949:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":279,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4964:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4949:22:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":281,"nodeType":"ExpressionStatement","src":"4949:22:2"},{"expression":{"id":284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":282,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"4981:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4997:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4981:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":285,"nodeType":"ExpressionStatement","src":"4981:20:2"},{"id":286,"nodeType":"PlaceholderStatement","src":"5011:1:2"},{"expression":{"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":287,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"5022:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5038:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5022:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":290,"nodeType":"ExpressionStatement","src":"5022:21:2"},{"eventCall":{"arguments":[{"id":292,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"5070:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":291,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"5058:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5058:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":294,"nodeType":"EmitStatement","src":"5053:25:2"}]},"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"3725:1062:2","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":296,"name":"reinitializer","nameLocation":"4801:13:2","nodeType":"ModifierDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"version","nameLocation":"4821:7:2","nodeType":"VariableDeclaration","scope":296,"src":"4815:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":265,"name":"uint8","nodeType":"ElementaryTypeName","src":"4815:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4814:15:2"},"src":"4792:293:2","virtual":false,"visibility":"internal"},{"body":{"id":305,"nodeType":"Block","src":"5323:97:2","statements":[{"expression":{"arguments":[{"id":300,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"5341:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5356:45:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":299,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5333:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5333:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":303,"nodeType":"ExpressionStatement","src":"5333:69:2"},{"id":304,"nodeType":"PlaceholderStatement","src":"5412:1:2"}]},"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"5091:199:2","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":306,"name":"onlyInitializing","nameLocation":"5304:16:2","nodeType":"ModifierDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[],"src":"5320:2:2"},"src":"5295:125:2","virtual":false,"visibility":"internal"},{"body":{"id":341,"nodeType":"Block","src":"5955:230:2","statements":[{"expression":{"arguments":[{"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5973:14:2","subExpression":{"id":311,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"5974:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5989:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5965:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5965:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":315,"nodeType":"ExpressionStatement","src":"5965:66:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":316,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"6045:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6065:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":318,"name":"uint8","nodeType":"ElementaryTypeName","src":"6065:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":317,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6060:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6060:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6072:3:2","memberName":"max","nodeType":"MemberAccess","src":"6060:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6045:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":340,"nodeType":"IfStatement","src":"6041:138:2","trueBody":{"id":339,"nodeType":"Block","src":"6077:102:2","statements":[{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":323,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"6091:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":325,"name":"uint8","nodeType":"ElementaryTypeName","src":"6111:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":324,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6106:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6106:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6118:3:2","memberName":"max","nodeType":"MemberAccess","src":"6106:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6091:30:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":330,"nodeType":"ExpressionStatement","src":"6091:30:2"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6157:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":333,"name":"uint8","nodeType":"ElementaryTypeName","src":"6157:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":332,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6152:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6152:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6164:3:2","memberName":"max","nodeType":"MemberAccess","src":"6152:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":331,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"6140:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":338,"nodeType":"EmitStatement","src":"6135:33:2"}]}}]},"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"5426:475:2","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":342,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5915:20:2","nodeType":"FunctionDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"5935:2:2"},"returnParameters":{"id":309,"nodeType":"ParameterList","parameters":[],"src":"5955:0:2"},"scope":361,"src":"5906:279:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":350,"nodeType":"Block","src":"6359:36:2","statements":[{"expression":{"id":348,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"6376:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":347,"id":349,"nodeType":"Return","src":"6369:19:2"}]},"documentation":{"id":343,"nodeType":"StructuredDocumentation","src":"6191:99:2","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":351,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6304:22:2","nodeType":"FunctionDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[],"src":"6326:2:2"},"returnParameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":351,"src":"6352:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":345,"name":"uint8","nodeType":"ElementaryTypeName","src":"6352:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6351:7:2"},"scope":361,"src":"6295:100:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":359,"nodeType":"Block","src":"6567:37:2","statements":[{"expression":{"id":357,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"6584:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":356,"id":358,"nodeType":"Return","src":"6577:20:2"}]},"documentation":{"id":352,"nodeType":"StructuredDocumentation","src":"6401:105:2","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":360,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6520:15:2","nodeType":"FunctionDefinition","parameters":{"id":353,"nodeType":"ParameterList","parameters":[],"src":"6535:2:2"},"returnParameters":{"id":356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":360,"src":"6561:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":354,"name":"bool","nodeType":"ElementaryTypeName","src":"6561:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6560:6:2"},"scope":361,"src":"6511:93:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":362,"src":"2372:4234:2","usedErrors":[]}],"src":"113:6494:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[439]},"id":440,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":363,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"131:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":439,"linearizedBaseContracts":[439],"name":"IERC20","nameLocation":"212:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"225:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":373,"name":"Transfer","nameLocation":"394:8:3","nodeType":"EventDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:3","nodeType":"VariableDeclaration","scope":373,"src":"403:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":369,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:3","nodeType":"VariableDeclaration","scope":373,"src":"425:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":371,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:3","nodeType":"VariableDeclaration","scope":373,"src":"445:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:3"},"src":"388:72:3"},{"anonymous":false,"documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"466:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":382,"name":"Approval","nameLocation":"625:8:3","nodeType":"EventDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:3","nodeType":"VariableDeclaration","scope":382,"src":"634:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":378,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:3","nodeType":"VariableDeclaration","scope":382,"src":"657:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":377,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":380,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:3","nodeType":"VariableDeclaration","scope":382,"src":"682:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":379,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:3"},"src":"619:78:3"},{"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"703:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":388,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":384,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":388,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":439,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"835:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":396,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":396,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":396,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":439,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"986:202:3","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":406,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:3","nodeType":"FunctionDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"to","nameLocation":"1219:2:3","nodeType":"VariableDeclaration","scope":406,"src":"1211:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":401,"mutability":"mutable","name":"amount","nameLocation":"1231:6:3","nodeType":"VariableDeclaration","scope":406,"src":"1223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":400,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:3"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":406,"src":"1257:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":403,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:3"},"scope":439,"src":"1193:70:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"1269:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":416,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:3","nodeType":"FunctionDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"owner","nameLocation":"1565:5:3","nodeType":"VariableDeclaration","scope":416,"src":"1557:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"spender","nameLocation":"1580:7:3","nodeType":"VariableDeclaration","scope":416,"src":"1572:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:3"},"returnParameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":416,"src":"1612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:3"},"scope":439,"src":"1538:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"1627:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":426,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:3","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"spender","nameLocation":"2299:7:3","nodeType":"VariableDeclaration","scope":426,"src":"2291:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"amount","nameLocation":"2316:6:3","nodeType":"VariableDeclaration","scope":426,"src":"2308:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":420,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:3"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"2342:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":423,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:3"},"scope":439,"src":"2274:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"2354:287:3","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":438,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:3","nodeType":"FunctionDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"from","nameLocation":"2685:4:3","nodeType":"VariableDeclaration","scope":438,"src":"2677:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"to","nameLocation":"2707:2:3","nodeType":"VariableDeclaration","scope":438,"src":"2699:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":430,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":433,"mutability":"mutable","name":"amount","nameLocation":"2727:6:3","nodeType":"VariableDeclaration","scope":438,"src":"2719:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":432,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:3"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"2758:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":435,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:3"},"scope":439,"src":"2646:118:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":440,"src":"202:2564:3","usedErrors":[]}],"src":"106:2661:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[475]},"id":476,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":441,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":442,"nodeType":"StructuredDocumentation","src":"139:480:4","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":475,"linearizedBaseContracts":[475],"name":"IERC20Permit","nameLocation":"630:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"649:792:4","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":460,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:4","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"owner","nameLocation":"1479:5:4","nodeType":"VariableDeclaration","scope":460,"src":"1471:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":447,"mutability":"mutable","name":"spender","nameLocation":"1502:7:4","nodeType":"VariableDeclaration","scope":460,"src":"1494:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"value","nameLocation":"1527:5:4","nodeType":"VariableDeclaration","scope":460,"src":"1519:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:4","nodeType":"VariableDeclaration","scope":460,"src":"1542:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":450,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":453,"mutability":"mutable","name":"v","nameLocation":"1574:1:4","nodeType":"VariableDeclaration","scope":460,"src":"1568:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":452,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"r","nameLocation":"1593:1:4","nodeType":"VariableDeclaration","scope":460,"src":"1585:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"s","nameLocation":"1612:1:4","nodeType":"VariableDeclaration","scope":460,"src":"1604:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:4"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"1628:0:4"},"scope":475,"src":"1446:183:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"1635:294:4","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":468,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:4","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"owner","nameLocation":"1958:5:4","nodeType":"VariableDeclaration","scope":468,"src":"1950:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:4"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":468,"src":"1988:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":465,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:4"},"scope":475,"src":"1934:63:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"2003:128:4","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":474,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:4","nodeType":"FunctionDefinition","parameters":{"id":470,"nodeType":"ParameterList","parameters":[],"src":"2214:2:4"},"returnParameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":474,"src":"2240:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:4"},"scope":475,"src":"2189:60:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":476,"src":"620:1631:4","usedErrors":[]}],"src":"114:2138:4"},"id":4},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1086],"IERC20":[439],"IERC20Permit":[475],"SafeERC20":[756]},"id":757,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":477,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":478,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":757,"sourceUnit":440,"src":"140:23:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"../extensions/draft-IERC20Permit.sol","id":479,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":757,"sourceUnit":476,"src":"164:46:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":480,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":757,"sourceUnit":1087,"src":"211:36:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"249:457:5","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":756,"linearizedBaseContracts":[756],"name":"SafeERC20","nameLocation":"715:9:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":484,"libraryName":{"id":482,"name":"Address","nameLocations":["737:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1086,"src":"737:7:5"},"nodeType":"UsingForDirective","src":"731:26:5","typeName":{"id":483,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":506,"nodeType":"Block","src":"865:103:5","statements":[{"expression":{"arguments":[{"id":495,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"895:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":498,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"925:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"931:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":406,"src":"925:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"940:8:5","memberName":"selector","nodeType":"MemberAccess","src":"925:23:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":501,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"950:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"954:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":496,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"902:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"906:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"902:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"902:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":494,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"875:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"875:86:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":505,"nodeType":"ExpressionStatement","src":"875:86:5"}]},"id":507,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"772:12:5","nodeType":"FunctionDefinition","parameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":487,"mutability":"mutable","name":"token","nameLocation":"801:5:5","nodeType":"VariableDeclaration","scope":507,"src":"794:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"},"typeName":{"id":486,"nodeType":"UserDefinedTypeName","pathNode":{"id":485,"name":"IERC20","nameLocations":["794:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":439,"src":"794:6:5"},"referencedDeclaration":439,"src":"794:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"to","nameLocation":"824:2:5","nodeType":"VariableDeclaration","scope":507,"src":"816:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"value","nameLocation":"844:5:5","nodeType":"VariableDeclaration","scope":507,"src":"836:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"784:71:5"},"returnParameters":{"id":493,"nodeType":"ParameterList","parameters":[],"src":"865:0:5"},"scope":756,"src":"763:205:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":532,"nodeType":"Block","src":"1102:113:5","statements":[{"expression":{"arguments":[{"id":520,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"1132:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":523,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"1162:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":438,"src":"1162:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:8:5","memberName":"selector","nodeType":"MemberAccess","src":"1162:27:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":526,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"1191:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":527,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"1197:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"1201:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":521,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1139:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1143:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1139:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1139:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":519,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"1112:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1112:96:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":531,"nodeType":"ExpressionStatement","src":"1112:96:5"}]},"id":533,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"983:16:5","nodeType":"FunctionDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"token","nameLocation":"1016:5:5","nodeType":"VariableDeclaration","scope":533,"src":"1009:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"},"typeName":{"id":509,"nodeType":"UserDefinedTypeName","pathNode":{"id":508,"name":"IERC20","nameLocations":["1009:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":439,"src":"1009:6:5"},"referencedDeclaration":439,"src":"1009:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"from","nameLocation":"1039:4:5","nodeType":"VariableDeclaration","scope":533,"src":"1031:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"to","nameLocation":"1061:2:5","nodeType":"VariableDeclaration","scope":533,"src":"1053:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":513,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"value","nameLocation":"1081:5:5","nodeType":"VariableDeclaration","scope":533,"src":"1073:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:93:5"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[],"src":"1102:0:5"},"scope":756,"src":"974:241:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":576,"nodeType":"Block","src":"1581:497:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"1830:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1830:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":548,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1829:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":553,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1870:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$756","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$756","typeString":"library SafeERC20"}],"id":552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1862:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:5","typeDescriptions":{}}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":555,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"1877:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":549,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"1846:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1852:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":416,"src":"1846:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1846:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1845:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1829:62:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1905:56:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":544,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1808:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1808:163:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"ExpressionStatement","src":"1808:163:5"},{"expression":{"arguments":[{"id":565,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"2001:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":568,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"2031:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2037:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":426,"src":"2031:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2045:8:5","memberName":"selector","nodeType":"MemberAccess","src":"2031:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":571,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"2055:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"2064:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":566,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2008:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2012:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2008:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":564,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"1981:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1981:90:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":575,"nodeType":"ExpressionStatement","src":"1981:90:5"}]},"documentation":{"id":534,"nodeType":"StructuredDocumentation","src":"1221:249:5","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":577,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1484:11:5","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"mutability":"mutable","name":"token","nameLocation":"1512:5:5","nodeType":"VariableDeclaration","scope":577,"src":"1505:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"},"typeName":{"id":536,"nodeType":"UserDefinedTypeName","pathNode":{"id":535,"name":"IERC20","nameLocations":["1505:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":439,"src":"1505:6:5"},"referencedDeclaration":439,"src":"1505:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":539,"mutability":"mutable","name":"spender","nameLocation":"1535:7:5","nodeType":"VariableDeclaration","scope":577,"src":"1527:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":538,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":541,"mutability":"mutable","name":"value","nameLocation":"1560:5:5","nodeType":"VariableDeclaration","scope":577,"src":"1552:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":540,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:76:5"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"1581:0:5"},"scope":756,"src":"1475:603:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":612,"nodeType":"Block","src":"2200:194:5","statements":[{"assignments":[588],"declarations":[{"constant":false,"id":588,"mutability":"mutable","name":"newAllowance","nameLocation":"2218:12:5","nodeType":"VariableDeclaration","scope":612,"src":"2210:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":587,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":599,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":593,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2257:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$756","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$756","typeString":"library SafeERC20"}],"id":592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2249:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:5","typeDescriptions":{}}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"2264:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":589,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"2233:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2239:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":416,"src":"2233:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2233:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"2275:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:47:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2210:70:5"},{"expression":{"arguments":[{"id":601,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"2310:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":604,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"2340:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2346:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":426,"src":"2340:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2354:8:5","memberName":"selector","nodeType":"MemberAccess","src":"2340:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":607,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"2364:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":608,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"2373:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":602,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2317:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2321:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2317:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":600,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"2290:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2290:97:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":611,"nodeType":"ExpressionStatement","src":"2290:97:5"}]},"id":613,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2093:21:5","nodeType":"FunctionDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"token","nameLocation":"2131:5:5","nodeType":"VariableDeclaration","scope":613,"src":"2124:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"},"typeName":{"id":579,"nodeType":"UserDefinedTypeName","pathNode":{"id":578,"name":"IERC20","nameLocations":["2124:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":439,"src":"2124:6:5"},"referencedDeclaration":439,"src":"2124:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"spender","nameLocation":"2154:7:5","nodeType":"VariableDeclaration","scope":613,"src":"2146:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"value","nameLocation":"2179:5:5","nodeType":"VariableDeclaration","scope":613,"src":"2171:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":583,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:76:5"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"2200:0:5"},"scope":756,"src":"2084:310:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":660,"nodeType":"Block","src":"2516:370:5","statements":[{"id":659,"nodeType":"UncheckedBlock","src":"2526:354:5","statements":[{"assignments":[624],"declarations":[{"constant":false,"id":624,"mutability":"mutable","name":"oldAllowance","nameLocation":"2558:12:5","nodeType":"VariableDeclaration","scope":659,"src":"2550:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":623,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":633,"initialValue":{"arguments":[{"arguments":[{"id":629,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2597:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$756","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$756","typeString":"library SafeERC20"}],"id":628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2589:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":627,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:5","typeDescriptions":{}}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":631,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"2604:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":625,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"2573:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2579:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":416,"src":"2573:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:62:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":635,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"2634:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"2650:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2634:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":634,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2626:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2626:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":640,"nodeType":"ExpressionStatement","src":"2626:75:5"},{"assignments":[642],"declarations":[{"constant":false,"id":642,"mutability":"mutable","name":"newAllowance","nameLocation":"2723:12:5","nodeType":"VariableDeclaration","scope":659,"src":"2715:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"2715:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":646,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":643,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"2738:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"2753:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2715:43:5"},{"expression":{"arguments":[{"id":648,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"2792:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":651,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"2822:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2828:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":426,"src":"2822:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2836:8:5","memberName":"selector","nodeType":"MemberAccess","src":"2822:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":654,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"2846:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":655,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"2855:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":649,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2799:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2803:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2799:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":647,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"2772:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:97:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":658,"nodeType":"ExpressionStatement","src":"2772:97:5"}]}]},"id":661,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2409:21:5","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"token","nameLocation":"2447:5:5","nodeType":"VariableDeclaration","scope":661,"src":"2440:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"},"typeName":{"id":615,"nodeType":"UserDefinedTypeName","pathNode":{"id":614,"name":"IERC20","nameLocations":["2440:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":439,"src":"2440:6:5"},"referencedDeclaration":439,"src":"2440:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":618,"mutability":"mutable","name":"spender","nameLocation":"2470:7:5","nodeType":"VariableDeclaration","scope":661,"src":"2462:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"value","nameLocation":"2495:5:5","nodeType":"VariableDeclaration","scope":661,"src":"2487:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:76:5"},"returnParameters":{"id":622,"nodeType":"ParameterList","parameters":[],"src":"2516:0:5"},"scope":756,"src":"2400:486:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":716,"nodeType":"Block","src":"3107:257:5","statements":[{"assignments":[682],"declarations":[{"constant":false,"id":682,"mutability":"mutable","name":"nonceBefore","nameLocation":"3125:11:5","nodeType":"VariableDeclaration","scope":716,"src":"3117:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":687,"initialValue":{"arguments":[{"id":685,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"3152:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":683,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3139:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$475","typeString":"contract IERC20Permit"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:6:5","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":468,"src":"3139:12:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3139:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3117:41:5"},{"expression":{"arguments":[{"id":691,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"3181:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":692,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"3188:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"3197:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":694,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"3204:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":695,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"3214:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":696,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"3217:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":697,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"3220:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":688,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3168:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$475","typeString":"contract IERC20Permit"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3174:6:5","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":460,"src":"3168:12:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":699,"nodeType":"ExpressionStatement","src":"3168:54:5"},{"assignments":[701],"declarations":[{"constant":false,"id":701,"mutability":"mutable","name":"nonceAfter","nameLocation":"3240:10:5","nodeType":"VariableDeclaration","scope":716,"src":"3232:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":700,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":706,"initialValue":{"arguments":[{"id":704,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"3266:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":702,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3253:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$475","typeString":"contract IERC20Permit"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3259:6:5","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":468,"src":"3253:12:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3253:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3232:40:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":708,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"3290:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":709,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3304:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3318:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3304:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3290:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3321:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":707,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3282:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":715,"nodeType":"ExpressionStatement","src":"3282:75:5"}]},"id":717,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"2901:10:5","nodeType":"FunctionDefinition","parameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"token","nameLocation":"2934:5:5","nodeType":"VariableDeclaration","scope":717,"src":"2921:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$475","typeString":"contract IERC20Permit"},"typeName":{"id":663,"nodeType":"UserDefinedTypeName","pathNode":{"id":662,"name":"IERC20Permit","nameLocations":["2921:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":475,"src":"2921:12:5"},"referencedDeclaration":475,"src":"2921:12:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$475","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"owner","nameLocation":"2957:5:5","nodeType":"VariableDeclaration","scope":717,"src":"2949:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"2949:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"mutability":"mutable","name":"spender","nameLocation":"2980:7:5","nodeType":"VariableDeclaration","scope":717,"src":"2972:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":670,"mutability":"mutable","name":"value","nameLocation":"3005:5:5","nodeType":"VariableDeclaration","scope":717,"src":"2997:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"2997:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":672,"mutability":"mutable","name":"deadline","nameLocation":"3028:8:5","nodeType":"VariableDeclaration","scope":717,"src":"3020:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":671,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":674,"mutability":"mutable","name":"v","nameLocation":"3052:1:5","nodeType":"VariableDeclaration","scope":717,"src":"3046:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":673,"name":"uint8","nodeType":"ElementaryTypeName","src":"3046:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":676,"mutability":"mutable","name":"r","nameLocation":"3071:1:5","nodeType":"VariableDeclaration","scope":717,"src":"3063:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":678,"mutability":"mutable","name":"s","nameLocation":"3090:1:5","nodeType":"VariableDeclaration","scope":717,"src":"3082:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2911:186:5"},"returnParameters":{"id":680,"nodeType":"ParameterList","parameters":[],"src":"3107:0:5"},"scope":756,"src":"2892:472:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":754,"nodeType":"Block","src":"3817:636:5","statements":[{"assignments":[727],"declarations":[{"constant":false,"id":727,"mutability":"mutable","name":"returndata","nameLocation":"4179:10:5","nodeType":"VariableDeclaration","scope":754,"src":"4166:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":726,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":736,"initialValue":{"arguments":[{"id":733,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"4220:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4226:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":730,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"4200:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:5","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4207:12:5","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":846,"src":"4192:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4166:95:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":737,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"4275:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4286:6:5","memberName":"length","nodeType":"MemberAccess","src":"4275:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4275:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":753,"nodeType":"IfStatement","src":"4271:176:5","trueBody":{"id":752,"nodeType":"Block","src":"4298:149:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":744,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"4370:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4383:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":745,"name":"bool","nodeType":"ElementaryTypeName","src":"4383:4:5","typeDescriptions":{}}}],"id":747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4382:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":742,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4359:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4363:6:5","memberName":"decode","nodeType":"MemberAccess","src":"4359:10:5","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4359:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4391:44:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":741,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4351:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4351:85:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":751,"nodeType":"ExpressionStatement","src":"4351:85:5"}]}}]},"documentation":{"id":718,"nodeType":"StructuredDocumentation","src":"3370:372:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":755,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3756:19:5","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":721,"mutability":"mutable","name":"token","nameLocation":"3783:5:5","nodeType":"VariableDeclaration","scope":755,"src":"3776:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"},"typeName":{"id":720,"nodeType":"UserDefinedTypeName","pathNode":{"id":719,"name":"IERC20","nameLocations":["3776:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":439,"src":"3776:6:5"},"referencedDeclaration":439,"src":"3776:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"data","nameLocation":"3803:4:5","nodeType":"VariableDeclaration","scope":755,"src":"3790:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":722,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:33:5"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[],"src":"3817:0:5"},"scope":756,"src":"3747:706:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":757,"src":"707:3748:5","usedErrors":[]}],"src":"115:4341:5"},"id":5},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1086]},"id":1087,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":758,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"126:67:6","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1086,"linearizedBaseContracts":[1086],"name":"Address","nameLocation":"202:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":773,"nodeType":"Block","src":"1241:254:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":767,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"1465:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1473:4:6","memberName":"code","nodeType":"MemberAccess","src":"1465:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1478:6:6","memberName":"length","nodeType":"MemberAccess","src":"1465:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":766,"id":772,"nodeType":"Return","src":"1458:30:6"}]},"documentation":{"id":760,"nodeType":"StructuredDocumentation","src":"216:954:6","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":774,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:6","nodeType":"FunctionDefinition","parameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"account","nameLocation":"1203:7:6","nodeType":"VariableDeclaration","scope":774,"src":"1195:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:6"},"returnParameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":774,"src":"1235:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":764,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:6"},"scope":1086,"src":"1175:320:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":807,"nodeType":"Block","src":"2483:241:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":785,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1086","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1086","typeString":"library Address"}],"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:6","typeDescriptions":{}}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:6","memberName":"balance","nodeType":"MemberAccess","src":"2501:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":788,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"2526:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":782,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"ExpressionStatement","src":"2493:73:6"},{"assignments":[794,null],"declarations":[{"constant":false,"id":794,"mutability":"mutable","name":"success","nameLocation":"2583:7:6","nodeType":"VariableDeclaration","scope":807,"src":"2578:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":793,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":801,"initialValue":{"arguments":[{"hexValue":"","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":795,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"2596:9:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:4:6","memberName":"call","nodeType":"MemberAccess","src":"2596:14:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":797,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"2618:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:6"},{"expression":{"arguments":[{"id":803,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"2647:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":802,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":806,"nodeType":"ExpressionStatement","src":"2639:78:6"}]},"documentation":{"id":775,"nodeType":"StructuredDocumentation","src":"1501:906:6","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":808,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:6","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:6","nodeType":"VariableDeclaration","scope":808,"src":"2431:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":779,"mutability":"mutable","name":"amount","nameLocation":"2466:6:6","nodeType":"VariableDeclaration","scope":808,"src":"2458:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:6"},"returnParameters":{"id":781,"nodeType":"ParameterList","parameters":[],"src":"2483:0:6"},"scope":1086,"src":"2412:312:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":825,"nodeType":"Block","src":"3555:96:6","statements":[{"expression":{"arguments":[{"id":819,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"3594:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"3602:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":818,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[866,910],"referencedDeclaration":910,"src":"3572:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":817,"id":824,"nodeType":"Return","src":"3565:79:6"}]},"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"2730:731:6","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":826,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:6","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"target","nameLocation":"3496:6:6","nodeType":"VariableDeclaration","scope":826,"src":"3488:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":813,"mutability":"mutable","name":"data","nameLocation":"3517:4:6","nodeType":"VariableDeclaration","scope":826,"src":"3504:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":812,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:6"},"returnParameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"3541:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":815,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:6"},"scope":1086,"src":"3466:185:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":845,"nodeType":"Block","src":"4020:76:6","statements":[{"expression":{"arguments":[{"id":839,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"4059:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":840,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"4067:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":842,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"4076:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":838,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[866,910],"referencedDeclaration":910,"src":"4037:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":837,"id":844,"nodeType":"Return","src":"4030:59:6"}]},"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"3657:211:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":846,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:6","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"target","nameLocation":"3912:6:6","nodeType":"VariableDeclaration","scope":846,"src":"3904:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"data","nameLocation":"3941:4:6","nodeType":"VariableDeclaration","scope":846,"src":"3928:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":830,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:6","nodeType":"VariableDeclaration","scope":846,"src":"3955:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":832,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:6"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":846,"src":"4006:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":835,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:6"},"scope":1086,"src":"3873:223:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":865,"nodeType":"Block","src":"4601:111:6","statements":[{"expression":{"arguments":[{"id":859,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"4640:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":860,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"4648:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"4654:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":858,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[866,910],"referencedDeclaration":910,"src":"4618:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4618:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":857,"id":864,"nodeType":"Return","src":"4611:94:6"}]},"documentation":{"id":847,"nodeType":"StructuredDocumentation","src":"4102:351:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":866,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:6","nodeType":"FunctionDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"target","nameLocation":"4506:6:6","nodeType":"VariableDeclaration","scope":866,"src":"4498:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"data","nameLocation":"4535:4:6","nodeType":"VariableDeclaration","scope":866,"src":"4522:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":850,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"value","nameLocation":"4557:5:6","nodeType":"VariableDeclaration","scope":866,"src":"4549:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:6"},"returnParameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":866,"src":"4587:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":855,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:6"},"scope":1086,"src":"4458:254:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":909,"nodeType":"Block","src":"5139:267:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":883,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1086","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1086","typeString":"library Address"}],"id":882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:6","typeDescriptions":{}}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5157:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5171:7:6","memberName":"balance","nodeType":"MemberAccess","src":"5157:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"5182:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":880,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5149:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":890,"nodeType":"ExpressionStatement","src":"5149:81:6"},{"assignments":[892,894],"declarations":[{"constant":false,"id":892,"mutability":"mutable","name":"success","nameLocation":"5246:7:6","nodeType":"VariableDeclaration","scope":909,"src":"5241:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":891,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:6","nodeType":"VariableDeclaration","scope":909,"src":"5255:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":893,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":901,"initialValue":{"arguments":[{"id":899,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"5308:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":895,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"5282:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5289:4:6","memberName":"call","nodeType":"MemberAccess","src":"5282:11:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"5301:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5282:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:6"},{"expression":{"arguments":[{"id":903,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"5357:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":904,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"5365:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":905,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"5374:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":906,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"5386:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":902,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"5330:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5330:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":879,"id":908,"nodeType":"Return","src":"5323:76:6"}]},"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"4718:237:6","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":910,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:6","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":869,"mutability":"mutable","name":"target","nameLocation":"5008:6:6","nodeType":"VariableDeclaration","scope":910,"src":"5000:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"data","nameLocation":"5037:4:6","nodeType":"VariableDeclaration","scope":910,"src":"5024:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":870,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"value","nameLocation":"5059:5:6","nodeType":"VariableDeclaration","scope":910,"src":"5051:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:6","nodeType":"VariableDeclaration","scope":910,"src":"5074:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":874,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:6"},"returnParameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":910,"src":"5125:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":877,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:6"},"scope":1086,"src":"4960:446:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":926,"nodeType":"Block","src":"5683:97:6","statements":[{"expression":{"arguments":[{"id":921,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"5719:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":922,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"5727:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":920,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[927,956],"referencedDeclaration":956,"src":"5700:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5700:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":919,"id":925,"nodeType":"Return","src":"5693:80:6"}]},"documentation":{"id":911,"nodeType":"StructuredDocumentation","src":"5412:166:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":927,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:6","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":913,"mutability":"mutable","name":"target","nameLocation":"5619:6:6","nodeType":"VariableDeclaration","scope":927,"src":"5611:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":912,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":915,"mutability":"mutable","name":"data","nameLocation":"5640:4:6","nodeType":"VariableDeclaration","scope":927,"src":"5627:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":914,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:6"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":927,"src":"5669:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":917,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:6"},"scope":1086,"src":"5583:197:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":955,"nodeType":"Block","src":"6122:168:6","statements":[{"assignments":[940,942],"declarations":[{"constant":false,"id":940,"mutability":"mutable","name":"success","nameLocation":"6138:7:6","nodeType":"VariableDeclaration","scope":955,"src":"6133:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":939,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":942,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:6","nodeType":"VariableDeclaration","scope":955,"src":"6147:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":941,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":947,"initialValue":{"arguments":[{"id":945,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"6192:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":943,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"6174:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:10:6","memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:6","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:6"},{"expression":{"arguments":[{"id":949,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"6241:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":950,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"6249:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":951,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"6258:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":952,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"6270:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":948,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"6214:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6214:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":938,"id":954,"nodeType":"Return","src":"6207:76:6"}]},"documentation":{"id":928,"nodeType":"StructuredDocumentation","src":"5786:173:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":956,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:6","nodeType":"FunctionDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"target","nameLocation":"6009:6:6","nodeType":"VariableDeclaration","scope":956,"src":"6001:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":932,"mutability":"mutable","name":"data","nameLocation":"6038:4:6","nodeType":"VariableDeclaration","scope":956,"src":"6025:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":931,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:6","nodeType":"VariableDeclaration","scope":956,"src":"6052:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":933,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:6"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":956,"src":"6108:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":936,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:6"},"scope":1086,"src":"5964:326:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":972,"nodeType":"Block","src":"6566:101:6","statements":[{"expression":{"arguments":[{"id":967,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"6604:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":968,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"6612:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":966,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[973,1002],"referencedDeclaration":1002,"src":"6583:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6583:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":965,"id":971,"nodeType":"Return","src":"6576:84:6"}]},"documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"6296:168:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":973,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:6","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"target","nameLocation":"6507:6:6","nodeType":"VariableDeclaration","scope":973,"src":"6499:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"data","nameLocation":"6528:4:6","nodeType":"VariableDeclaration","scope":973,"src":"6515:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":960,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:6"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":973,"src":"6552:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":963,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:6"},"scope":1086,"src":"6469:198:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1001,"nodeType":"Block","src":"7008:170:6","statements":[{"assignments":[986,988],"declarations":[{"constant":false,"id":986,"mutability":"mutable","name":"success","nameLocation":"7024:7:6","nodeType":"VariableDeclaration","scope":1001,"src":"7019:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":985,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:6","nodeType":"VariableDeclaration","scope":1001,"src":"7033:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":987,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":993,"initialValue":{"arguments":[{"id":991,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"7080:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":989,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"7060:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7067:12:6","memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:6","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7060:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:6"},{"expression":{"arguments":[{"id":995,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"7129:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":996,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"7137:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":997,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"7146:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":998,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"7158:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":994,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"7102:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7102:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":984,"id":1000,"nodeType":"Return","src":"7095:76:6"}]},"documentation":{"id":974,"nodeType":"StructuredDocumentation","src":"6673:175:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1002,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:6","nodeType":"FunctionDefinition","parameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"target","nameLocation":"6900:6:6","nodeType":"VariableDeclaration","scope":1002,"src":"6892:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"data","nameLocation":"6929:4:6","nodeType":"VariableDeclaration","scope":1002,"src":"6916:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":977,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:6","nodeType":"VariableDeclaration","scope":1002,"src":"6943:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":979,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:6"},"returnParameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1002,"src":"6994:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":982,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:6"},"scope":1086,"src":"6853:325:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1040,"nodeType":"Block","src":"7660:434:6","statements":[{"condition":{"id":1016,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7674:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1038,"nodeType":"Block","src":"8030:58:6","statements":[{"expression":{"arguments":[{"id":1034,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8052:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1035,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"8064:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1033,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"8044:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8044:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1037,"nodeType":"ExpressionStatement","src":"8044:33:6"}]},"id":1039,"nodeType":"IfStatement","src":"7670:418:6","trueBody":{"id":1032,"nodeType":"Block","src":"7683:341:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1017,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"7701:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7712:6:6","memberName":"length","nodeType":"MemberAccess","src":"7701:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1029,"nodeType":"IfStatement","src":"7697:286:6","trueBody":{"id":1028,"nodeType":"Block","src":"7725:258:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1023,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"7927:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1022,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"7916:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7916:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1021,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1027,"nodeType":"ExpressionStatement","src":"7908:60:6"}]}},{"expression":{"id":1030,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8003:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1015,"id":1031,"nodeType":"Return","src":"7996:17:6"}]}}]},"documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"7184:277:6","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1041,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:6","nodeType":"FunctionDefinition","parameters":{"id":1012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"target","nameLocation":"7519:6:6","nodeType":"VariableDeclaration","scope":1041,"src":"7511:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1007,"mutability":"mutable","name":"success","nameLocation":"7540:7:6","nodeType":"VariableDeclaration","scope":1041,"src":"7535:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1006,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1009,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:6","nodeType":"VariableDeclaration","scope":1041,"src":"7557:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1008,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:6","nodeType":"VariableDeclaration","scope":1041,"src":"7590:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1010,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:6"},"returnParameters":{"id":1015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1041,"src":"7646:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1013,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:6"},"scope":1086,"src":"7466:628:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1064,"nodeType":"Block","src":"8475:135:6","statements":[{"condition":{"id":1053,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"8489:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1062,"nodeType":"Block","src":"8546:58:6","statements":[{"expression":{"arguments":[{"id":1058,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"8568:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1059,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"8580:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1057,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"8560:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1061,"nodeType":"ExpressionStatement","src":"8560:33:6"}]},"id":1063,"nodeType":"IfStatement","src":"8485:119:6","trueBody":{"id":1056,"nodeType":"Block","src":"8498:42:6","statements":[{"expression":{"id":1054,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"8519:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1052,"id":1055,"nodeType":"Return","src":"8512:17:6"}]}}]},"documentation":{"id":1042,"nodeType":"StructuredDocumentation","src":"8100:210:6","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1065,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:6","nodeType":"FunctionDefinition","parameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"success","nameLocation":"8355:7:6","nodeType":"VariableDeclaration","scope":1065,"src":"8350:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1043,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:6","nodeType":"VariableDeclaration","scope":1065,"src":"8372:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1045,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:6","nodeType":"VariableDeclaration","scope":1065,"src":"8405:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1047,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:6"},"returnParameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1065,"src":"8461:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1050,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:6"},"scope":1086,"src":"8315:295:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1084,"nodeType":"Block","src":"8699:457:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1072,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"8775:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8786:6:6","memberName":"length","nodeType":"MemberAccess","src":"8775:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1082,"nodeType":"Block","src":"9105:45:6","statements":[{"expression":{"arguments":[{"id":1079,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"9126:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1078,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9119:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1081,"nodeType":"ExpressionStatement","src":"9119:20:6"}]},"id":1083,"nodeType":"IfStatement","src":"8771:379:6","trueBody":{"id":1077,"nodeType":"Block","src":"8798:301:6","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:6","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:6","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:6"},"nodeType":"YulFunctionCall","src":"8997:17:6"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:6","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:6"},"nodeType":"YulFunctionCall","src":"9038:19:6"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:6"},"nodeType":"YulFunctionCall","src":"9031:44:6"},"nodeType":"YulExpressionStatement","src":"9031:44:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1067,"isOffset":false,"isSlot":false,"src":"9003:10:6","valueSize":1},{"declaration":1067,"isOffset":false,"isSlot":false,"src":"9046:10:6","valueSize":1}],"id":1076,"nodeType":"InlineAssembly","src":"8947:142:6"}]}}]},"id":1085,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:6","nodeType":"FunctionDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:6","nodeType":"VariableDeclaration","scope":1085,"src":"8633:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1066,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:6","nodeType":"VariableDeclaration","scope":1085,"src":"8658:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1068,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:6"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"8699:0:6"},"scope":1086,"src":"8616:540:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1087,"src":"194:8964:6","usedErrors":[]}],"src":"101:9058:6"},"id":6},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1108]},"id":1109,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1088,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:7"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1089,"nodeType":"StructuredDocumentation","src":"111:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1108,"linearizedBaseContracts":[1108],"name":"Context","nameLocation":"626:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1097,"nodeType":"Block","src":"702:34:7","statements":[{"expression":{"expression":{"id":1094,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:7","memberName":"sender","nodeType":"MemberAccess","src":"719:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1093,"id":1096,"nodeType":"Return","src":"712:17:7"}]},"id":1098,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:7","nodeType":"FunctionDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[],"src":"659:2:7"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1098,"src":"693:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:7"},"scope":1108,"src":"640:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1106,"nodeType":"Block","src":"809:32:7","statements":[{"expression":{"expression":{"id":1103,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:7","memberName":"data","nodeType":"MemberAccess","src":"826:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1102,"id":1105,"nodeType":"Return","src":"819:15:7"}]},"id":1107,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:7","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[],"src":"759:2:7"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1107,"src":"793:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1100,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:7"},"scope":1108,"src":"742:99:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1109,"src":"608:235:7","usedErrors":[]}],"src":"86:758:7"},"id":7},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[1420]},"id":1421,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1110,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"285:196:8","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":1420,"linearizedBaseContracts":[1420],"name":"SafeMath","nameLocation":"490:8:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1142,"nodeType":"Block","src":"717:140:8","statements":[{"id":1141,"nodeType":"UncheckedBlock","src":"727:124:8","statements":[{"assignments":[1124],"declarations":[{"constant":false,"id":1124,"mutability":"mutable","name":"c","nameLocation":"759:1:8","nodeType":"VariableDeclaration","scope":1141,"src":"751:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1128,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1125,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"763:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1126,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"767:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1129,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"786:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1130,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"790:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1136,"nodeType":"IfStatement","src":"782:28:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1122,"id":1135,"nodeType":"Return","src":"793:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1138,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"838:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1139,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1122,"id":1140,"nodeType":"Return","src":"824:16:8"}]}]},"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"505:131:8","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1143,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:8","nodeType":"FunctionDefinition","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"a","nameLocation":"665:1:8","nodeType":"VariableDeclaration","scope":1143,"src":"657:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1113,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1116,"mutability":"mutable","name":"b","nameLocation":"676:1:8","nodeType":"VariableDeclaration","scope":1143,"src":"668:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1115,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:8"},"returnParameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1143,"src":"702:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1118,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1143,"src":"708:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:8"},"scope":1420,"src":"641:216:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1170,"nodeType":"Block","src":"1078:113:8","statements":[{"id":1169,"nodeType":"UncheckedBlock","src":"1088:97:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1155,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"1116:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1156,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"1120:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1162,"nodeType":"IfStatement","src":"1112:28:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1154,"id":1161,"nodeType":"Return","src":"1123:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1164,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"1168:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1165,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"1172:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1154,"id":1168,"nodeType":"Return","src":"1154:20:8"}]}]},"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"863:134:8","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1171,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:8","nodeType":"FunctionDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"a","nameLocation":"1026:1:8","nodeType":"VariableDeclaration","scope":1171,"src":"1018:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1148,"mutability":"mutable","name":"b","nameLocation":"1037:1:8","nodeType":"VariableDeclaration","scope":1171,"src":"1029:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:8"},"returnParameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1171,"src":"1063:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1150,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1171,"src":"1069:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:8"},"scope":1420,"src":"1002:189:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1212,"nodeType":"Block","src":"1415:417:8","statements":[{"id":1211,"nodeType":"UncheckedBlock","src":"1425:401:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1183,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"1683:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1190,"nodeType":"IfStatement","src":"1679:28:8","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1188,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1182,"id":1189,"nodeType":"Return","src":"1691:16:8"}},{"assignments":[1192],"declarations":[{"constant":false,"id":1192,"mutability":"mutable","name":"c","nameLocation":"1729:1:8","nodeType":"VariableDeclaration","scope":1211,"src":"1721:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1196,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1193,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"1733:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1194,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"1737:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1197,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"1756:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1198,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"1760:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1200,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"1765:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1206,"nodeType":"IfStatement","src":"1752:33:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1182,"id":1205,"nodeType":"Return","src":"1768:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1208,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"1813:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1182,"id":1210,"nodeType":"Return","src":"1799:16:8"}]}]},"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"1197:137:8","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1213,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:8","nodeType":"FunctionDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"a","nameLocation":"1363:1:8","nodeType":"VariableDeclaration","scope":1213,"src":"1355:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"b","nameLocation":"1374:1:8","nodeType":"VariableDeclaration","scope":1213,"src":"1366:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:8"},"returnParameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1213,"src":"1400:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1178,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1213,"src":"1406:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:8"},"scope":1420,"src":"1339:493:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1240,"nodeType":"Block","src":"2057:114:8","statements":[{"id":1239,"nodeType":"UncheckedBlock","src":"2067:98:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1225,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"2095:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1232,"nodeType":"IfStatement","src":"2091:29:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1224,"id":1231,"nodeType":"Return","src":"2103:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1234,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"2148:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1235,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"2152:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1237,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1224,"id":1238,"nodeType":"Return","src":"2134:20:8"}]}]},"documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"1838:138:8","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":1241,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:8","nodeType":"FunctionDefinition","parameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"a","nameLocation":"2005:1:8","nodeType":"VariableDeclaration","scope":1241,"src":"1997:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1215,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1218,"mutability":"mutable","name":"b","nameLocation":"2016:1:8","nodeType":"VariableDeclaration","scope":1241,"src":"2008:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:8"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1241,"src":"2042:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1220,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1241,"src":"2048:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:8"},"scope":1420,"src":"1981:190:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1268,"nodeType":"Block","src":"2406:114:8","statements":[{"id":1267,"nodeType":"UncheckedBlock","src":"2416:98:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1253,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"2444:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1260,"nodeType":"IfStatement","src":"2440:29:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1252,"id":1259,"nodeType":"Return","src":"2452:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1262,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"2497:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1263,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"2501:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1252,"id":1266,"nodeType":"Return","src":"2483:20:8"}]}]},"documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"2177:148:8","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":1269,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:8","nodeType":"FunctionDefinition","parameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"mutability":"mutable","name":"a","nameLocation":"2354:1:8","nodeType":"VariableDeclaration","scope":1269,"src":"2346:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1246,"mutability":"mutable","name":"b","nameLocation":"2365:1:8","nodeType":"VariableDeclaration","scope":1269,"src":"2357:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:8"},"returnParameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1269,"src":"2391:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1248,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1269,"src":"2397:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:8"},"scope":1420,"src":"2330:190:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1283,"nodeType":"Block","src":"2822:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1279,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"2839:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1280,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"2843:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1278,"id":1282,"nodeType":"Return","src":"2832:12:8"}]},"documentation":{"id":1270,"nodeType":"StructuredDocumentation","src":"2526:224:8","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:8","nodeType":"FunctionDefinition","parameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"a","nameLocation":"2776:1:8","nodeType":"VariableDeclaration","scope":1284,"src":"2768:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"b","nameLocation":"2787:1:8","nodeType":"VariableDeclaration","scope":1284,"src":"2779:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:8"},"returnParameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1284,"src":"2813:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:8"},"scope":1420,"src":"2755:96:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1298,"nodeType":"Block","src":"3189:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1294,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"3206:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1295,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"3210:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1293,"id":1297,"nodeType":"Return","src":"3199:12:8"}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"2857:260:8","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1299,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:8","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"a","nameLocation":"3143:1:8","nodeType":"VariableDeclaration","scope":1299,"src":"3135:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"b","nameLocation":"3154:1:8","nodeType":"VariableDeclaration","scope":1299,"src":"3146:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:8"},"returnParameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1299,"src":"3180:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:8"},"scope":1420,"src":"3122:96:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1313,"nodeType":"Block","src":"3532:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1309,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"3549:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1310,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"3553:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1308,"id":1312,"nodeType":"Return","src":"3542:12:8"}]},"documentation":{"id":1300,"nodeType":"StructuredDocumentation","src":"3224:236:8","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":1314,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:8","nodeType":"FunctionDefinition","parameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"mutability":"mutable","name":"a","nameLocation":"3486:1:8","nodeType":"VariableDeclaration","scope":1314,"src":"3478:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1304,"mutability":"mutable","name":"b","nameLocation":"3497:1:8","nodeType":"VariableDeclaration","scope":1314,"src":"3489:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1303,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:8"},"returnParameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1314,"src":"3523:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1306,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:8"},"scope":1420,"src":"3465:96:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1328,"nodeType":"Block","src":"3917:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1324,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"3934:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1325,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3938:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1323,"id":1327,"nodeType":"Return","src":"3927:12:8"}]},"documentation":{"id":1315,"nodeType":"StructuredDocumentation","src":"3567:278:8","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":1329,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:8","nodeType":"FunctionDefinition","parameters":{"id":1320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"a","nameLocation":"3871:1:8","nodeType":"VariableDeclaration","scope":1329,"src":"3863:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1319,"mutability":"mutable","name":"b","nameLocation":"3882:1:8","nodeType":"VariableDeclaration","scope":1329,"src":"3874:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1318,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:8"},"returnParameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1329,"src":"3908:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:8"},"scope":1420,"src":"3850:96:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1343,"nodeType":"Block","src":"4466:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1339,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"4483:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1340,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"4487:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1338,"id":1342,"nodeType":"Return","src":"4476:12:8"}]},"documentation":{"id":1330,"nodeType":"StructuredDocumentation","src":"3952:442:8","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1344,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:8","nodeType":"FunctionDefinition","parameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"a","nameLocation":"4420:1:8","nodeType":"VariableDeclaration","scope":1344,"src":"4412:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1331,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1334,"mutability":"mutable","name":"b","nameLocation":"4431:1:8","nodeType":"VariableDeclaration","scope":1344,"src":"4423:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:8"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1344,"src":"4457:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1336,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:8"},"scope":1420,"src":"4399:96:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1368,"nodeType":"Block","src":"5084:106:8","statements":[{"id":1367,"nodeType":"UncheckedBlock","src":"5094:90:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1357,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"5126:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1358,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"5131:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5126:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1360,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"5134:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1356,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5118:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5118:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1362,"nodeType":"ExpressionStatement","src":"5118:29:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1363,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"5168:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1364,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"5172:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1355,"id":1366,"nodeType":"Return","src":"5161:12:8"}]}]},"documentation":{"id":1345,"nodeType":"StructuredDocumentation","src":"4501:453:8","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1369,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:8","nodeType":"FunctionDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"a","nameLocation":"4989:1:8","nodeType":"VariableDeclaration","scope":1369,"src":"4981:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1346,"name":"uint256","nodeType":"ElementaryTypeName","src":"4981:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1349,"mutability":"mutable","name":"b","nameLocation":"5008:1:8","nodeType":"VariableDeclaration","scope":1369,"src":"5000:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"5000:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1351,"mutability":"mutable","name":"errorMessage","nameLocation":"5033:12:8","nodeType":"VariableDeclaration","scope":1369,"src":"5019:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1350,"name":"string","nodeType":"ElementaryTypeName","src":"5019:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:80:8"},"returnParameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1369,"src":"5075:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1353,"name":"uint256","nodeType":"ElementaryTypeName","src":"5075:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5074:9:8"},"scope":1420,"src":"4959:231:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1393,"nodeType":"Block","src":"5799:105:8","statements":[{"id":1392,"nodeType":"UncheckedBlock","src":"5809:89:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1382,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"5841:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5845:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5841:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1385,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"5848:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1381,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5833:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5833:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1387,"nodeType":"ExpressionStatement","src":"5833:28:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1388,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"5882:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1389,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"5886:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5882:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1380,"id":1391,"nodeType":"Return","src":"5875:12:8"}]}]},"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"5196:473:8","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1394,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5683:3:8","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"a","nameLocation":"5704:1:8","nodeType":"VariableDeclaration","scope":1394,"src":"5696:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"5696:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"b","nameLocation":"5723:1:8","nodeType":"VariableDeclaration","scope":1394,"src":"5715:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"errorMessage","nameLocation":"5748:12:8","nodeType":"VariableDeclaration","scope":1394,"src":"5734:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1375,"name":"string","nodeType":"ElementaryTypeName","src":"5734:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5686:80:8"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1394,"src":"5790:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1378,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5789:9:8"},"scope":1420,"src":"5674:230:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1418,"nodeType":"Block","src":"6675:105:8","statements":[{"id":1417,"nodeType":"UncheckedBlock","src":"6685:89:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1407,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"6717:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6721:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6717:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1410,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"6724:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1406,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6709:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6709:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1412,"nodeType":"ExpressionStatement","src":"6709:28:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1413,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"6758:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1414,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"6762:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6758:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1405,"id":1416,"nodeType":"Return","src":"6751:12:8"}]}]},"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"5910:635:8","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1419,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6559:3:8","nodeType":"FunctionDefinition","parameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"a","nameLocation":"6580:1:8","nodeType":"VariableDeclaration","scope":1419,"src":"6572:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"6572:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"b","nameLocation":"6599:1:8","nodeType":"VariableDeclaration","scope":1419,"src":"6591:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"6591:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"errorMessage","nameLocation":"6624:12:8","nodeType":"VariableDeclaration","scope":1419,"src":"6610:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1400,"name":"string","nodeType":"ElementaryTypeName","src":"6610:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6562:80:8"},"returnParameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1419,"src":"6666:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"6666:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6665:9:8"},"scope":1420,"src":"6550:230:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1421,"src":"482:6300:8","usedErrors":[]}],"src":"107:6676:8"},"id":8},"@openzeppelin/contracts/utils/math/SignedSafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedSafeMath.sol","exportedSymbols":{"SignedSafeMath":[1484]},"id":1485,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1422,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"98:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedSafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1423,"nodeType":"StructuredDocumentation","src":"123:192:9","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SignedSafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":1484,"linearizedBaseContracts":[1484],"name":"SignedSafeMath","nameLocation":"324:14:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1437,"nodeType":"Block","src":"648:29:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1433,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"665:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1434,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"669:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"665:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1432,"id":1436,"nodeType":"Return","src":"658:12:9"}]},"documentation":{"id":1424,"nodeType":"StructuredDocumentation","src":"345:234:9","text":" @dev Returns the multiplication of two signed integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":1438,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"593:3:9","nodeType":"FunctionDefinition","parameters":{"id":1429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"a","nameLocation":"604:1:9","nodeType":"VariableDeclaration","scope":1438,"src":"597:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1425,"name":"int256","nodeType":"ElementaryTypeName","src":"597:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"b","nameLocation":"614:1:9","nodeType":"VariableDeclaration","scope":1438,"src":"607:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1427,"name":"int256","nodeType":"ElementaryTypeName","src":"607:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"596:20:9"},"returnParameters":{"id":1432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1438,"src":"640:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1430,"name":"int256","nodeType":"ElementaryTypeName","src":"640:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"639:8:9"},"scope":1484,"src":"584:93:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1452,"nodeType":"Block","src":"1026:29:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1448,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"1043:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1449,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"1047:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1043:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1447,"id":1451,"nodeType":"Return","src":"1036:12:9"}]},"documentation":{"id":1439,"nodeType":"StructuredDocumentation","src":"683:274:9","text":" @dev Returns the integer division of two signed integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":1453,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"971:3:9","nodeType":"FunctionDefinition","parameters":{"id":1444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"a","nameLocation":"982:1:9","nodeType":"VariableDeclaration","scope":1453,"src":"975:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1440,"name":"int256","nodeType":"ElementaryTypeName","src":"975:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"b","nameLocation":"992:1:9","nodeType":"VariableDeclaration","scope":1453,"src":"985:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1442,"name":"int256","nodeType":"ElementaryTypeName","src":"985:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"974:20:9"},"returnParameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1453,"src":"1018:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1445,"name":"int256","nodeType":"ElementaryTypeName","src":"1018:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1017:8:9"},"scope":1484,"src":"962:93:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1467,"nodeType":"Block","src":"1358:29:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1463,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"1375:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1464,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"1379:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1375:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1462,"id":1466,"nodeType":"Return","src":"1368:12:9"}]},"documentation":{"id":1454,"nodeType":"StructuredDocumentation","src":"1061:228:9","text":" @dev Returns the subtraction of two signed integers, reverting on\n overflow.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1468,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"1303:3:9","nodeType":"FunctionDefinition","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"a","nameLocation":"1314:1:9","nodeType":"VariableDeclaration","scope":1468,"src":"1307:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1455,"name":"int256","nodeType":"ElementaryTypeName","src":"1307:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"b","nameLocation":"1324:1:9","nodeType":"VariableDeclaration","scope":1468,"src":"1317:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1457,"name":"int256","nodeType":"ElementaryTypeName","src":"1317:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1306:20:9"},"returnParameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1468,"src":"1350:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1460,"name":"int256","nodeType":"ElementaryTypeName","src":"1350:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1349:8:9"},"scope":1484,"src":"1294:93:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1482,"nodeType":"Block","src":"1684:29:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1478,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"1701:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1479,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"1705:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1701:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1477,"id":1481,"nodeType":"Return","src":"1694:12:9"}]},"documentation":{"id":1469,"nodeType":"StructuredDocumentation","src":"1393:222:9","text":" @dev Returns the addition of two signed integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":1483,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"1629:3:9","nodeType":"FunctionDefinition","parameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"a","nameLocation":"1640:1:9","nodeType":"VariableDeclaration","scope":1483,"src":"1633:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1470,"name":"int256","nodeType":"ElementaryTypeName","src":"1633:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1473,"mutability":"mutable","name":"b","nameLocation":"1650:1:9","nodeType":"VariableDeclaration","scope":1483,"src":"1643:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1472,"name":"int256","nodeType":"ElementaryTypeName","src":"1643:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1632:20:9"},"returnParameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1483,"src":"1676:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1475,"name":"int256","nodeType":"ElementaryTypeName","src":"1676:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1675:8:9"},"scope":1484,"src":"1620:93:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1485,"src":"316:1399:9","usedErrors":[]}],"src":"98:1618:9"},"id":9},"@uma/core/contracts/common/implementation/AncillaryData.sol":{"ast":{"absolutePath":"@uma/core/contracts/common/implementation/AncillaryData.sol","exportedSymbols":{"AncillaryData":[1892]},"id":1893,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":1486,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"AncillaryData","contractDependencies":[],"contractKind":"library","documentation":{"id":1487,"nodeType":"StructuredDocumentation","src":"67:595:10","text":" @title Library for encoding and decoding ancillary data for DVM price requests.\n @notice  We assume that on-chain ancillary data can be formatted directly from bytes to utf8 encoding via\n web3.utils.hexToUtf8, and that clients will parse the utf8-encoded ancillary data as a comma-delimitted key-value\n dictionary. Therefore, this library provides internal methods that aid appending to ancillary data from Solidity\n smart contracts. More details on UMA's ancillary data guidelines below:\n https://docs.google.com/document/d/1zhKKjgY1BupBGPPrY_WOJvui0B6DMcd-xDR8-9-SPDw/edit"},"fullyImplemented":true,"id":1892,"linearizedBaseContracts":[1892],"name":"AncillaryData","nameLocation":"671:13:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1626,"nodeType":"Block","src":"974:1229:10","statements":[{"id":1625,"nodeType":"UncheckedBlock","src":"984:1213:10","statements":[{"assignments":[1495],"declarations":[{"constant":false,"id":1495,"mutability":"mutable","name":"x","nameLocation":"1016:1:10","nodeType":"VariableDeclaration","scope":1625,"src":"1008:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"1008:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1500,"initialValue":{"arguments":[{"id":1498,"name":"bytesIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"1028:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1020:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"1020:7:10","typeDescriptions":{}}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1008:28:10"},{"expression":{"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1501,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1084:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1502,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1088:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030306666666666666666666666666666666666666666666666666666666666666666","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1092:66:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0x00000000000000000000000000000000ffffffffffffffffffffffffffffffff"},"src":"1088:70:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1084:74:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1506,"nodeType":"ExpressionStatement","src":"1084:74:10"},{"expression":{"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1507,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1172:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1508,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1177:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1509,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1182:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":1512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1186:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1189:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"1186:5:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"1182:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1181:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1177:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1516,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1176:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030303030303030303030303030666666666666666666666666666666663030303030303030303030303030303066666666666666666666666666666666","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1196:66:10","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763495507056286727952657427581105975853055_by_1","typeString":"int_const 6277...(50 digits omitted)...3055"},"value":"0x0000000000000000ffffffffffffffff0000000000000000ffffffffffffffff"},"src":"1176:86:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1172:90:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1520,"nodeType":"ExpressionStatement","src":"1172:90:10"},{"expression":{"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1521,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1276:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1522,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1281:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1523,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1286:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":1526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1290:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1293:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1290:5:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"1286:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1528,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1285:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1281:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1530,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1280:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030303030306666666666666666303030303030303066666666666666663030303030303030666666666666666630303030303030306666666666666666","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1300:66:10","typeDescriptions":{"typeIdentifier":"t_rational_26959946660873538060741835960174461801791452538186943042387869433855_by_1","typeString":"int_const 2695...(60 digits omitted)...3855"},"value":"0x00000000ffffffff00000000ffffffff00000000ffffffff00000000ffffffff"},"src":"1280:86:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1276:90:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1534,"nodeType":"ExpressionStatement","src":"1276:90:10"},{"expression":{"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1535,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1380:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1536,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1385:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1537,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1390:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":1540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1394:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1397:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"1394:5:10","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"1390:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1542,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1389:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1385:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1544,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1384:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030666666663030303066666666303030306666666630303030666666663030303066666666303030306666666630303030666666663030303066666666","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1404:66:10","typeDescriptions":{"typeIdentifier":"t_rational_1766820105243087041267848467410591083712559083657179364930612997358944255_by_1","typeString":"int_const 1766...(65 digits omitted)...4255"},"value":"0x0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff"},"src":"1384:86:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1380:90:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1548,"nodeType":"ExpressionStatement","src":"1380:90:10"},{"expression":{"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1549,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1484:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1550,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1489:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1551,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1494:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1498:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1501:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1498:4:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"1494:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1556,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1493:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1489:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1558,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1488:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830306666303066663030666630306666303066663030666630306666303066663030666630306666303066663030666630306666303066663030666630306666","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1507:66:10","typeDescriptions":{"typeIdentifier":"t_rational_450552876409790643671482431940419874915447411150352389258589821042463539455_by_1","typeString":"int_const 4505...(67 digits omitted)...9455"},"value":"0x00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff"},"src":"1488:85:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1484:89:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1562,"nodeType":"ExpressionStatement","src":"1484:89:10"},{"expression":{"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1563,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1587:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1592:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1565,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1597:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":1568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1601:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1604:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1601:4:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"1597:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1570,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1596:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1592:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1572,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1591:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830663066306630663066306630663066306630663066306630663066306630663066306630663066306630663066306630663066306630663066306630663066","id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1610:66:10","typeDescriptions":{"typeIdentifier":"t_rational_6811299366900952671974763824040465167839410862684739061144563765171360567055_by_1","typeString":"int_const 6811...(68 digits omitted)...7055"},"value":"0x0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f"},"src":"1591:85:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1587:89:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1576,"nodeType":"ExpressionStatement","src":"1587:89:10"},{"assignments":[1578],"declarations":[{"constant":false,"id":1578,"mutability":"mutable","name":"h","nameLocation":"1725:1:10","nodeType":"VariableDeclaration","scope":1625,"src":"1717:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1717:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1585,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1579,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1730:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830383038303830383038303830383038303830383038303830383038303830383038303830383038303830383038303830383038303830383038303830383038","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1734:66:10","typeDescriptions":{"typeIdentifier":"t_rational_3632692995680508091719874039488248089514352460098527499277100674758058969096_by_1","typeString":"int_const 3632...(68 digits omitted)...9096"},"value":"0x0808080808080808080808080808080808080808080808080808080808080808"},"src":"1730:70:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1582,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1729:72:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"38","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1804:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1729:76:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1717:88:10"},{"assignments":[1587],"declarations":[{"constant":false,"id":1587,"mutability":"mutable","name":"i","nameLocation":"1827:1:10","nodeType":"VariableDeclaration","scope":1625,"src":"1819:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"1819:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1594,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1588,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1832:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830343034303430343034303430343034303430343034303430343034303430343034303430343034303430343034303430343034303430343034303430343034","id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:66:10","typeDescriptions":{"typeIdentifier":"t_rational_1816346497840254045859937019744124044757176230049263749638550337379029484548_by_1","typeString":"int_const 1816...(68 digits omitted)...4548"},"value":"0x0404040404040404040404040404040404040404040404040404040404040404"},"src":"1832:70:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1831:72:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"34","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1906:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1831:76:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1819:88:10"},{"assignments":[1596],"declarations":[{"constant":false,"id":1596,"mutability":"mutable","name":"j","nameLocation":"1929:1:10","nodeType":"VariableDeclaration","scope":1625,"src":"1921:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"1921:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1603,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1597,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1934:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830323032303230323032303230323032303230323032303230323032303230323032303230323032303230323032303230323032303230323032303230323032","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1938:66:10","typeDescriptions":{"typeIdentifier":"t_rational_908173248920127022929968509872062022378588115024631874819275168689514742274_by_1","typeString":"int_const 9081...(67 digits omitted)...2274"},"value":"0x0202020202020202020202020202020202020202020202020202020202020202"},"src":"1934:70:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1600,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1933:72:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2008:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1933:76:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1921:88:10"},{"expression":{"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1604,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"2023:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1605,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"2027:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1606,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"2032:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1607,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"2037:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":1608,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"2041:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2037:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1610,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2036:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2032:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2031:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783237","id":1613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2047:4:10","typeDescriptions":{"typeIdentifier":"t_rational_39_by_1","typeString":"int_const 39"},"value":"0x27"},"src":"2031:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2027:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"307833303330333033303330333033303330333033303330333033303330333033303330333033303330333033303330333033303330333033303330333033303330","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2054:66:10","typeDescriptions":{"typeIdentifier":"t_rational_21796157974083048550319244236929488537086114760591164995662604048548353814576_by_1","typeString":"int_const 2179...(69 digits omitted)...4576"},"value":"0x3030303030303030303030303030303030303030303030303030303030303030"},"src":"2027:93:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2023:97:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1619,"nodeType":"ExpressionStatement","src":"2023:97:10"},{"expression":{"arguments":[{"id":1622,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"2184:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2176:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2176:7:10","typeDescriptions":{}}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1493,"id":1624,"nodeType":"Return","src":"2169:17:10"}]}]},"id":1627,"implemented":true,"kind":"function","modifiers":[],"name":"toUtf8Bytes32Bottom","nameLocation":"906:19:10","nodeType":"FunctionDefinition","parameters":{"id":1490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"bytesIn","nameLocation":"934:7:10","nodeType":"VariableDeclaration","scope":1627,"src":"926:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"926:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"925:17:10"},"returnParameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1627,"src":"965:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"965:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"964:9:10"},"scope":1892,"src":"897:1306:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1647,"nodeType":"Block","src":"2661:107:10","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1638,"name":"bytesIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2715:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2726:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2715:14:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1637,"name":"toUtf8Bytes32Bottom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"2695:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2695:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1643,"name":"bytesIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2752:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1642,"name":"toUtf8Bytes32Bottom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"2732:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2732:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1635,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2678:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2682:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"2678:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2678:83:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1634,"id":1646,"nodeType":"Return","src":"2671:90:10"}]},"documentation":{"id":1628,"nodeType":"StructuredDocumentation","src":"2209:372:10","text":" @notice Returns utf8-encoded bytes32 string that can be read via web3.utils.hexToUtf8.\n @dev Will return bytes32 in all lower case hex characters and without the leading 0x.\n This has minor changes from the toUtf8BytesAddress to control for the size of the input.\n @param bytesIn bytes32 to encode.\n @return utf8 encoded bytes32."},"id":1648,"implemented":true,"kind":"function","modifiers":[],"name":"toUtf8Bytes","nameLocation":"2595:11:10","nodeType":"FunctionDefinition","parameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"bytesIn","nameLocation":"2615:7:10","nodeType":"VariableDeclaration","scope":1648,"src":"2607:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2607:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2606:17:10"},"returnParameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1648,"src":"2647:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1632,"name":"bytes","nodeType":"ElementaryTypeName","src":"2647:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2646:14:10"},"scope":1892,"src":"2586:182:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1680,"nodeType":"Block","src":"3221:142:10","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1663,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"3303:1:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3295:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1661,"name":"bytes20","nodeType":"ElementaryTypeName","src":"3295:7:10","typeDescriptions":{}}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3295:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3287:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3287:7:10","typeDescriptions":{}}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3287:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3310:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"3287:26:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1658,"name":"toUtf8Bytes32Bottom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"3267:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3267:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"arguments":[{"id":1674,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"3351:1:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3343:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1672,"name":"bytes20","nodeType":"ElementaryTypeName","src":"3343:7:10","typeDescriptions":{}}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3343:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":1671,"name":"toUtf8Bytes32Bottom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"3323:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3323:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3316:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes8_$","typeString":"type(bytes8)"},"typeName":{"id":1669,"name":"bytes8","nodeType":"ElementaryTypeName","src":"3316:6:10","typeDescriptions":{}}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3316:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"id":1656,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3250:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3254:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"3250:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3250:106:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1655,"id":1679,"nodeType":"Return","src":"3231:125:10"}]},"documentation":{"id":1649,"nodeType":"StructuredDocumentation","src":"2774:366:10","text":" @notice Returns utf8-encoded address that can be read via web3.utils.hexToUtf8.\n Source: https://ethereum.stackexchange.com/questions/8346/convert-address-to-string/8447#8447\n @dev Will return address in all lower case characters and without the leading 0x.\n @param x address to encode.\n @return utf8 encoded address bytes."},"id":1681,"implemented":true,"kind":"function","modifiers":[],"name":"toUtf8BytesAddress","nameLocation":"3154:18:10","nodeType":"FunctionDefinition","parameters":{"id":1652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1651,"mutability":"mutable","name":"x","nameLocation":"3181:1:10","nodeType":"VariableDeclaration","scope":1681,"src":"3173:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1650,"name":"address","nodeType":"ElementaryTypeName","src":"3173:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3172:11:10"},"returnParameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1681,"src":"3207:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1653,"name":"bytes","nodeType":"ElementaryTypeName","src":"3207:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3206:14:10"},"scope":1892,"src":"3145:218:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1773,"nodeType":"Block","src":"3642:473:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1689,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"3656:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3661:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3656:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1695,"nodeType":"IfStatement","src":"3652:47:10","trueBody":{"id":1694,"nodeType":"Block","src":"3664:35:10","statements":[{"expression":{"hexValue":"30","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3685:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":1688,"id":1693,"nodeType":"Return","src":"3678:10:10"}]}},{"assignments":[1697],"declarations":[{"constant":false,"id":1697,"mutability":"mutable","name":"j","nameLocation":"3716:1:10","nodeType":"VariableDeclaration","scope":1773,"src":"3708:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1696,"name":"uint256","nodeType":"ElementaryTypeName","src":"3708:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1699,"initialValue":{"id":1698,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"3720:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3708:13:10"},{"assignments":[1701],"declarations":[{"constant":false,"id":1701,"mutability":"mutable","name":"len","nameLocation":"3739:3:10","nodeType":"VariableDeclaration","scope":1773,"src":"3731:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"3731:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1702,"nodeType":"VariableDeclarationStatement","src":"3731:11:10"},{"body":{"id":1713,"nodeType":"Block","src":"3767:51:10","statements":[{"expression":{"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3781:5:10","subExpression":{"id":1706,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"3781:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1708,"nodeType":"ExpressionStatement","src":"3781:5:10"},{"expression":{"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1709,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"3800:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3805:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"3800:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1712,"nodeType":"ExpressionStatement","src":"3800:7:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1703,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"3759:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3764:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3759:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1714,"nodeType":"WhileStatement","src":"3752:66:10"},{"assignments":[1716],"declarations":[{"constant":false,"id":1716,"mutability":"mutable","name":"bstr","nameLocation":"3840:4:10","nodeType":"VariableDeclaration","scope":1773,"src":"3827:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1715,"name":"bytes","nodeType":"ElementaryTypeName","src":"3827:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1721,"initialValue":{"arguments":[{"id":1719,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"3857:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3847:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1717,"name":"bytes","nodeType":"ElementaryTypeName","src":"3851:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3847:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3827:34:10"},{"assignments":[1723],"declarations":[{"constant":false,"id":1723,"mutability":"mutable","name":"k","nameLocation":"3879:1:10","nodeType":"VariableDeclaration","scope":1773,"src":"3871:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"3871:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1725,"initialValue":{"id":1724,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"3883:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3871:15:10"},{"body":{"id":1769,"nodeType":"Block","src":"3911:177:10","statements":[{"expression":{"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1729,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"3925:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1730,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"3929:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3933:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3925:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1734,"nodeType":"ExpressionStatement","src":"3925:9:10"},{"assignments":[1736],"declarations":[{"constant":false,"id":1736,"mutability":"mutable","name":"temp","nameLocation":"3954:4:10","nodeType":"VariableDeclaration","scope":1769,"src":"3948:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1735,"name":"uint8","nodeType":"ElementaryTypeName","src":"3948:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1751,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3962:2:10","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1740,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"3973:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1741,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"3978:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130","id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3982:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"3978:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3977:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3988:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"3977:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3973:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3967:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1738,"name":"uint8","nodeType":"ElementaryTypeName","src":"3967:5:10","typeDescriptions":{}}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3967:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3962:29:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3961:31:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"3948:44:10"},{"assignments":[1753],"declarations":[{"constant":false,"id":1753,"mutability":"mutable","name":"b1","nameLocation":"4013:2:10","nodeType":"VariableDeclaration","scope":1769,"src":"4006:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1752,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4006:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":1758,"initialValue":{"arguments":[{"id":1756,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"4025:4:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4018:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1754,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4018:6:10","typeDescriptions":{}}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4018:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"4006:24:10"},{"expression":{"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1759,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"4044:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1761,"indexExpression":{"id":1760,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"4049:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4044:7:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1762,"name":"b1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"4054:2:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4044:12:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1764,"nodeType":"ExpressionStatement","src":"4044:12:10"},{"expression":{"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1765,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"4070:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4075:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4070:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1768,"nodeType":"ExpressionStatement","src":"4070:7:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1726,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"3903:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3908:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3903:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1770,"nodeType":"WhileStatement","src":"3896:192:10"},{"expression":{"id":1771,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"4104:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1688,"id":1772,"nodeType":"Return","src":"4097:11:10"}]},"documentation":{"id":1682,"nodeType":"StructuredDocumentation","src":"3369:195:10","text":" @notice Converts a uint into a base-10, UTF-8 representation stored in a `string` type.\n @dev This method is based off of this code: https://stackoverflow.com/a/65707309."},"id":1774,"implemented":true,"kind":"function","modifiers":[],"name":"toUtf8BytesUint","nameLocation":"3578:15:10","nodeType":"FunctionDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"x","nameLocation":"3602:1:10","nodeType":"VariableDeclaration","scope":1774,"src":"3594:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"3594:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3593:11:10"},"returnParameters":{"id":1688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1774,"src":"3628:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1686,"name":"bytes","nodeType":"ElementaryTypeName","src":"3628:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3627:14:10"},"scope":1892,"src":"3569:546:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1801,"nodeType":"Block","src":"4287:164:10","statements":[{"assignments":[1786],"declarations":[{"constant":false,"id":1786,"mutability":"mutable","name":"prefix","nameLocation":"4310:6:10","nodeType":"VariableDeclaration","scope":1801,"src":"4297:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1785,"name":"bytes","nodeType":"ElementaryTypeName","src":"4297:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1791,"initialValue":{"arguments":[{"id":1788,"name":"currentAncillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"4335:20:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1789,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"4357:3:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1787,"name":"constructPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"4319:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory) pure returns (bytes memory)"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4297:64:10"},{"expression":{"arguments":[{"id":1794,"name":"currentAncillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"4395:20:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1795,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"4417:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":1797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"4437:5:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1796,"name":"toUtf8Bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"4425:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) pure returns (bytes memory)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4425:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1792,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4378:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4382:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"4378:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4378:66:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1784,"id":1800,"nodeType":"Return","src":"4371:73:10"}]},"id":1802,"implemented":true,"kind":"function","modifiers":[],"name":"appendKeyValueBytes32","nameLocation":"4130:21:10","nodeType":"FunctionDefinition","parameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"currentAncillaryData","nameLocation":"4174:20:10","nodeType":"VariableDeclaration","scope":1802,"src":"4161:33:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1775,"name":"bytes","nodeType":"ElementaryTypeName","src":"4161:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"key","nameLocation":"4217:3:10","nodeType":"VariableDeclaration","scope":1802,"src":"4204:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1777,"name":"bytes","nodeType":"ElementaryTypeName","src":"4204:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"value","nameLocation":"4238:5:10","nodeType":"VariableDeclaration","scope":1802,"src":"4230:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4230:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4151:98:10"},"returnParameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1802,"src":"4273:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1782,"name":"bytes","nodeType":"ElementaryTypeName","src":"4273:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4272:14:10"},"scope":1892,"src":"4121:330:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1830,"nodeType":"Block","src":"5350:171:10","statements":[{"assignments":[1815],"declarations":[{"constant":false,"id":1815,"mutability":"mutable","name":"prefix","nameLocation":"5373:6:10","nodeType":"VariableDeclaration","scope":1830,"src":"5360:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1814,"name":"bytes","nodeType":"ElementaryTypeName","src":"5360:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1820,"initialValue":{"arguments":[{"id":1817,"name":"currentAncillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"5398:20:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1818,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"5420:3:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1816,"name":"constructPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"5382:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory) pure returns (bytes memory)"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5382:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5360:64:10"},{"expression":{"arguments":[{"id":1823,"name":"currentAncillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"5458:20:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1824,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"5480:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":1826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"5507:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1825,"name":"toUtf8BytesAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"5488:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (address) pure returns (bytes memory)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5488:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1821,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5441:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5445:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"5441:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5441:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1813,"id":1829,"nodeType":"Return","src":"5434:80:10"}]},"documentation":{"id":1803,"nodeType":"StructuredDocumentation","src":"4457:722:10","text":" @notice Adds \"key:value\" to `currentAncillaryData` where `value` is an address that first needs to be converted\n to utf8 bytes. For example, if `utf8(currentAncillaryData)=\"k1:v1\"`, then this function will return\n `utf8(k1:v1,key:value)`, and if `currentAncillaryData` is blank, then this will return `utf8(key:value)`.\n @param currentAncillaryData This bytes data should ideally be able to be utf8-decoded, but its OK if not.\n @param key Again, this bytes data should ideally be able to be utf8-decoded, but its OK if not.\n @param value An address to set as the value in the key:value pair to append to `currentAncillaryData`.\n @return Newly appended ancillary data."},"id":1831,"implemented":true,"kind":"function","modifiers":[],"name":"appendKeyValueAddress","nameLocation":"5193:21:10","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"currentAncillaryData","nameLocation":"5237:20:10","nodeType":"VariableDeclaration","scope":1831,"src":"5224:33:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1804,"name":"bytes","nodeType":"ElementaryTypeName","src":"5224:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1807,"mutability":"mutable","name":"key","nameLocation":"5280:3:10","nodeType":"VariableDeclaration","scope":1831,"src":"5267:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1806,"name":"bytes","nodeType":"ElementaryTypeName","src":"5267:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1809,"mutability":"mutable","name":"value","nameLocation":"5301:5:10","nodeType":"VariableDeclaration","scope":1831,"src":"5293:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1808,"name":"address","nodeType":"ElementaryTypeName","src":"5293:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5214:98:10"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1831,"src":"5336:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1811,"name":"bytes","nodeType":"ElementaryTypeName","src":"5336:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5335:14:10"},"scope":1892,"src":"5184:337:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1859,"nodeType":"Block","src":"6409:168:10","statements":[{"assignments":[1844],"declarations":[{"constant":false,"id":1844,"mutability":"mutable","name":"prefix","nameLocation":"6432:6:10","nodeType":"VariableDeclaration","scope":1859,"src":"6419:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1843,"name":"bytes","nodeType":"ElementaryTypeName","src":"6419:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1849,"initialValue":{"arguments":[{"id":1846,"name":"currentAncillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"6457:20:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1847,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"6479:3:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1845,"name":"constructPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"6441:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory) pure returns (bytes memory)"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6441:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6419:64:10"},{"expression":{"arguments":[{"id":1852,"name":"currentAncillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"6517:20:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1853,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"6539:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":1855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"6563:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1854,"name":"toUtf8BytesUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"6547:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6547:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1850,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6500:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6504:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"6500:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6500:70:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1842,"id":1858,"nodeType":"Return","src":"6493:77:10"}]},"documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"5527:714:10","text":" @notice Adds \"key:value\" to `currentAncillaryData` where `value` is a uint that first needs to be converted\n to utf8 bytes. For example, if `utf8(currentAncillaryData)=\"k1:v1\"`, then this function will return\n `utf8(k1:v1,key:value)`, and if `currentAncillaryData` is blank, then this will return `utf8(key:value)`.\n @param currentAncillaryData This bytes data should ideally be able to be utf8-decoded, but its OK if not.\n @param key Again, this bytes data should ideally be able to be utf8-decoded, but its OK if not.\n @param value A uint to set as the value in the key:value pair to append to `currentAncillaryData`.\n @return Newly appended ancillary data."},"id":1860,"implemented":true,"kind":"function","modifiers":[],"name":"appendKeyValueUint","nameLocation":"6255:18:10","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"currentAncillaryData","nameLocation":"6296:20:10","nodeType":"VariableDeclaration","scope":1860,"src":"6283:33:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1833,"name":"bytes","nodeType":"ElementaryTypeName","src":"6283:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"key","nameLocation":"6339:3:10","nodeType":"VariableDeclaration","scope":1860,"src":"6326:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1835,"name":"bytes","nodeType":"ElementaryTypeName","src":"6326:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"value","nameLocation":"6360:5:10","nodeType":"VariableDeclaration","scope":1860,"src":"6352:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"6352:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6273:98:10"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1860,"src":"6395:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1840,"name":"bytes","nodeType":"ElementaryTypeName","src":"6395:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6394:14:10"},"scope":1892,"src":"6246:331:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1890,"nodeType":"Block","src":"7043:180:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1870,"name":"currentAncillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"7057:20:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7078:6:10","memberName":"length","nodeType":"MemberAccess","src":"7057:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7087:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7057:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1888,"nodeType":"Block","src":"7159:58:10","statements":[{"expression":{"arguments":[{"id":1884,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"7197:3:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"3a","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7202:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c","typeString":"literal_string \":\""},"value":":"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c","typeString":"literal_string \":\""}],"expression":{"id":1882,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7180:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7184:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"7180:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7180:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1869,"id":1887,"nodeType":"Return","src":"7173:33:10"}]},"id":1889,"nodeType":"IfStatement","src":"7053:164:10","trueBody":{"id":1881,"nodeType":"Block","src":"7090:63:10","statements":[{"expression":{"arguments":[{"hexValue":"2c","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7128:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},"value":","},{"id":1877,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"7133:3:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"3a","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7138:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c","typeString":"literal_string \":\""},"value":":"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c","typeString":"literal_string \":\""}],"expression":{"id":1874,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7111:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7115:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"7111:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7111:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1869,"id":1880,"nodeType":"Return","src":"7104:38:10"}]}}]},"documentation":{"id":1861,"nodeType":"StructuredDocumentation","src":"6583:340:10","text":" @notice Helper method that returns the left hand side of a \"key:value\" pair plus the colon \":\" and a leading\n comma \",\" if the `currentAncillaryData` is not empty. The return value is intended to be prepended as a prefix to\n some utf8 value that is ultimately added to a comma-delimited, key-value dictionary."},"id":1891,"implemented":true,"kind":"function","modifiers":[],"name":"constructPrefix","nameLocation":"6937:15:10","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"currentAncillaryData","nameLocation":"6966:20:10","nodeType":"VariableDeclaration","scope":1891,"src":"6953:33:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1862,"name":"bytes","nodeType":"ElementaryTypeName","src":"6953:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1865,"mutability":"mutable","name":"key","nameLocation":"7001:3:10","nodeType":"VariableDeclaration","scope":1891,"src":"6988:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1864,"name":"bytes","nodeType":"ElementaryTypeName","src":"6988:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6952:53:10"},"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1891,"src":"7029:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1867,"name":"bytes","nodeType":"ElementaryTypeName","src":"7029:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7028:14:10"},"scope":1892,"src":"6928:295:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1893,"src":"663:6562:10","usedErrors":[]}],"src":"42:7184:10"},"id":10},"@uma/core/contracts/common/implementation/FixedPoint.sol":{"ast":{"absolutePath":"@uma/core/contracts/common/implementation/FixedPoint.sol","exportedSymbols":{"FixedPoint":[3525],"SafeMath":[1420],"SignedSafeMath":[1484]},"id":3526,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":1894,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":1895,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3526,"sourceUnit":1421,"src":"67:57:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedSafeMath.sol","file":"@openzeppelin/contracts/utils/math/SignedSafeMath.sol","id":1896,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3526,"sourceUnit":1485,"src":"125:63:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"FixedPoint","contractDependencies":[],"contractKind":"library","documentation":{"id":1897,"nodeType":"StructuredDocumentation","src":"190:61:11","text":" @title Library for fixed point arithmetic on uints"},"fullyImplemented":true,"id":3525,"linearizedBaseContracts":[3525],"name":"FixedPoint","nameLocation":"260:10:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1900,"libraryName":{"id":1898,"name":"SafeMath","nameLocations":["283:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1420,"src":"283:8:11"},"nodeType":"UsingForDirective","src":"277:27:11","typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"296:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"global":false,"id":1903,"libraryName":{"id":1901,"name":"SignedSafeMath","nameLocations":["315:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":1484,"src":"315:14:11"},"nodeType":"UsingForDirective","src":"309:32:11","typeName":{"id":1902,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}},{"constant":true,"id":1908,"mutability":"constant","name":"FP_SCALING_FACTOR","nameLocation":"599:17:11","nodeType":"VariableDeclaration","scope":3525,"src":"574:51:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1904,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"619:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"623:2:11","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"619:6:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"private"},{"canonicalName":"FixedPoint.Unsigned","id":1911,"members":[{"constant":false,"id":1910,"mutability":"mutable","name":"rawValue","nameLocation":"800:8:11","nodeType":"VariableDeclaration","scope":1911,"src":"792:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1909,"name":"uint256","nodeType":"ElementaryTypeName","src":"792:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Unsigned","nameLocation":"773:8:11","nodeType":"StructDefinition","scope":3525,"src":"766:49:11","visibility":"public"},{"body":{"id":1927,"nodeType":"Block","src":"1121:58:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":1923,"name":"FP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"1153:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1921,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"1147:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1149:3:11","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1314,"src":"1147:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1147:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1920,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"1138:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1911_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1138:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":1919,"id":1926,"nodeType":"Return","src":"1131:41:11"}]},"documentation":{"id":1912,"nodeType":"StructuredDocumentation","src":"821:218:11","text":" @notice Constructs an `Unsigned` from an unscaled uint, e.g., `b=5` gets stored internally as `5*(10**18)`.\n @param a uint to convert into a FixedPoint.\n @return the converted FixedPoint."},"id":1928,"implemented":true,"kind":"function","modifiers":[],"name":"fromUnscaledUint","nameLocation":"1053:16:11","nodeType":"FunctionDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"a","nameLocation":"1078:1:11","nodeType":"VariableDeclaration","scope":1928,"src":"1070:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1070:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1069:11:11"},"returnParameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1928,"src":"1104:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":1917,"nodeType":"UserDefinedTypeName","pathNode":{"id":1916,"name":"Unsigned","nameLocations":["1104:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"1104:8:11"},"referencedDeclaration":1911,"src":"1104:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"1103:17:11"},"scope":3525,"src":"1044:135:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1947,"nodeType":"Block","src":"1418:66:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1939,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"1435:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":1940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1437:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"1435:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1942,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"1466:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1941,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"1449:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1449:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":1944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1469:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"1449:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1435:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1938,"id":1946,"nodeType":"Return","src":"1428:49:11"}]},"documentation":{"id":1929,"nodeType":"StructuredDocumentation","src":"1185:152:11","text":" @notice Whether `a` is equal to `b`.\n @param a a FixedPoint.\n @param b a uint256.\n @return True if equal, or False."},"id":1948,"implemented":true,"kind":"function","modifiers":[],"name":"isEqual","nameLocation":"1351:7:11","nodeType":"FunctionDefinition","parameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"a","nameLocation":"1375:1:11","nodeType":"VariableDeclaration","scope":1948,"src":"1359:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":1931,"nodeType":"UserDefinedTypeName","pathNode":{"id":1930,"name":"Unsigned","nameLocations":["1359:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"1359:8:11"},"referencedDeclaration":1911,"src":"1359:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"b","nameLocation":"1386:1:11","nodeType":"VariableDeclaration","scope":1948,"src":"1378:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"1378:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1358:30:11"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1948,"src":"1412:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1936,"name":"bool","nodeType":"ElementaryTypeName","src":"1412:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1411:6:11"},"scope":3525,"src":"1342:142:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1966,"nodeType":"Block","src":"1734:48:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1960,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"1751:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":1961,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1753:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"1751:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1962,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"1765:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":1963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1767:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"1765:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1751:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1959,"id":1965,"nodeType":"Return","src":"1744:31:11"}]},"documentation":{"id":1949,"nodeType":"StructuredDocumentation","src":"1490:155:11","text":" @notice Whether `a` is equal to `b`.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return True if equal, or False."},"id":1967,"implemented":true,"kind":"function","modifiers":[],"name":"isEqual","nameLocation":"1659:7:11","nodeType":"FunctionDefinition","parameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"a","nameLocation":"1683:1:11","nodeType":"VariableDeclaration","scope":1967,"src":"1667:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":1951,"nodeType":"UserDefinedTypeName","pathNode":{"id":1950,"name":"Unsigned","nameLocations":["1667:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"1667:8:11"},"referencedDeclaration":1911,"src":"1667:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":1955,"mutability":"mutable","name":"b","nameLocation":"1702:1:11","nodeType":"VariableDeclaration","scope":1967,"src":"1686:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":1954,"nodeType":"UserDefinedTypeName","pathNode":{"id":1953,"name":"Unsigned","nameLocations":["1686:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"1686:8:11"},"referencedDeclaration":1911,"src":"1686:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"1666:38:11"},"returnParameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1967,"src":"1728:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1957,"name":"bool","nodeType":"ElementaryTypeName","src":"1728:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1727:6:11"},"scope":3525,"src":"1650:132:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1985,"nodeType":"Block","src":"2044:47:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1979,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"2061:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":1980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2063:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"2061:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1981,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"2074:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":1982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2076:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"2074:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1978,"id":1984,"nodeType":"Return","src":"2054:30:11"}]},"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"1788:161:11","text":" @notice Whether `a` is greater than `b`.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return True if `a > b`, or False."},"id":1986,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThan","nameLocation":"1963:13:11","nodeType":"FunctionDefinition","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"mutability":"mutable","name":"a","nameLocation":"1993:1:11","nodeType":"VariableDeclaration","scope":1986,"src":"1977:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":1970,"nodeType":"UserDefinedTypeName","pathNode":{"id":1969,"name":"Unsigned","nameLocations":["1977:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"1977:8:11"},"referencedDeclaration":1911,"src":"1977:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":1974,"mutability":"mutable","name":"b","nameLocation":"2012:1:11","nodeType":"VariableDeclaration","scope":1986,"src":"1996:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":1973,"nodeType":"UserDefinedTypeName","pathNode":{"id":1972,"name":"Unsigned","nameLocations":["1996:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"1996:8:11"},"referencedDeclaration":1911,"src":"1996:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"1976:38:11"},"returnParameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1986,"src":"2038:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1976,"name":"bool","nodeType":"ElementaryTypeName","src":"2038:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2037:6:11"},"scope":3525,"src":"1954:137:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2005,"nodeType":"Block","src":"2342:65:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1997,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"2359:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":1998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2361:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"2359:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2000,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"2389:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1999,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"2372:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2372:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2002,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2392:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"2372:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2359:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1996,"id":2004,"nodeType":"Return","src":"2352:48:11"}]},"documentation":{"id":1987,"nodeType":"StructuredDocumentation","src":"2097:158:11","text":" @notice Whether `a` is greater than `b`.\n @param a a FixedPoint.\n @param b a uint256.\n @return True if `a > b`, or False."},"id":2006,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThan","nameLocation":"2269:13:11","nodeType":"FunctionDefinition","parameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1990,"mutability":"mutable","name":"a","nameLocation":"2299:1:11","nodeType":"VariableDeclaration","scope":2006,"src":"2283:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":1989,"nodeType":"UserDefinedTypeName","pathNode":{"id":1988,"name":"Unsigned","nameLocations":["2283:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"2283:8:11"},"referencedDeclaration":1911,"src":"2283:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":1992,"mutability":"mutable","name":"b","nameLocation":"2310:1:11","nodeType":"VariableDeclaration","scope":2006,"src":"2302:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1991,"name":"uint256","nodeType":"ElementaryTypeName","src":"2302:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2282:30:11"},"returnParameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2006,"src":"2336:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1994,"name":"bool","nodeType":"ElementaryTypeName","src":"2336:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2335:6:11"},"scope":3525,"src":"2260:147:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2025,"nodeType":"Block","src":"2658:65:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2018,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"2692:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2017,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"2675:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2695:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"2675:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2021,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"2706:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2708:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"2706:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2675:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2016,"id":2024,"nodeType":"Return","src":"2668:48:11"}]},"documentation":{"id":2007,"nodeType":"StructuredDocumentation","src":"2413:158:11","text":" @notice Whether `a` is greater than `b`.\n @param a a uint256.\n @param b a FixedPoint.\n @return True if `a > b`, or False."},"id":2026,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThan","nameLocation":"2585:13:11","nodeType":"FunctionDefinition","parameters":{"id":2013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2009,"mutability":"mutable","name":"a","nameLocation":"2607:1:11","nodeType":"VariableDeclaration","scope":2026,"src":"2599:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2008,"name":"uint256","nodeType":"ElementaryTypeName","src":"2599:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2012,"mutability":"mutable","name":"b","nameLocation":"2626:1:11","nodeType":"VariableDeclaration","scope":2026,"src":"2610:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2011,"nodeType":"UserDefinedTypeName","pathNode":{"id":2010,"name":"Unsigned","nameLocations":["2610:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"2610:8:11"},"referencedDeclaration":1911,"src":"2610:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"2598:30:11"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2026,"src":"2652:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2014,"name":"bool","nodeType":"ElementaryTypeName","src":"2652:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2651:6:11"},"scope":3525,"src":"2576:147:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2044,"nodeType":"Block","src":"3005:48:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2038,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"3022:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2039,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3024:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"3022:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2040,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"3036:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2041,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3038:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"3036:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3022:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2037,"id":2043,"nodeType":"Return","src":"3015:31:11"}]},"documentation":{"id":2027,"nodeType":"StructuredDocumentation","src":"2729:174:11","text":" @notice Whether `a` is greater than or equal to `b`.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return True if `a >= b`, or False."},"id":2045,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThanOrEqual","nameLocation":"2917:20:11","nodeType":"FunctionDefinition","parameters":{"id":2034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"a","nameLocation":"2954:1:11","nodeType":"VariableDeclaration","scope":2045,"src":"2938:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2029,"nodeType":"UserDefinedTypeName","pathNode":{"id":2028,"name":"Unsigned","nameLocations":["2938:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"2938:8:11"},"referencedDeclaration":1911,"src":"2938:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2033,"mutability":"mutable","name":"b","nameLocation":"2973:1:11","nodeType":"VariableDeclaration","scope":2045,"src":"2957:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2032,"nodeType":"UserDefinedTypeName","pathNode":{"id":2031,"name":"Unsigned","nameLocations":["2957:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"2957:8:11"},"referencedDeclaration":1911,"src":"2957:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"2937:38:11"},"returnParameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2045,"src":"2999:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2035,"name":"bool","nodeType":"ElementaryTypeName","src":"2999:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2998:6:11"},"scope":3525,"src":"2908:145:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2064,"nodeType":"Block","src":"3324:66:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2056,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"3341:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2057,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3343:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"3341:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2059,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"3372:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2058,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"3355:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3355:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2061,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3375:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"3355:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3341:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2055,"id":2063,"nodeType":"Return","src":"3334:49:11"}]},"documentation":{"id":2046,"nodeType":"StructuredDocumentation","src":"3059:171:11","text":" @notice Whether `a` is greater than or equal to `b`.\n @param a a FixedPoint.\n @param b a uint256.\n @return True if `a >= b`, or False."},"id":2065,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThanOrEqual","nameLocation":"3244:20:11","nodeType":"FunctionDefinition","parameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2049,"mutability":"mutable","name":"a","nameLocation":"3281:1:11","nodeType":"VariableDeclaration","scope":2065,"src":"3265:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2048,"nodeType":"UserDefinedTypeName","pathNode":{"id":2047,"name":"Unsigned","nameLocations":["3265:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"3265:8:11"},"referencedDeclaration":1911,"src":"3265:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2051,"mutability":"mutable","name":"b","nameLocation":"3292:1:11","nodeType":"VariableDeclaration","scope":2065,"src":"3284:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2050,"name":"uint256","nodeType":"ElementaryTypeName","src":"3284:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3264:30:11"},"returnParameters":{"id":2055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2065,"src":"3318:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2053,"name":"bool","nodeType":"ElementaryTypeName","src":"3318:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3317:6:11"},"scope":3525,"src":"3235:155:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2084,"nodeType":"Block","src":"3661:66:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2077,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"3695:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2076,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"3678:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3678:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3698:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"3678:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2080,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"3710:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3712:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"3710:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3678:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2075,"id":2083,"nodeType":"Return","src":"3671:49:11"}]},"documentation":{"id":2066,"nodeType":"StructuredDocumentation","src":"3396:171:11","text":" @notice Whether `a` is greater than or equal to `b`.\n @param a a uint256.\n @param b a FixedPoint.\n @return True if `a >= b`, or False."},"id":2085,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThanOrEqual","nameLocation":"3581:20:11","nodeType":"FunctionDefinition","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"a","nameLocation":"3610:1:11","nodeType":"VariableDeclaration","scope":2085,"src":"3602:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"3602:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2071,"mutability":"mutable","name":"b","nameLocation":"3629:1:11","nodeType":"VariableDeclaration","scope":2085,"src":"3613:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2070,"nodeType":"UserDefinedTypeName","pathNode":{"id":2069,"name":"Unsigned","nameLocations":["3613:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"3613:8:11"},"referencedDeclaration":1911,"src":"3613:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"3601:30:11"},"returnParameters":{"id":2075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2085,"src":"3655:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2073,"name":"bool","nodeType":"ElementaryTypeName","src":"3655:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3654:6:11"},"scope":3525,"src":"3572:155:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2103,"nodeType":"Block","src":"3983:47:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2097,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"4000:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4002:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"4000:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2099,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"4013:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4015:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"4013:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4000:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2096,"id":2102,"nodeType":"Return","src":"3993:30:11"}]},"documentation":{"id":2086,"nodeType":"StructuredDocumentation","src":"3733:158:11","text":" @notice Whether `a` is less than `b`.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return True if `a < b`, or False."},"id":2104,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThan","nameLocation":"3905:10:11","nodeType":"FunctionDefinition","parameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"a","nameLocation":"3932:1:11","nodeType":"VariableDeclaration","scope":2104,"src":"3916:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2088,"nodeType":"UserDefinedTypeName","pathNode":{"id":2087,"name":"Unsigned","nameLocations":["3916:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"3916:8:11"},"referencedDeclaration":1911,"src":"3916:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2092,"mutability":"mutable","name":"b","nameLocation":"3951:1:11","nodeType":"VariableDeclaration","scope":2104,"src":"3935:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2091,"nodeType":"UserDefinedTypeName","pathNode":{"id":2090,"name":"Unsigned","nameLocations":["3935:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"3935:8:11"},"referencedDeclaration":1911,"src":"3935:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"3915:38:11"},"returnParameters":{"id":2096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2104,"src":"3977:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2094,"name":"bool","nodeType":"ElementaryTypeName","src":"3977:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3976:6:11"},"scope":3525,"src":"3896:134:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2123,"nodeType":"Block","src":"4275:65:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2115,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"4292:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2116,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4294:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"4292:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":2118,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"4322:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2117,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"4305:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4305:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2120,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4325:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"4305:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4292:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2114,"id":2122,"nodeType":"Return","src":"4285:48:11"}]},"documentation":{"id":2105,"nodeType":"StructuredDocumentation","src":"4036:155:11","text":" @notice Whether `a` is less than `b`.\n @param a a FixedPoint.\n @param b a uint256.\n @return True if `a < b`, or False."},"id":2124,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThan","nameLocation":"4205:10:11","nodeType":"FunctionDefinition","parameters":{"id":2111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2108,"mutability":"mutable","name":"a","nameLocation":"4232:1:11","nodeType":"VariableDeclaration","scope":2124,"src":"4216:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2107,"nodeType":"UserDefinedTypeName","pathNode":{"id":2106,"name":"Unsigned","nameLocations":["4216:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"4216:8:11"},"referencedDeclaration":1911,"src":"4216:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2110,"mutability":"mutable","name":"b","nameLocation":"4243:1:11","nodeType":"VariableDeclaration","scope":2124,"src":"4235:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2109,"name":"uint256","nodeType":"ElementaryTypeName","src":"4235:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4215:30:11"},"returnParameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2124,"src":"4269:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2112,"name":"bool","nodeType":"ElementaryTypeName","src":"4269:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4268:6:11"},"scope":3525,"src":"4196:144:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2143,"nodeType":"Block","src":"4585:65:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2136,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"4619:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2135,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"4602:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4622:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"4602:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2139,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"4633:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4635:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"4633:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4602:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2134,"id":2142,"nodeType":"Return","src":"4595:48:11"}]},"documentation":{"id":2125,"nodeType":"StructuredDocumentation","src":"4346:155:11","text":" @notice Whether `a` is less than `b`.\n @param a a uint256.\n @param b a FixedPoint.\n @return True if `a < b`, or False."},"id":2144,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThan","nameLocation":"4515:10:11","nodeType":"FunctionDefinition","parameters":{"id":2131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2127,"mutability":"mutable","name":"a","nameLocation":"4534:1:11","nodeType":"VariableDeclaration","scope":2144,"src":"4526:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2126,"name":"uint256","nodeType":"ElementaryTypeName","src":"4526:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2130,"mutability":"mutable","name":"b","nameLocation":"4553:1:11","nodeType":"VariableDeclaration","scope":2144,"src":"4537:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2129,"nodeType":"UserDefinedTypeName","pathNode":{"id":2128,"name":"Unsigned","nameLocations":["4537:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"4537:8:11"},"referencedDeclaration":1911,"src":"4537:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"4525:30:11"},"returnParameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2144,"src":"4579:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2132,"name":"bool","nodeType":"ElementaryTypeName","src":"4579:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4578:6:11"},"scope":3525,"src":"4506:144:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2162,"nodeType":"Block","src":"4926:48:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2156,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"4943:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4945:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"4943:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2158,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"4957:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4959:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"4957:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4943:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2155,"id":2161,"nodeType":"Return","src":"4936:31:11"}]},"documentation":{"id":2145,"nodeType":"StructuredDocumentation","src":"4656:171:11","text":" @notice Whether `a` is less than or equal to `b`.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return True if `a <= b`, or False."},"id":2163,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThanOrEqual","nameLocation":"4841:17:11","nodeType":"FunctionDefinition","parameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2148,"mutability":"mutable","name":"a","nameLocation":"4875:1:11","nodeType":"VariableDeclaration","scope":2163,"src":"4859:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2147,"nodeType":"UserDefinedTypeName","pathNode":{"id":2146,"name":"Unsigned","nameLocations":["4859:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"4859:8:11"},"referencedDeclaration":1911,"src":"4859:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2151,"mutability":"mutable","name":"b","nameLocation":"4894:1:11","nodeType":"VariableDeclaration","scope":2163,"src":"4878:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2150,"nodeType":"UserDefinedTypeName","pathNode":{"id":2149,"name":"Unsigned","nameLocations":["4878:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"4878:8:11"},"referencedDeclaration":1911,"src":"4878:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"4858:38:11"},"returnParameters":{"id":2155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2163,"src":"4920:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2153,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:11"},"scope":3525,"src":"4832:142:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2182,"nodeType":"Block","src":"5239:66:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2174,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"5256:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5258:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"5256:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2177,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"5287:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2176,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"5270:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5270:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5290:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"5270:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5256:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2173,"id":2181,"nodeType":"Return","src":"5249:49:11"}]},"documentation":{"id":2164,"nodeType":"StructuredDocumentation","src":"4980:168:11","text":" @notice Whether `a` is less than or equal to `b`.\n @param a a FixedPoint.\n @param b a uint256.\n @return True if `a <= b`, or False."},"id":2183,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThanOrEqual","nameLocation":"5162:17:11","nodeType":"FunctionDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2167,"mutability":"mutable","name":"a","nameLocation":"5196:1:11","nodeType":"VariableDeclaration","scope":2183,"src":"5180:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2166,"nodeType":"UserDefinedTypeName","pathNode":{"id":2165,"name":"Unsigned","nameLocations":["5180:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"5180:8:11"},"referencedDeclaration":1911,"src":"5180:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2169,"mutability":"mutable","name":"b","nameLocation":"5207:1:11","nodeType":"VariableDeclaration","scope":2183,"src":"5199:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2168,"name":"uint256","nodeType":"ElementaryTypeName","src":"5199:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5179:30:11"},"returnParameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2183,"src":"5233:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2171,"name":"bool","nodeType":"ElementaryTypeName","src":"5233:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5232:6:11"},"scope":3525,"src":"5153:152:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2202,"nodeType":"Block","src":"5570:66:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2195,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"5604:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2194,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"5587:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5587:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5607:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"5587:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2198,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"5619:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2199,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5621:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"5619:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5587:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2193,"id":2201,"nodeType":"Return","src":"5580:49:11"}]},"documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"5311:168:11","text":" @notice Whether `a` is less than or equal to `b`.\n @param a a uint256.\n @param b a FixedPoint.\n @return True if `a <= b`, or False."},"id":2203,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThanOrEqual","nameLocation":"5493:17:11","nodeType":"FunctionDefinition","parameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"a","nameLocation":"5519:1:11","nodeType":"VariableDeclaration","scope":2203,"src":"5511:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"5511:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2189,"mutability":"mutable","name":"b","nameLocation":"5538:1:11","nodeType":"VariableDeclaration","scope":2203,"src":"5522:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2188,"nodeType":"UserDefinedTypeName","pathNode":{"id":2187,"name":"Unsigned","nameLocations":["5522:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"5522:8:11"},"referencedDeclaration":1911,"src":"5522:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"5510:30:11"},"returnParameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2203,"src":"5564:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2191,"name":"bool","nodeType":"ElementaryTypeName","src":"5564:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5563:6:11"},"scope":3525,"src":"5484:152:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2225,"nodeType":"Block","src":"5895:55:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2216,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"5912:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5914:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"5912:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2218,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"5925:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5927:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"5925:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5912:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2222,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"5942:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5912:31:11","trueExpression":{"id":2221,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"5938:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2215,"id":2224,"nodeType":"Return","src":"5905:38:11"}]},"documentation":{"id":2204,"nodeType":"StructuredDocumentation","src":"5642:157:11","text":" @notice The minimum of `a` and `b`.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return the minimum of `a` and `b`."},"id":2226,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5813:3:11","nodeType":"FunctionDefinition","parameters":{"id":2211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2207,"mutability":"mutable","name":"a","nameLocation":"5833:1:11","nodeType":"VariableDeclaration","scope":2226,"src":"5817:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2206,"nodeType":"UserDefinedTypeName","pathNode":{"id":2205,"name":"Unsigned","nameLocations":["5817:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"5817:8:11"},"referencedDeclaration":1911,"src":"5817:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2210,"mutability":"mutable","name":"b","nameLocation":"5852:1:11","nodeType":"VariableDeclaration","scope":2226,"src":"5836:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2209,"nodeType":"UserDefinedTypeName","pathNode":{"id":2208,"name":"Unsigned","nameLocations":["5836:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"5836:8:11"},"referencedDeclaration":1911,"src":"5836:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"5816:38:11"},"returnParameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2226,"src":"5878:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2213,"nodeType":"UserDefinedTypeName","pathNode":{"id":2212,"name":"Unsigned","nameLocations":["5878:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"5878:8:11"},"referencedDeclaration":1911,"src":"5878:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"5877:17:11"},"scope":3525,"src":"5804:146:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2248,"nodeType":"Block","src":"6209:55:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2239,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"6226:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6228:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"6226:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2241,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"6239:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6241:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"6239:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6226:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2245,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"6256:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6226:31:11","trueExpression":{"id":2244,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"6252:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2238,"id":2247,"nodeType":"Return","src":"6219:38:11"}]},"documentation":{"id":2227,"nodeType":"StructuredDocumentation","src":"5956:157:11","text":" @notice The maximum of `a` and `b`.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return the maximum of `a` and `b`."},"id":2249,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"6127:3:11","nodeType":"FunctionDefinition","parameters":{"id":2234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2230,"mutability":"mutable","name":"a","nameLocation":"6147:1:11","nodeType":"VariableDeclaration","scope":2249,"src":"6131:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2229,"nodeType":"UserDefinedTypeName","pathNode":{"id":2228,"name":"Unsigned","nameLocations":["6131:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"6131:8:11"},"referencedDeclaration":1911,"src":"6131:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2233,"mutability":"mutable","name":"b","nameLocation":"6166:1:11","nodeType":"VariableDeclaration","scope":2249,"src":"6150:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2232,"nodeType":"UserDefinedTypeName","pathNode":{"id":2231,"name":"Unsigned","nameLocations":["6150:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"6150:8:11"},"referencedDeclaration":1911,"src":"6150:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"6130:38:11"},"returnParameters":{"id":2238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2249,"src":"6192:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2236,"nodeType":"UserDefinedTypeName","pathNode":{"id":2235,"name":"Unsigned","nameLocations":["6192:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"6192:8:11"},"referencedDeclaration":1911,"src":"6192:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"6191:17:11"},"scope":3525,"src":"6118:146:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2271,"nodeType":"Block","src":"6536:60:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2266,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"6577:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6579:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"6577:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2263,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"6562:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6564:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"6562:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6573:3:11","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1284,"src":"6562:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6562:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2262,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"6553:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1911_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2261,"id":2270,"nodeType":"Return","src":"6546:43:11"}]},"documentation":{"id":2250,"nodeType":"StructuredDocumentation","src":"6270:170:11","text":" @notice Adds two `Unsigned`s, reverting on overflow.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return the sum of `a` and `b`."},"id":2272,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"6454:3:11","nodeType":"FunctionDefinition","parameters":{"id":2257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"a","nameLocation":"6474:1:11","nodeType":"VariableDeclaration","scope":2272,"src":"6458:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2252,"nodeType":"UserDefinedTypeName","pathNode":{"id":2251,"name":"Unsigned","nameLocations":["6458:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"6458:8:11"},"referencedDeclaration":1911,"src":"6458:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2256,"mutability":"mutable","name":"b","nameLocation":"6493:1:11","nodeType":"VariableDeclaration","scope":2272,"src":"6477:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2255,"nodeType":"UserDefinedTypeName","pathNode":{"id":2254,"name":"Unsigned","nameLocations":["6477:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"6477:8:11"},"referencedDeclaration":1911,"src":"6477:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"6457:38:11"},"returnParameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2272,"src":"6519:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2259,"nodeType":"UserDefinedTypeName","pathNode":{"id":2258,"name":"Unsigned","nameLocations":["6519:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"6519:8:11"},"referencedDeclaration":1911,"src":"6519:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"6518:17:11"},"scope":3525,"src":"6445:151:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2291,"nodeType":"Block","src":"6875:51:11","statements":[{"expression":{"arguments":[{"id":2285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"6896:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},{"arguments":[{"id":2287,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"6916:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2286,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"6899:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6899:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"},{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}],"id":2284,"name":"add","nodeType":"Identifier","overloadedDeclarations":[2272,2292,3087,3107],"referencedDeclaration":2272,"src":"6892:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Unsigned_$1911_memory_ptr_$_t_struct$_Unsigned_$1911_memory_ptr_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6892:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2283,"id":2290,"nodeType":"Return","src":"6885:34:11"}]},"documentation":{"id":2273,"nodeType":"StructuredDocumentation","src":"6602:185:11","text":" @notice Adds an `Unsigned` to an unscaled uint, reverting on overflow.\n @param a a FixedPoint.\n @param b a uint256.\n @return the sum of `a` and `b`."},"id":2292,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"6801:3:11","nodeType":"FunctionDefinition","parameters":{"id":2279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2276,"mutability":"mutable","name":"a","nameLocation":"6821:1:11","nodeType":"VariableDeclaration","scope":2292,"src":"6805:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2275,"nodeType":"UserDefinedTypeName","pathNode":{"id":2274,"name":"Unsigned","nameLocations":["6805:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"6805:8:11"},"referencedDeclaration":1911,"src":"6805:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2278,"mutability":"mutable","name":"b","nameLocation":"6832:1:11","nodeType":"VariableDeclaration","scope":2292,"src":"6824:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2277,"name":"uint256","nodeType":"ElementaryTypeName","src":"6824:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6804:30:11"},"returnParameters":{"id":2283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2292,"src":"6858:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2281,"nodeType":"UserDefinedTypeName","pathNode":{"id":2280,"name":"Unsigned","nameLocations":["6858:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"6858:8:11"},"referencedDeclaration":1911,"src":"6858:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"6857:17:11"},"scope":3525,"src":"6792:134:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2314,"nodeType":"Block","src":"7210:60:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2309,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"7251:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7253:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"7251:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2306,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"7236:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7238:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"7236:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7247:3:11","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1299,"src":"7236:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7236:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2305,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"7227:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1911_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7227:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2304,"id":2313,"nodeType":"Return","src":"7220:43:11"}]},"documentation":{"id":2293,"nodeType":"StructuredDocumentation","src":"6932:182:11","text":" @notice Subtracts two `Unsigned`s, reverting on overflow.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return the difference of `a` and `b`."},"id":2315,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"7128:3:11","nodeType":"FunctionDefinition","parameters":{"id":2300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"a","nameLocation":"7148:1:11","nodeType":"VariableDeclaration","scope":2315,"src":"7132:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2295,"nodeType":"UserDefinedTypeName","pathNode":{"id":2294,"name":"Unsigned","nameLocations":["7132:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"7132:8:11"},"referencedDeclaration":1911,"src":"7132:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2299,"mutability":"mutable","name":"b","nameLocation":"7167:1:11","nodeType":"VariableDeclaration","scope":2315,"src":"7151:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2298,"nodeType":"UserDefinedTypeName","pathNode":{"id":2297,"name":"Unsigned","nameLocations":["7151:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"7151:8:11"},"referencedDeclaration":1911,"src":"7151:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"7131:38:11"},"returnParameters":{"id":2304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2315,"src":"7193:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2302,"nodeType":"UserDefinedTypeName","pathNode":{"id":2301,"name":"Unsigned","nameLocations":["7193:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"7193:8:11"},"referencedDeclaration":1911,"src":"7193:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"7192:17:11"},"scope":3525,"src":"7119:151:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2334,"nodeType":"Block","src":"7566:51:11","statements":[{"expression":{"arguments":[{"id":2328,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"7587:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},{"arguments":[{"id":2330,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"7607:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2329,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"7590:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7590:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"},{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}],"id":2327,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[2315,2335,2355,3130,3150,3170],"referencedDeclaration":2315,"src":"7583:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Unsigned_$1911_memory_ptr_$_t_struct$_Unsigned_$1911_memory_ptr_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7583:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2326,"id":2333,"nodeType":"Return","src":"7576:34:11"}]},"documentation":{"id":2316,"nodeType":"StructuredDocumentation","src":"7276:202:11","text":" @notice Subtracts an unscaled uint256 from an `Unsigned`, reverting on overflow.\n @param a a FixedPoint.\n @param b a uint256.\n @return the difference of `a` and `b`."},"id":2335,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"7492:3:11","nodeType":"FunctionDefinition","parameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2319,"mutability":"mutable","name":"a","nameLocation":"7512:1:11","nodeType":"VariableDeclaration","scope":2335,"src":"7496:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2318,"nodeType":"UserDefinedTypeName","pathNode":{"id":2317,"name":"Unsigned","nameLocations":["7496:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"7496:8:11"},"referencedDeclaration":1911,"src":"7496:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2321,"mutability":"mutable","name":"b","nameLocation":"7523:1:11","nodeType":"VariableDeclaration","scope":2335,"src":"7515:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"7515:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7495:30:11"},"returnParameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2335,"src":"7549:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2324,"nodeType":"UserDefinedTypeName","pathNode":{"id":2323,"name":"Unsigned","nameLocations":["7549:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"7549:8:11"},"referencedDeclaration":1911,"src":"7549:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"7548:17:11"},"scope":3525,"src":"7483:134:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2354,"nodeType":"Block","src":"7913:51:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"7951:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2348,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"7934:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},{"id":2351,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"7955:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"},{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}],"id":2347,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[2315,2335,2355,3130,3150,3170],"referencedDeclaration":2315,"src":"7930:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Unsigned_$1911_memory_ptr_$_t_struct$_Unsigned_$1911_memory_ptr_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7930:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2346,"id":2353,"nodeType":"Return","src":"7923:34:11"}]},"documentation":{"id":2336,"nodeType":"StructuredDocumentation","src":"7623:202:11","text":" @notice Subtracts an `Unsigned` from an unscaled uint256, reverting on overflow.\n @param a a uint256.\n @param b a FixedPoint.\n @return the difference of `a` and `b`."},"id":2355,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"7839:3:11","nodeType":"FunctionDefinition","parameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"a","nameLocation":"7851:1:11","nodeType":"VariableDeclaration","scope":2355,"src":"7843:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"7843:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2341,"mutability":"mutable","name":"b","nameLocation":"7870:1:11","nodeType":"VariableDeclaration","scope":2355,"src":"7854:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2340,"nodeType":"UserDefinedTypeName","pathNode":{"id":2339,"name":"Unsigned","nameLocations":["7854:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"7854:8:11"},"referencedDeclaration":1911,"src":"7854:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"7842:30:11"},"returnParameters":{"id":2346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2355,"src":"7896:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2344,"nodeType":"UserDefinedTypeName","pathNode":{"id":2343,"name":"Unsigned","nameLocations":["7896:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"7896:8:11"},"referencedDeclaration":1911,"src":"7896:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"7895:17:11"},"scope":3525,"src":"7830:134:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2379,"nodeType":"Block","src":"8289:559:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2372,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"8809:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2373,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8811:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"8809:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2369,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"8794:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8796:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"8794:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8805:3:11","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1314,"src":"8794:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8794:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2375,"name":"FP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"8823:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8794:46:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2368,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"8785:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1911_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8785:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2367,"id":2378,"nodeType":"Return","src":"8778:63:11"}]},"documentation":{"id":2356,"nodeType":"StructuredDocumentation","src":"7970:223:11","text":" @notice Multiplies two `Unsigned`s, reverting on overflow.\n @dev This will \"floor\" the product.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return the product of `a` and `b`."},"id":2380,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"8207:3:11","nodeType":"FunctionDefinition","parameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2359,"mutability":"mutable","name":"a","nameLocation":"8227:1:11","nodeType":"VariableDeclaration","scope":2380,"src":"8211:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2358,"nodeType":"UserDefinedTypeName","pathNode":{"id":2357,"name":"Unsigned","nameLocations":["8211:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"8211:8:11"},"referencedDeclaration":1911,"src":"8211:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2362,"mutability":"mutable","name":"b","nameLocation":"8246:1:11","nodeType":"VariableDeclaration","scope":2380,"src":"8230:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2361,"nodeType":"UserDefinedTypeName","pathNode":{"id":2360,"name":"Unsigned","nameLocations":["8230:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"8230:8:11"},"referencedDeclaration":1911,"src":"8230:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"8210:38:11"},"returnParameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2380,"src":"8272:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2365,"nodeType":"UserDefinedTypeName","pathNode":{"id":2364,"name":"Unsigned","nameLocations":["8272:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"8272:8:11"},"referencedDeclaration":1911,"src":"8272:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"8271:17:11"},"scope":3525,"src":"8198:650:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2400,"nodeType":"Block","src":"9184:51:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2396,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"9225:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2393,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"9210:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9212:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"9210:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9221:3:11","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1314,"src":"9210:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9210:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2392,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"9201:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1911_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9201:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2391,"id":2399,"nodeType":"Return","src":"9194:34:11"}]},"documentation":{"id":2381,"nodeType":"StructuredDocumentation","src":"8854:242:11","text":" @notice Multiplies an `Unsigned` and an unscaled uint256, reverting on overflow.\n @dev This will \"floor\" the product.\n @param a a FixedPoint.\n @param b a uint256.\n @return the product of `a` and `b`."},"id":2401,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"9110:3:11","nodeType":"FunctionDefinition","parameters":{"id":2387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"a","nameLocation":"9130:1:11","nodeType":"VariableDeclaration","scope":2401,"src":"9114:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2383,"nodeType":"UserDefinedTypeName","pathNode":{"id":2382,"name":"Unsigned","nameLocations":["9114:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"9114:8:11"},"referencedDeclaration":1911,"src":"9114:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2386,"mutability":"mutable","name":"b","nameLocation":"9141:1:11","nodeType":"VariableDeclaration","scope":2401,"src":"9133:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2385,"name":"uint256","nodeType":"ElementaryTypeName","src":"9133:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9113:30:11"},"returnParameters":{"id":2391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2401,"src":"9167:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2389,"nodeType":"UserDefinedTypeName","pathNode":{"id":2388,"name":"Unsigned","nameLocations":["9167:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"9167:8:11"},"referencedDeclaration":1911,"src":"9167:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"9166:17:11"},"scope":3525,"src":"9101:134:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2453,"nodeType":"Block","src":"9546:304:11","statements":[{"assignments":[2415],"declarations":[{"constant":false,"id":2415,"mutability":"mutable","name":"mulRaw","nameLocation":"9564:6:11","nodeType":"VariableDeclaration","scope":2453,"src":"9556:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"9556:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2422,"initialValue":{"arguments":[{"expression":{"id":2419,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"9588:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2420,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9590:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"9588:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2416,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"9573:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9575:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"9573:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9584:3:11","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1314,"src":"9573:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9573:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9556:43:11"},{"assignments":[2424],"declarations":[{"constant":false,"id":2424,"mutability":"mutable","name":"mulFloor","nameLocation":"9617:8:11","nodeType":"VariableDeclaration","scope":2453,"src":"9609:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2423,"name":"uint256","nodeType":"ElementaryTypeName","src":"9609:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2428,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"mulRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"9628:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2426,"name":"FP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"9637:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9628:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9609:45:11"},{"assignments":[2430],"declarations":[{"constant":false,"id":2430,"mutability":"mutable","name":"mod","nameLocation":"9672:3:11","nodeType":"VariableDeclaration","scope":2453,"src":"9664:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2429,"name":"uint256","nodeType":"ElementaryTypeName","src":"9664:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2435,"initialValue":{"arguments":[{"id":2433,"name":"FP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"9689:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2431,"name":"mulRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"9678:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9685:3:11","memberName":"mod","nodeType":"MemberAccess","referencedDeclaration":1344,"src":"9678:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9678:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9664:43:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2436,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"9721:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9728:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9721:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2451,"nodeType":"Block","src":"9794:50:11","statements":[{"expression":{"arguments":[{"id":2448,"name":"mulFloor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"9824:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2447,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"9815:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1911_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2413,"id":2450,"nodeType":"Return","src":"9808:25:11"}]},"id":2452,"nodeType":"IfStatement","src":"9717:127:11","trueBody":{"id":2446,"nodeType":"Block","src":"9731:57:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"31","id":2442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9774:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":2440,"name":"mulFloor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"9761:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9770:3:11","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1284,"src":"9761:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9761:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2439,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"9752:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1911_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2413,"id":2445,"nodeType":"Return","src":"9745:32:11"}]}}]},"documentation":{"id":2402,"nodeType":"StructuredDocumentation","src":"9241:205:11","text":" @notice Multiplies two `Unsigned`s and \"ceil's\" the product, reverting on overflow.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return the product of `a` and `b`."},"id":2454,"implemented":true,"kind":"function","modifiers":[],"name":"mulCeil","nameLocation":"9460:7:11","nodeType":"FunctionDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2405,"mutability":"mutable","name":"a","nameLocation":"9484:1:11","nodeType":"VariableDeclaration","scope":2454,"src":"9468:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2404,"nodeType":"UserDefinedTypeName","pathNode":{"id":2403,"name":"Unsigned","nameLocations":["9468:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"9468:8:11"},"referencedDeclaration":1911,"src":"9468:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2408,"mutability":"mutable","name":"b","nameLocation":"9503:1:11","nodeType":"VariableDeclaration","scope":2454,"src":"9487:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2407,"nodeType":"UserDefinedTypeName","pathNode":{"id":2406,"name":"Unsigned","nameLocations":["9487:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"9487:8:11"},"referencedDeclaration":1911,"src":"9487:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"9467:38:11"},"returnParameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2454,"src":"9529:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2411,"nodeType":"UserDefinedTypeName","pathNode":{"id":2410,"name":"Unsigned","nameLocations":["9529:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"9529:8:11"},"referencedDeclaration":1911,"src":"9529:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"9528:17:11"},"scope":3525,"src":"9451:399:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2474,"nodeType":"Block","src":"10175:145:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2470,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"10310:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2467,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"10295:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10297:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"10295:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10306:3:11","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1314,"src":"10295:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10295:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2466,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"10286:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1911_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2465,"id":2473,"nodeType":"Return","src":"10279:34:11"}]},"documentation":{"id":2455,"nodeType":"StructuredDocumentation","src":"9856:227:11","text":" @notice Multiplies an `Unsigned` and an unscaled uint256 and \"ceil's\" the product, reverting on overflow.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return the product of `a` and `b`."},"id":2475,"implemented":true,"kind":"function","modifiers":[],"name":"mulCeil","nameLocation":"10097:7:11","nodeType":"FunctionDefinition","parameters":{"id":2461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"a","nameLocation":"10121:1:11","nodeType":"VariableDeclaration","scope":2475,"src":"10105:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2457,"nodeType":"UserDefinedTypeName","pathNode":{"id":2456,"name":"Unsigned","nameLocations":["10105:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"10105:8:11"},"referencedDeclaration":1911,"src":"10105:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2460,"mutability":"mutable","name":"b","nameLocation":"10132:1:11","nodeType":"VariableDeclaration","scope":2475,"src":"10124:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2459,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10104:30:11"},"returnParameters":{"id":2465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2475,"src":"10158:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2463,"nodeType":"UserDefinedTypeName","pathNode":{"id":2462,"name":"Unsigned","nameLocations":["10158:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"10158:8:11"},"referencedDeclaration":1911,"src":"10158:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"10157:17:11"},"scope":3525,"src":"10088:232:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2500,"nodeType":"Block","src":"10706:543:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2495,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"11230:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11232:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"11230:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2492,"name":"FP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"11207:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2489,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"11192:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2490,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11194:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"11192:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11203:3:11","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1314,"src":"11192:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11192:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11226:3:11","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1329,"src":"11192:37:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11192:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2488,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"11183:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1911_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11183:59:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2487,"id":2499,"nodeType":"Return","src":"11176:66:11"}]},"documentation":{"id":2476,"nodeType":"StructuredDocumentation","src":"10326:284:11","text":" @notice Divides one `Unsigned` by an `Unsigned`, reverting on overflow or division by 0.\n @dev This will \"floor\" the quotient.\n @param a a FixedPoint numerator.\n @param b a FixedPoint denominator.\n @return the quotient of `a` divided by `b`."},"id":2501,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"10624:3:11","nodeType":"FunctionDefinition","parameters":{"id":2483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2479,"mutability":"mutable","name":"a","nameLocation":"10644:1:11","nodeType":"VariableDeclaration","scope":2501,"src":"10628:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2478,"nodeType":"UserDefinedTypeName","pathNode":{"id":2477,"name":"Unsigned","nameLocations":["10628:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"10628:8:11"},"referencedDeclaration":1911,"src":"10628:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2482,"mutability":"mutable","name":"b","nameLocation":"10663:1:11","nodeType":"VariableDeclaration","scope":2501,"src":"10647:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2481,"nodeType":"UserDefinedTypeName","pathNode":{"id":2480,"name":"Unsigned","nameLocations":["10647:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"10647:8:11"},"referencedDeclaration":1911,"src":"10647:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"10627:38:11"},"returnParameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2501,"src":"10689:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2485,"nodeType":"UserDefinedTypeName","pathNode":{"id":2484,"name":"Unsigned","nameLocations":["10689:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"10689:8:11"},"referencedDeclaration":1911,"src":"10689:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"10688:17:11"},"scope":3525,"src":"10615:634:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2521,"nodeType":"Block","src":"11630:51:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2517,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"11671:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2514,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"11656:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2515,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11658:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"11656:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11667:3:11","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1329,"src":"11656:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2513,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"11647:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1911_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11647:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2512,"id":2520,"nodeType":"Return","src":"11640:34:11"}]},"documentation":{"id":2502,"nodeType":"StructuredDocumentation","src":"11255:287:11","text":" @notice Divides one `Unsigned` by an unscaled uint256, reverting on overflow or division by 0.\n @dev This will \"floor\" the quotient.\n @param a a FixedPoint numerator.\n @param b a uint256 denominator.\n @return the quotient of `a` divided by `b`."},"id":2522,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"11556:3:11","nodeType":"FunctionDefinition","parameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"mutability":"mutable","name":"a","nameLocation":"11576:1:11","nodeType":"VariableDeclaration","scope":2522,"src":"11560:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2504,"nodeType":"UserDefinedTypeName","pathNode":{"id":2503,"name":"Unsigned","nameLocations":["11560:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"11560:8:11"},"referencedDeclaration":1911,"src":"11560:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2507,"mutability":"mutable","name":"b","nameLocation":"11587:1:11","nodeType":"VariableDeclaration","scope":2522,"src":"11579:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2506,"name":"uint256","nodeType":"ElementaryTypeName","src":"11579:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11559:30:11"},"returnParameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2522,"src":"11613:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2510,"nodeType":"UserDefinedTypeName","pathNode":{"id":2509,"name":"Unsigned","nameLocations":["11613:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"11613:8:11"},"referencedDeclaration":1911,"src":"11613:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"11612:17:11"},"scope":3525,"src":"11547:134:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2541,"nodeType":"Block","src":"12062:51:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"12100:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2535,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"12083:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12083:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},{"id":2538,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"12104:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"},{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}],"id":2534,"name":"div","nodeType":"Identifier","overloadedDeclarations":[2501,2522,2542,3341,3362,3382],"referencedDeclaration":2501,"src":"12079:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Unsigned_$1911_memory_ptr_$_t_struct$_Unsigned_$1911_memory_ptr_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12079:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2533,"id":2540,"nodeType":"Return","src":"12072:34:11"}]},"documentation":{"id":2523,"nodeType":"StructuredDocumentation","src":"11687:287:11","text":" @notice Divides one unscaled uint256 by an `Unsigned`, reverting on overflow or division by 0.\n @dev This will \"floor\" the quotient.\n @param a a uint256 numerator.\n @param b a FixedPoint denominator.\n @return the quotient of `a` divided by `b`."},"id":2542,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"11988:3:11","nodeType":"FunctionDefinition","parameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2525,"mutability":"mutable","name":"a","nameLocation":"12000:1:11","nodeType":"VariableDeclaration","scope":2542,"src":"11992:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2528,"mutability":"mutable","name":"b","nameLocation":"12019:1:11","nodeType":"VariableDeclaration","scope":2542,"src":"12003:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2527,"nodeType":"UserDefinedTypeName","pathNode":{"id":2526,"name":"Unsigned","nameLocations":["12003:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"12003:8:11"},"referencedDeclaration":1911,"src":"12003:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"11991:30:11"},"returnParameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2542,"src":"12045:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2531,"nodeType":"UserDefinedTypeName","pathNode":{"id":2530,"name":"Unsigned","nameLocations":["12045:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"12045:8:11"},"referencedDeclaration":1911,"src":"12045:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"12044:17:11"},"scope":3525,"src":"11979:134:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2596,"nodeType":"Block","src":"12485:303:11","statements":[{"assignments":[2556],"declarations":[{"constant":false,"id":2556,"mutability":"mutable","name":"aScaled","nameLocation":"12503:7:11","nodeType":"VariableDeclaration","scope":2596,"src":"12495:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"12495:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2562,"initialValue":{"arguments":[{"id":2560,"name":"FP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"12528:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2557,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"12513:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12515:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"12513:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12524:3:11","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1314,"src":"12513:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12513:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12495:51:11"},{"assignments":[2564],"declarations":[{"constant":false,"id":2564,"mutability":"mutable","name":"divFloor","nameLocation":"12564:8:11","nodeType":"VariableDeclaration","scope":2596,"src":"12556:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2563,"name":"uint256","nodeType":"ElementaryTypeName","src":"12556:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2570,"initialValue":{"arguments":[{"expression":{"id":2567,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"12587:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12589:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"12587:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2565,"name":"aScaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"12575:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12583:3:11","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1329,"src":"12575:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12575:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12556:42:11"},{"assignments":[2572],"declarations":[{"constant":false,"id":2572,"mutability":"mutable","name":"mod","nameLocation":"12616:3:11","nodeType":"VariableDeclaration","scope":2596,"src":"12608:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"12608:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2578,"initialValue":{"arguments":[{"expression":{"id":2575,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"12634:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12636:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"12634:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2573,"name":"aScaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"12622:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12630:3:11","memberName":"mod","nodeType":"MemberAccess","referencedDeclaration":1344,"src":"12622:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12622:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12608:37:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2579,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"12659:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12666:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12659:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2594,"nodeType":"Block","src":"12732:50:11","statements":[{"expression":{"arguments":[{"id":2591,"name":"divFloor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"12762:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2590,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"12753:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1911_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12753:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2554,"id":2593,"nodeType":"Return","src":"12746:25:11"}]},"id":2595,"nodeType":"IfStatement","src":"12655:127:11","trueBody":{"id":2589,"nodeType":"Block","src":"12669:57:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"31","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12712:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":2583,"name":"divFloor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"12699:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12708:3:11","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1284,"src":"12699:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12699:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2582,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"12690:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1911_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12690:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2554,"id":2588,"nodeType":"Return","src":"12683:32:11"}]}}]},"documentation":{"id":2543,"nodeType":"StructuredDocumentation","src":"12119:266:11","text":" @notice Divides one `Unsigned` by an `Unsigned` and \"ceil's\" the quotient, reverting on overflow or division by 0.\n @param a a FixedPoint numerator.\n @param b a FixedPoint denominator.\n @return the quotient of `a` divided by `b`."},"id":2597,"implemented":true,"kind":"function","modifiers":[],"name":"divCeil","nameLocation":"12399:7:11","nodeType":"FunctionDefinition","parameters":{"id":2550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2546,"mutability":"mutable","name":"a","nameLocation":"12423:1:11","nodeType":"VariableDeclaration","scope":2597,"src":"12407:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2545,"nodeType":"UserDefinedTypeName","pathNode":{"id":2544,"name":"Unsigned","nameLocations":["12407:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"12407:8:11"},"referencedDeclaration":1911,"src":"12407:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2549,"mutability":"mutable","name":"b","nameLocation":"12442:1:11","nodeType":"VariableDeclaration","scope":2597,"src":"12426:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2548,"nodeType":"UserDefinedTypeName","pathNode":{"id":2547,"name":"Unsigned","nameLocations":["12426:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"12426:8:11"},"referencedDeclaration":1911,"src":"12426:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"12406:38:11"},"returnParameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2597,"src":"12468:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2552,"nodeType":"UserDefinedTypeName","pathNode":{"id":2551,"name":"Unsigned","nameLocations":["12468:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"12468:8:11"},"referencedDeclaration":1911,"src":"12468:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"12467:17:11"},"scope":3525,"src":"12390:398:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2616,"nodeType":"Block","src":"13155:363:11","statements":[{"expression":{"arguments":[{"id":2610,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"13488:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},{"arguments":[{"id":2612,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"13508:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2611,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"13491:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13491:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"},{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}],"id":2609,"name":"divCeil","nodeType":"Identifier","overloadedDeclarations":[2597,2617],"referencedDeclaration":2597,"src":"13480:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Unsigned_$1911_memory_ptr_$_t_struct$_Unsigned_$1911_memory_ptr_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13480:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2608,"id":2615,"nodeType":"Return","src":"13473:38:11"}]},"documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"12794:269:11","text":" @notice Divides one `Unsigned` by an unscaled uint256 and \"ceil's\" the quotient, reverting on overflow or division by 0.\n @param a a FixedPoint numerator.\n @param b a uint256 denominator.\n @return the quotient of `a` divided by `b`."},"id":2617,"implemented":true,"kind":"function","modifiers":[],"name":"divCeil","nameLocation":"13077:7:11","nodeType":"FunctionDefinition","parameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2601,"mutability":"mutable","name":"a","nameLocation":"13101:1:11","nodeType":"VariableDeclaration","scope":2617,"src":"13085:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2600,"nodeType":"UserDefinedTypeName","pathNode":{"id":2599,"name":"Unsigned","nameLocations":["13085:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"13085:8:11"},"referencedDeclaration":1911,"src":"13085:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2603,"mutability":"mutable","name":"b","nameLocation":"13112:1:11","nodeType":"VariableDeclaration","scope":2617,"src":"13104:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2602,"name":"uint256","nodeType":"ElementaryTypeName","src":"13104:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13084:30:11"},"returnParameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2617,"src":"13138:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2606,"nodeType":"UserDefinedTypeName","pathNode":{"id":2605,"name":"Unsigned","nameLocations":["13138:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"13138:8:11"},"referencedDeclaration":1911,"src":"13138:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"13137:17:11"},"scope":3525,"src":"13068:450:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2658,"nodeType":"Block","src":"13922:143:11","statements":[{"expression":{"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2629,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"13932:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":2631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13958:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2630,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"13941:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13941:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"src":"13932:28:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2634,"nodeType":"ExpressionStatement","src":"13932:28:11"},{"body":{"id":2656,"nodeType":"Block","src":"14011:48:11","statements":[{"expression":{"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2649,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"14025:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2651,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"14038:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},{"id":2652,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"14046:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"},{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}],"id":2650,"name":"mul","nodeType":"Identifier","overloadedDeclarations":[2380,2401,3195,3216],"referencedDeclaration":2380,"src":"14034:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Unsigned_$1911_memory_ptr_$_t_struct$_Unsigned_$1911_memory_ptr_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14034:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"src":"14025:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2655,"nodeType":"ExpressionStatement","src":"14025:23:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2639,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"13990:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2640,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"13994:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13990:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2657,"initializationExpression":{"assignments":[2636],"declarations":[{"constant":false,"id":2636,"mutability":"mutable","name":"i","nameLocation":"13983:1:11","nodeType":"VariableDeclaration","scope":2657,"src":"13975:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2635,"name":"uint256","nodeType":"ElementaryTypeName","src":"13975:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2638,"initialValue":{"hexValue":"30","id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13987:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13975:13:11"},"loopExpression":{"expression":{"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2642,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"13997:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14007:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":2643,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"14001:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14003:3:11","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1284,"src":"14001:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14001:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13997:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2648,"nodeType":"ExpressionStatement","src":"13997:12:11"},"nodeType":"ForStatement","src":"13970:89:11"}]},"documentation":{"id":2618,"nodeType":"StructuredDocumentation","src":"13524:303:11","text":" @notice Raises an `Unsigned` to the power of an unscaled uint256, reverting on overflow. E.g., `b=2` squares `a`.\n @dev This will \"floor\" the result.\n @param a a FixedPoint numerator.\n @param b a uint256 denominator.\n @return output is `a` to the power of `b`."},"id":2659,"implemented":true,"kind":"function","modifiers":[],"name":"pow","nameLocation":"13841:3:11","nodeType":"FunctionDefinition","parameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"a","nameLocation":"13861:1:11","nodeType":"VariableDeclaration","scope":2659,"src":"13845:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2620,"nodeType":"UserDefinedTypeName","pathNode":{"id":2619,"name":"Unsigned","nameLocations":["13845:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"13845:8:11"},"referencedDeclaration":1911,"src":"13845:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2623,"mutability":"mutable","name":"b","nameLocation":"13872:1:11","nodeType":"VariableDeclaration","scope":2659,"src":"13864:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"13864:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13844:30:11"},"returnParameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2627,"mutability":"mutable","name":"output","nameLocation":"13914:6:11","nodeType":"VariableDeclaration","scope":2659,"src":"13898:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2626,"nodeType":"UserDefinedTypeName","pathNode":{"id":2625,"name":"Unsigned","nameLocations":["13898:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"13898:8:11"},"referencedDeclaration":1911,"src":"13898:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"13897:24:11"},"scope":3525,"src":"13832:233:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2664,"mutability":"constant","name":"SFP_SCALING_FACTOR","nameLocation":"14457:18:11","nodeType":"VariableDeclaration","scope":3525,"src":"14433:51:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2660,"name":"int256","nodeType":"ElementaryTypeName","src":"14433:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14478:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14482:2:11","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"14478:6:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"private"},{"canonicalName":"FixedPoint.Signed","id":2667,"members":[{"constant":false,"id":2666,"mutability":"mutable","name":"rawValue","nameLocation":"14522:8:11","nodeType":"VariableDeclaration","scope":2667,"src":"14515:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2665,"name":"int256","nodeType":"ElementaryTypeName","src":"14515:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Signed","nameLocation":"14498:6:11","nodeType":"StructDefinition","scope":3525,"src":"14491:46:11","visibility":"public"},{"body":{"id":2692,"nodeType":"Block","src":"14620:114:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2677,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"14638:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14640:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"14638:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14652:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14638:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e656761746976652076616c75652070726f7669646564","id":2681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14655:25:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_67d4d663a223777b2db72220a0c432830eddb0393ba77b536f13c5166cce6d79","typeString":"literal_string \"Negative value provided\""},"value":"Negative value provided"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67d4d663a223777b2db72220a0c432830eddb0393ba77b536f13c5166cce6d79","typeString":"literal_string \"Negative value provided\""}],"id":2676,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14630:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14630:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2683,"nodeType":"ExpressionStatement","src":"14630:51:11"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2687,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"14715:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14717:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"14715:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14707:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2685,"name":"uint256","nodeType":"ElementaryTypeName","src":"14707:7:11","typeDescriptions":{}}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14707:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2684,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"14698:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1911_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14698:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2675,"id":2691,"nodeType":"Return","src":"14691:36:11"}]},"id":2693,"implemented":true,"kind":"function","modifiers":[],"name":"fromSigned","nameLocation":"14552:10:11","nodeType":"FunctionDefinition","parameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"a","nameLocation":"14577:1:11","nodeType":"VariableDeclaration","scope":2693,"src":"14563:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2669,"nodeType":"UserDefinedTypeName","pathNode":{"id":2668,"name":"Signed","nameLocations":["14563:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"14563:6:11"},"referencedDeclaration":2667,"src":"14563:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"14562:17:11"},"returnParameters":{"id":2675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2693,"src":"14603:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2673,"nodeType":"UserDefinedTypeName","pathNode":{"id":2672,"name":"Unsigned","nameLocations":["14603:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"14603:8:11"},"referencedDeclaration":1911,"src":"14603:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"14602:17:11"},"scope":3525,"src":"14543:191:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2725,"nodeType":"Block","src":"14819:130:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2703,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"14837:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14839:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"14837:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":2709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14864:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2708,"name":"int256","nodeType":"ElementaryTypeName","src":"14864:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2707,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14859:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14859:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14872:3:11","memberName":"max","nodeType":"MemberAccess","src":"14859:16:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14851:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2705,"name":"uint256","nodeType":"ElementaryTypeName","src":"14851:7:11","typeDescriptions":{}}},"id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14851:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14837:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e7369676e656420746f6f206c61726765","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14878:20:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_691496971f117be8e4dbef07509d13e2786a6857df6bd4e7d50c0d0707e224ae","typeString":"literal_string \"Unsigned too large\""},"value":"Unsigned too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_691496971f117be8e4dbef07509d13e2786a6857df6bd4e7d50c0d0707e224ae","typeString":"literal_string \"Unsigned too large\""}],"id":2702,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14829:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14829:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2716,"nodeType":"ExpressionStatement","src":"14829:70:11"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2720,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"14930:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2721,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14932:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"14930:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14923:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2718,"name":"int256","nodeType":"ElementaryTypeName","src":"14923:6:11","typeDescriptions":{}}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14923:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2717,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"14916:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2667_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14916:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":2701,"id":2724,"nodeType":"Return","src":"14909:33:11"}]},"id":2726,"implemented":true,"kind":"function","modifiers":[],"name":"fromUnsigned","nameLocation":"14749:12:11","nodeType":"FunctionDefinition","parameters":{"id":2697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2696,"mutability":"mutable","name":"a","nameLocation":"14778:1:11","nodeType":"VariableDeclaration","scope":2726,"src":"14762:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2695,"nodeType":"UserDefinedTypeName","pathNode":{"id":2694,"name":"Unsigned","nameLocations":["14762:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"14762:8:11"},"referencedDeclaration":1911,"src":"14762:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"14761:19:11"},"returnParameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2726,"src":"14804:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2699,"nodeType":"UserDefinedTypeName","pathNode":{"id":2698,"name":"Signed","nameLocations":["14804:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"14804:6:11"},"referencedDeclaration":2667,"src":"14804:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"14803:15:11"},"scope":3525,"src":"14740:209:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2742,"nodeType":"Block","src":"15260:57:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2738,"name":"SFP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"15290:18:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2736,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"15284:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15286:3:11","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1438,"src":"15284:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15284:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2735,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"15277:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2667_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15277:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":2734,"id":2741,"nodeType":"Return","src":"15270:40:11"}]},"documentation":{"id":2727,"nodeType":"StructuredDocumentation","src":"14955:227:11","text":" @notice Constructs a `Signed` from an unscaled int, e.g., `b=5` gets stored internally as `5*(10**18)`.\n @param a int to convert into a FixedPoint.Signed.\n @return the converted FixedPoint.Signed."},"id":2743,"implemented":true,"kind":"function","modifiers":[],"name":"fromUnscaledInt","nameLocation":"15196:15:11","nodeType":"FunctionDefinition","parameters":{"id":2730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2729,"mutability":"mutable","name":"a","nameLocation":"15219:1:11","nodeType":"VariableDeclaration","scope":2743,"src":"15212:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2728,"name":"int256","nodeType":"ElementaryTypeName","src":"15212:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"15211:10:11"},"returnParameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2743,"src":"15245:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2732,"nodeType":"UserDefinedTypeName","pathNode":{"id":2731,"name":"Signed","nameLocations":["15245:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"15245:6:11"},"referencedDeclaration":2667,"src":"15245:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"15244:15:11"},"scope":3525,"src":"15187:130:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2762,"nodeType":"Block","src":"15559:65:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2754,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"15576:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15578:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"15576:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2757,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"15606:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2756,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"15590:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15590:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15609:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"15590:27:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"15576:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2753,"id":2761,"nodeType":"Return","src":"15569:48:11"}]},"documentation":{"id":2744,"nodeType":"StructuredDocumentation","src":"15323:158:11","text":" @notice Whether `a` is equal to `b`.\n @param a a FixedPoint.Signed.\n @param b a int256.\n @return True if equal, or False."},"id":2763,"implemented":true,"kind":"function","modifiers":[],"name":"isEqual","nameLocation":"15495:7:11","nodeType":"FunctionDefinition","parameters":{"id":2750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2747,"mutability":"mutable","name":"a","nameLocation":"15517:1:11","nodeType":"VariableDeclaration","scope":2763,"src":"15503:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2746,"nodeType":"UserDefinedTypeName","pathNode":{"id":2745,"name":"Signed","nameLocations":["15503:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"15503:6:11"},"referencedDeclaration":2667,"src":"15503:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2749,"mutability":"mutable","name":"b","nameLocation":"15527:1:11","nodeType":"VariableDeclaration","scope":2763,"src":"15520:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2748,"name":"int256","nodeType":"ElementaryTypeName","src":"15520:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"15502:27:11"},"returnParameters":{"id":2753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2763,"src":"15553:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2751,"name":"bool","nodeType":"ElementaryTypeName","src":"15553:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15552:6:11"},"scope":3525,"src":"15486:138:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2781,"nodeType":"Block","src":"15884:48:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2775,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"15901:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2776,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15903:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"15901:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2777,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"15915:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15917:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"15915:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"15901:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2774,"id":2780,"nodeType":"Return","src":"15894:31:11"}]},"documentation":{"id":2764,"nodeType":"StructuredDocumentation","src":"15630:169:11","text":" @notice Whether `a` is equal to `b`.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return True if equal, or False."},"id":2782,"implemented":true,"kind":"function","modifiers":[],"name":"isEqual","nameLocation":"15813:7:11","nodeType":"FunctionDefinition","parameters":{"id":2771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"a","nameLocation":"15835:1:11","nodeType":"VariableDeclaration","scope":2782,"src":"15821:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2766,"nodeType":"UserDefinedTypeName","pathNode":{"id":2765,"name":"Signed","nameLocations":["15821:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"15821:6:11"},"referencedDeclaration":2667,"src":"15821:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2770,"mutability":"mutable","name":"b","nameLocation":"15852:1:11","nodeType":"VariableDeclaration","scope":2782,"src":"15838:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2769,"nodeType":"UserDefinedTypeName","pathNode":{"id":2768,"name":"Signed","nameLocations":["15838:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"15838:6:11"},"referencedDeclaration":2667,"src":"15838:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"15820:34:11"},"returnParameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2782,"src":"15878:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2772,"name":"bool","nodeType":"ElementaryTypeName","src":"15878:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15877:6:11"},"scope":3525,"src":"15804:128:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2800,"nodeType":"Block","src":"16204:47:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2794,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"16221:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16223:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"16221:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2796,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"16234:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16236:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"16234:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16221:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2793,"id":2799,"nodeType":"Return","src":"16214:30:11"}]},"documentation":{"id":2783,"nodeType":"StructuredDocumentation","src":"15938:175:11","text":" @notice Whether `a` is greater than `b`.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return True if `a > b`, or False."},"id":2801,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThan","nameLocation":"16127:13:11","nodeType":"FunctionDefinition","parameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2786,"mutability":"mutable","name":"a","nameLocation":"16155:1:11","nodeType":"VariableDeclaration","scope":2801,"src":"16141:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2785,"nodeType":"UserDefinedTypeName","pathNode":{"id":2784,"name":"Signed","nameLocations":["16141:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"16141:6:11"},"referencedDeclaration":2667,"src":"16141:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2789,"mutability":"mutable","name":"b","nameLocation":"16172:1:11","nodeType":"VariableDeclaration","scope":2801,"src":"16158:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2788,"nodeType":"UserDefinedTypeName","pathNode":{"id":2787,"name":"Signed","nameLocations":["16158:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"16158:6:11"},"referencedDeclaration":2667,"src":"16158:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"16140:34:11"},"returnParameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2801,"src":"16198:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2791,"name":"bool","nodeType":"ElementaryTypeName","src":"16198:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16197:6:11"},"scope":3525,"src":"16118:133:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2820,"nodeType":"Block","src":"16506:64:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2812,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"16523:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16525:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"16523:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2815,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"16552:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2814,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"16536:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16536:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16555:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"16536:27:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16523:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2811,"id":2819,"nodeType":"Return","src":"16516:47:11"}]},"documentation":{"id":2802,"nodeType":"StructuredDocumentation","src":"16257:165:11","text":" @notice Whether `a` is greater than `b`.\n @param a a FixedPoint.Signed.\n @param b an int256.\n @return True if `a > b`, or False."},"id":2821,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThan","nameLocation":"16436:13:11","nodeType":"FunctionDefinition","parameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2805,"mutability":"mutable","name":"a","nameLocation":"16464:1:11","nodeType":"VariableDeclaration","scope":2821,"src":"16450:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2804,"nodeType":"UserDefinedTypeName","pathNode":{"id":2803,"name":"Signed","nameLocations":["16450:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"16450:6:11"},"referencedDeclaration":2667,"src":"16450:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2807,"mutability":"mutable","name":"b","nameLocation":"16474:1:11","nodeType":"VariableDeclaration","scope":2821,"src":"16467:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2806,"name":"int256","nodeType":"ElementaryTypeName","src":"16467:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"16449:27:11"},"returnParameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2821,"src":"16500:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2809,"name":"bool","nodeType":"ElementaryTypeName","src":"16500:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16499:6:11"},"scope":3525,"src":"16427:143:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2840,"nodeType":"Block","src":"16825:64:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2833,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"16858:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2832,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"16842:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16842:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16861:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"16842:27:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2836,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"16872:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16874:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"16872:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16842:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2831,"id":2839,"nodeType":"Return","src":"16835:47:11"}]},"documentation":{"id":2822,"nodeType":"StructuredDocumentation","src":"16576:165:11","text":" @notice Whether `a` is greater than `b`.\n @param a an int256.\n @param b a FixedPoint.Signed.\n @return True if `a > b`, or False."},"id":2841,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThan","nameLocation":"16755:13:11","nodeType":"FunctionDefinition","parameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"a","nameLocation":"16776:1:11","nodeType":"VariableDeclaration","scope":2841,"src":"16769:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2823,"name":"int256","nodeType":"ElementaryTypeName","src":"16769:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2827,"mutability":"mutable","name":"b","nameLocation":"16793:1:11","nodeType":"VariableDeclaration","scope":2841,"src":"16779:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2826,"nodeType":"UserDefinedTypeName","pathNode":{"id":2825,"name":"Signed","nameLocations":["16779:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"16779:6:11"},"referencedDeclaration":2667,"src":"16779:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"16768:27:11"},"returnParameters":{"id":2831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2841,"src":"16819:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2829,"name":"bool","nodeType":"ElementaryTypeName","src":"16819:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16818:6:11"},"scope":3525,"src":"16746:143:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2859,"nodeType":"Block","src":"17181:48:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2853,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"17198:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17200:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"17198:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2855,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"17212:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17214:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"17212:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17198:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2852,"id":2858,"nodeType":"Return","src":"17191:31:11"}]},"documentation":{"id":2842,"nodeType":"StructuredDocumentation","src":"16895:188:11","text":" @notice Whether `a` is greater than or equal to `b`.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return True if `a >= b`, or False."},"id":2860,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThanOrEqual","nameLocation":"17097:20:11","nodeType":"FunctionDefinition","parameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2845,"mutability":"mutable","name":"a","nameLocation":"17132:1:11","nodeType":"VariableDeclaration","scope":2860,"src":"17118:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2844,"nodeType":"UserDefinedTypeName","pathNode":{"id":2843,"name":"Signed","nameLocations":["17118:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"17118:6:11"},"referencedDeclaration":2667,"src":"17118:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2848,"mutability":"mutable","name":"b","nameLocation":"17149:1:11","nodeType":"VariableDeclaration","scope":2860,"src":"17135:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2847,"nodeType":"UserDefinedTypeName","pathNode":{"id":2846,"name":"Signed","nameLocations":["17135:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"17135:6:11"},"referencedDeclaration":2667,"src":"17135:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"17117:34:11"},"returnParameters":{"id":2852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2860,"src":"17175:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2850,"name":"bool","nodeType":"ElementaryTypeName","src":"17175:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17174:6:11"},"scope":3525,"src":"17088:141:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2879,"nodeType":"Block","src":"17504:65:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2871,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"17521:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2872,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17523:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"17521:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2874,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"17551:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2873,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"17535:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17535:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17554:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"17535:27:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17521:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2870,"id":2878,"nodeType":"Return","src":"17514:48:11"}]},"documentation":{"id":2861,"nodeType":"StructuredDocumentation","src":"17235:178:11","text":" @notice Whether `a` is greater than or equal to `b`.\n @param a a FixedPoint.Signed.\n @param b an int256.\n @return True if `a >= b`, or False."},"id":2880,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThanOrEqual","nameLocation":"17427:20:11","nodeType":"FunctionDefinition","parameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"a","nameLocation":"17462:1:11","nodeType":"VariableDeclaration","scope":2880,"src":"17448:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2863,"nodeType":"UserDefinedTypeName","pathNode":{"id":2862,"name":"Signed","nameLocations":["17448:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"17448:6:11"},"referencedDeclaration":2667,"src":"17448:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2866,"mutability":"mutable","name":"b","nameLocation":"17472:1:11","nodeType":"VariableDeclaration","scope":2880,"src":"17465:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2865,"name":"int256","nodeType":"ElementaryTypeName","src":"17465:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17447:27:11"},"returnParameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2880,"src":"17498:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2868,"name":"bool","nodeType":"ElementaryTypeName","src":"17498:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17497:6:11"},"scope":3525,"src":"17418:151:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2899,"nodeType":"Block","src":"17844:65:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2892,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"17877:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2891,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"17861:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17861:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2894,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17880:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"17861:27:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2895,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"17892:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17894:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"17892:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17861:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2890,"id":2898,"nodeType":"Return","src":"17854:48:11"}]},"documentation":{"id":2881,"nodeType":"StructuredDocumentation","src":"17575:178:11","text":" @notice Whether `a` is greater than or equal to `b`.\n @param a an int256.\n @param b a FixedPoint.Signed.\n @return True if `a >= b`, or False."},"id":2900,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThanOrEqual","nameLocation":"17767:20:11","nodeType":"FunctionDefinition","parameters":{"id":2887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"a","nameLocation":"17795:1:11","nodeType":"VariableDeclaration","scope":2900,"src":"17788:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2882,"name":"int256","nodeType":"ElementaryTypeName","src":"17788:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2886,"mutability":"mutable","name":"b","nameLocation":"17812:1:11","nodeType":"VariableDeclaration","scope":2900,"src":"17798:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2885,"nodeType":"UserDefinedTypeName","pathNode":{"id":2884,"name":"Signed","nameLocations":["17798:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"17798:6:11"},"referencedDeclaration":2667,"src":"17798:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"17787:27:11"},"returnParameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2900,"src":"17838:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2888,"name":"bool","nodeType":"ElementaryTypeName","src":"17838:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17837:6:11"},"scope":3525,"src":"17758:151:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2918,"nodeType":"Block","src":"18175:47:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2912,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"18192:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18194:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"18192:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2914,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"18205:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18207:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"18205:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18192:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2911,"id":2917,"nodeType":"Return","src":"18185:30:11"}]},"documentation":{"id":2901,"nodeType":"StructuredDocumentation","src":"17915:172:11","text":" @notice Whether `a` is less than `b`.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return True if `a < b`, or False."},"id":2919,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThan","nameLocation":"18101:10:11","nodeType":"FunctionDefinition","parameters":{"id":2908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"a","nameLocation":"18126:1:11","nodeType":"VariableDeclaration","scope":2919,"src":"18112:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2903,"nodeType":"UserDefinedTypeName","pathNode":{"id":2902,"name":"Signed","nameLocations":["18112:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"18112:6:11"},"referencedDeclaration":2667,"src":"18112:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2907,"mutability":"mutable","name":"b","nameLocation":"18143:1:11","nodeType":"VariableDeclaration","scope":2919,"src":"18129:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2906,"nodeType":"UserDefinedTypeName","pathNode":{"id":2905,"name":"Signed","nameLocations":["18129:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"18129:6:11"},"referencedDeclaration":2667,"src":"18129:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"18111:34:11"},"returnParameters":{"id":2911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2919,"src":"18169:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2909,"name":"bool","nodeType":"ElementaryTypeName","src":"18169:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18168:6:11"},"scope":3525,"src":"18092:130:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2938,"nodeType":"Block","src":"18471:64:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2930,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"18488:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18490:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"18488:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":2933,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"18517:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2932,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"18501:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18501:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18520:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"18501:27:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18488:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2929,"id":2937,"nodeType":"Return","src":"18481:47:11"}]},"documentation":{"id":2920,"nodeType":"StructuredDocumentation","src":"18228:162:11","text":" @notice Whether `a` is less than `b`.\n @param a a FixedPoint.Signed.\n @param b an int256.\n @return True if `a < b`, or False."},"id":2939,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThan","nameLocation":"18404:10:11","nodeType":"FunctionDefinition","parameters":{"id":2926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2923,"mutability":"mutable","name":"a","nameLocation":"18429:1:11","nodeType":"VariableDeclaration","scope":2939,"src":"18415:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2922,"nodeType":"UserDefinedTypeName","pathNode":{"id":2921,"name":"Signed","nameLocations":["18415:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"18415:6:11"},"referencedDeclaration":2667,"src":"18415:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2925,"mutability":"mutable","name":"b","nameLocation":"18439:1:11","nodeType":"VariableDeclaration","scope":2939,"src":"18432:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2924,"name":"int256","nodeType":"ElementaryTypeName","src":"18432:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18414:27:11"},"returnParameters":{"id":2929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2939,"src":"18465:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2927,"name":"bool","nodeType":"ElementaryTypeName","src":"18465:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18464:6:11"},"scope":3525,"src":"18395:140:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2958,"nodeType":"Block","src":"18784:64:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2951,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"18817:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2950,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"18801:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18801:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18820:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"18801:27:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2954,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"18831:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18833:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"18831:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18801:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2949,"id":2957,"nodeType":"Return","src":"18794:47:11"}]},"documentation":{"id":2940,"nodeType":"StructuredDocumentation","src":"18541:162:11","text":" @notice Whether `a` is less than `b`.\n @param a an int256.\n @param b a FixedPoint.Signed.\n @return True if `a < b`, or False."},"id":2959,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThan","nameLocation":"18717:10:11","nodeType":"FunctionDefinition","parameters":{"id":2946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2942,"mutability":"mutable","name":"a","nameLocation":"18735:1:11","nodeType":"VariableDeclaration","scope":2959,"src":"18728:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2941,"name":"int256","nodeType":"ElementaryTypeName","src":"18728:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2945,"mutability":"mutable","name":"b","nameLocation":"18752:1:11","nodeType":"VariableDeclaration","scope":2959,"src":"18738:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2944,"nodeType":"UserDefinedTypeName","pathNode":{"id":2943,"name":"Signed","nameLocations":["18738:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"18738:6:11"},"referencedDeclaration":2667,"src":"18738:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"18727:27:11"},"returnParameters":{"id":2949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2959,"src":"18778:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2947,"name":"bool","nodeType":"ElementaryTypeName","src":"18778:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18777:6:11"},"scope":3525,"src":"18708:140:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2977,"nodeType":"Block","src":"19134:48:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2971,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"19151:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19153:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"19151:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2973,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"19165:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19167:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"19165:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19151:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2970,"id":2976,"nodeType":"Return","src":"19144:31:11"}]},"documentation":{"id":2960,"nodeType":"StructuredDocumentation","src":"18854:185:11","text":" @notice Whether `a` is less than or equal to `b`.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return True if `a <= b`, or False."},"id":2978,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThanOrEqual","nameLocation":"19053:17:11","nodeType":"FunctionDefinition","parameters":{"id":2967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"a","nameLocation":"19085:1:11","nodeType":"VariableDeclaration","scope":2978,"src":"19071:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2962,"nodeType":"UserDefinedTypeName","pathNode":{"id":2961,"name":"Signed","nameLocations":["19071:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"19071:6:11"},"referencedDeclaration":2667,"src":"19071:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2966,"mutability":"mutable","name":"b","nameLocation":"19102:1:11","nodeType":"VariableDeclaration","scope":2978,"src":"19088:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2965,"nodeType":"UserDefinedTypeName","pathNode":{"id":2964,"name":"Signed","nameLocations":["19088:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"19088:6:11"},"referencedDeclaration":2667,"src":"19088:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"19070:34:11"},"returnParameters":{"id":2970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2978,"src":"19128:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2968,"name":"bool","nodeType":"ElementaryTypeName","src":"19128:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19127:6:11"},"scope":3525,"src":"19044:138:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2997,"nodeType":"Block","src":"19451:65:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2989,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"19468:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2990,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19470:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"19468:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2992,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"19498:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2991,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"19482:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19482:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2994,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19501:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"19482:27:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19468:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2988,"id":2996,"nodeType":"Return","src":"19461:48:11"}]},"documentation":{"id":2979,"nodeType":"StructuredDocumentation","src":"19188:175:11","text":" @notice Whether `a` is less than or equal to `b`.\n @param a a FixedPoint.Signed.\n @param b an int256.\n @return True if `a <= b`, or False."},"id":2998,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThanOrEqual","nameLocation":"19377:17:11","nodeType":"FunctionDefinition","parameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2982,"mutability":"mutable","name":"a","nameLocation":"19409:1:11","nodeType":"VariableDeclaration","scope":2998,"src":"19395:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2981,"nodeType":"UserDefinedTypeName","pathNode":{"id":2980,"name":"Signed","nameLocations":["19395:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"19395:6:11"},"referencedDeclaration":2667,"src":"19395:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2984,"mutability":"mutable","name":"b","nameLocation":"19419:1:11","nodeType":"VariableDeclaration","scope":2998,"src":"19412:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2983,"name":"int256","nodeType":"ElementaryTypeName","src":"19412:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19394:27:11"},"returnParameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2998,"src":"19445:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2986,"name":"bool","nodeType":"ElementaryTypeName","src":"19445:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19444:6:11"},"scope":3525,"src":"19368:148:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3017,"nodeType":"Block","src":"19785:65:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3010,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"19818:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3009,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"19802:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19802:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19821:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"19802:27:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3013,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"19833:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19835:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"19833:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19802:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3008,"id":3016,"nodeType":"Return","src":"19795:48:11"}]},"documentation":{"id":2999,"nodeType":"StructuredDocumentation","src":"19522:175:11","text":" @notice Whether `a` is less than or equal to `b`.\n @param a an int256.\n @param b a FixedPoint.Signed.\n @return True if `a <= b`, or False."},"id":3018,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThanOrEqual","nameLocation":"19711:17:11","nodeType":"FunctionDefinition","parameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"a","nameLocation":"19736:1:11","nodeType":"VariableDeclaration","scope":3018,"src":"19729:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3000,"name":"int256","nodeType":"ElementaryTypeName","src":"19729:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3004,"mutability":"mutable","name":"b","nameLocation":"19753:1:11","nodeType":"VariableDeclaration","scope":3018,"src":"19739:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3003,"nodeType":"UserDefinedTypeName","pathNode":{"id":3002,"name":"Signed","nameLocations":["19739:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"19739:6:11"},"referencedDeclaration":2667,"src":"19739:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"19728:27:11"},"returnParameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3018,"src":"19779:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3006,"name":"bool","nodeType":"ElementaryTypeName","src":"19779:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19778:6:11"},"scope":3525,"src":"19702:148:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3040,"nodeType":"Block","src":"20117:55:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3031,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"20134:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20136:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"20134:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3033,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"20147:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20149:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"20147:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20134:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3037,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"20164:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"20134:31:11","trueExpression":{"id":3036,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"20160:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3030,"id":3039,"nodeType":"Return","src":"20127:38:11"}]},"documentation":{"id":3019,"nodeType":"StructuredDocumentation","src":"19856:171:11","text":" @notice The minimum of `a` and `b`.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return the minimum of `a` and `b`."},"id":3041,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"20041:3:11","nodeType":"FunctionDefinition","parameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"a","nameLocation":"20059:1:11","nodeType":"VariableDeclaration","scope":3041,"src":"20045:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3021,"nodeType":"UserDefinedTypeName","pathNode":{"id":3020,"name":"Signed","nameLocations":["20045:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"20045:6:11"},"referencedDeclaration":2667,"src":"20045:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3025,"mutability":"mutable","name":"b","nameLocation":"20076:1:11","nodeType":"VariableDeclaration","scope":3041,"src":"20062:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3024,"nodeType":"UserDefinedTypeName","pathNode":{"id":3023,"name":"Signed","nameLocations":["20062:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"20062:6:11"},"referencedDeclaration":2667,"src":"20062:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"20044:34:11"},"returnParameters":{"id":3030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3041,"src":"20102:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3028,"nodeType":"UserDefinedTypeName","pathNode":{"id":3027,"name":"Signed","nameLocations":["20102:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"20102:6:11"},"referencedDeclaration":2667,"src":"20102:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"20101:15:11"},"scope":3525,"src":"20032:140:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3063,"nodeType":"Block","src":"20439:55:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3054,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"20456:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20458:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"20456:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":3056,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"20469:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3057,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20471:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"20469:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20456:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3060,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"20486:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"20456:31:11","trueExpression":{"id":3059,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"20482:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3053,"id":3062,"nodeType":"Return","src":"20449:38:11"}]},"documentation":{"id":3042,"nodeType":"StructuredDocumentation","src":"20178:171:11","text":" @notice The maximum of `a` and `b`.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return the maximum of `a` and `b`."},"id":3064,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"20363:3:11","nodeType":"FunctionDefinition","parameters":{"id":3049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"mutability":"mutable","name":"a","nameLocation":"20381:1:11","nodeType":"VariableDeclaration","scope":3064,"src":"20367:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3044,"nodeType":"UserDefinedTypeName","pathNode":{"id":3043,"name":"Signed","nameLocations":["20367:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"20367:6:11"},"referencedDeclaration":2667,"src":"20367:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3048,"mutability":"mutable","name":"b","nameLocation":"20398:1:11","nodeType":"VariableDeclaration","scope":3064,"src":"20384:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3047,"nodeType":"UserDefinedTypeName","pathNode":{"id":3046,"name":"Signed","nameLocations":["20384:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"20384:6:11"},"referencedDeclaration":2667,"src":"20384:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"20366:34:11"},"returnParameters":{"id":3053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3064,"src":"20424:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3051,"nodeType":"UserDefinedTypeName","pathNode":{"id":3050,"name":"Signed","nameLocations":["20424:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"20424:6:11"},"referencedDeclaration":2667,"src":"20424:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"20423:15:11"},"scope":3525,"src":"20354:140:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3086,"nodeType":"Block","src":"20772:58:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3081,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"20811:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3082,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20813:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"20811:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":3078,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"20796:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20798:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"20796:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20807:3:11","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1483,"src":"20796:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20796:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3077,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"20789:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2667_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20789:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3076,"id":3085,"nodeType":"Return","src":"20782:41:11"}]},"documentation":{"id":3065,"nodeType":"StructuredDocumentation","src":"20500:182:11","text":" @notice Adds two `Signed`s, reverting on overflow.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return the sum of `a` and `b`."},"id":3087,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"20696:3:11","nodeType":"FunctionDefinition","parameters":{"id":3072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3068,"mutability":"mutable","name":"a","nameLocation":"20714:1:11","nodeType":"VariableDeclaration","scope":3087,"src":"20700:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3067,"nodeType":"UserDefinedTypeName","pathNode":{"id":3066,"name":"Signed","nameLocations":["20700:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"20700:6:11"},"referencedDeclaration":2667,"src":"20700:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3071,"mutability":"mutable","name":"b","nameLocation":"20731:1:11","nodeType":"VariableDeclaration","scope":3087,"src":"20717:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3070,"nodeType":"UserDefinedTypeName","pathNode":{"id":3069,"name":"Signed","nameLocations":["20717:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"20717:6:11"},"referencedDeclaration":2667,"src":"20717:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"20699:34:11"},"returnParameters":{"id":3076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3087,"src":"20757:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3074,"nodeType":"UserDefinedTypeName","pathNode":{"id":3073,"name":"Signed","nameLocations":["20757:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"20757:6:11"},"referencedDeclaration":2667,"src":"20757:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"20756:15:11"},"scope":3525,"src":"20687:143:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3106,"nodeType":"Block","src":"21108:50:11","statements":[{"expression":{"arguments":[{"id":3100,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"21129:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"arguments":[{"id":3102,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"21148:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3101,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"21132:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21132:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}],"id":3099,"name":"add","nodeType":"Identifier","overloadedDeclarations":[2272,2292,3087,3107],"referencedDeclaration":3087,"src":"21125:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2667_memory_ptr_$_t_struct$_Signed_$2667_memory_ptr_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (struct FixedPoint.Signed memory,struct FixedPoint.Signed memory) pure returns (struct FixedPoint.Signed memory)"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21125:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3098,"id":3105,"nodeType":"Return","src":"21118:33:11"}]},"documentation":{"id":3088,"nodeType":"StructuredDocumentation","src":"20836:189:11","text":" @notice Adds an `Signed` to an unscaled int, reverting on overflow.\n @param a a FixedPoint.Signed.\n @param b an int256.\n @return the sum of `a` and `b`."},"id":3107,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"21039:3:11","nodeType":"FunctionDefinition","parameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"a","nameLocation":"21057:1:11","nodeType":"VariableDeclaration","scope":3107,"src":"21043:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3090,"nodeType":"UserDefinedTypeName","pathNode":{"id":3089,"name":"Signed","nameLocations":["21043:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"21043:6:11"},"referencedDeclaration":2667,"src":"21043:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3093,"mutability":"mutable","name":"b","nameLocation":"21067:1:11","nodeType":"VariableDeclaration","scope":3107,"src":"21060:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3092,"name":"int256","nodeType":"ElementaryTypeName","src":"21060:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21042:27:11"},"returnParameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3107,"src":"21093:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3096,"nodeType":"UserDefinedTypeName","pathNode":{"id":3095,"name":"Signed","nameLocations":["21093:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"21093:6:11"},"referencedDeclaration":2667,"src":"21093:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"21092:15:11"},"scope":3525,"src":"21030:128:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3129,"nodeType":"Block","src":"21448:58:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3124,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"21487:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21489:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"21487:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":3121,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"21472:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21474:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"21472:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21483:3:11","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1468,"src":"21472:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21472:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3120,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"21465:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2667_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21465:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3119,"id":3128,"nodeType":"Return","src":"21458:41:11"}]},"documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"21164:194:11","text":" @notice Subtracts two `Signed`s, reverting on overflow.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return the difference of `a` and `b`."},"id":3130,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"21372:3:11","nodeType":"FunctionDefinition","parameters":{"id":3115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3111,"mutability":"mutable","name":"a","nameLocation":"21390:1:11","nodeType":"VariableDeclaration","scope":3130,"src":"21376:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3110,"nodeType":"UserDefinedTypeName","pathNode":{"id":3109,"name":"Signed","nameLocations":["21376:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"21376:6:11"},"referencedDeclaration":2667,"src":"21376:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3114,"mutability":"mutable","name":"b","nameLocation":"21407:1:11","nodeType":"VariableDeclaration","scope":3130,"src":"21393:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3113,"nodeType":"UserDefinedTypeName","pathNode":{"id":3112,"name":"Signed","nameLocations":["21393:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"21393:6:11"},"referencedDeclaration":2667,"src":"21393:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"21375:34:11"},"returnParameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3130,"src":"21433:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3117,"nodeType":"UserDefinedTypeName","pathNode":{"id":3116,"name":"Signed","nameLocations":["21433:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"21433:6:11"},"referencedDeclaration":2667,"src":"21433:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"21432:15:11"},"scope":3525,"src":"21363:143:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3149,"nodeType":"Block","src":"21801:50:11","statements":[{"expression":{"arguments":[{"id":3143,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"21822:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"arguments":[{"id":3145,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"21841:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3144,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"21825:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21825:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}],"id":3142,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[2315,2335,2355,3130,3150,3170],"referencedDeclaration":3130,"src":"21818:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2667_memory_ptr_$_t_struct$_Signed_$2667_memory_ptr_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (struct FixedPoint.Signed memory,struct FixedPoint.Signed memory) pure returns (struct FixedPoint.Signed memory)"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21818:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3141,"id":3148,"nodeType":"Return","src":"21811:33:11"}]},"documentation":{"id":3131,"nodeType":"StructuredDocumentation","src":"21512:206:11","text":" @notice Subtracts an unscaled int256 from an `Signed`, reverting on overflow.\n @param a a FixedPoint.Signed.\n @param b an int256.\n @return the difference of `a` and `b`."},"id":3150,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"21732:3:11","nodeType":"FunctionDefinition","parameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3134,"mutability":"mutable","name":"a","nameLocation":"21750:1:11","nodeType":"VariableDeclaration","scope":3150,"src":"21736:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3133,"nodeType":"UserDefinedTypeName","pathNode":{"id":3132,"name":"Signed","nameLocations":["21736:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"21736:6:11"},"referencedDeclaration":2667,"src":"21736:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3136,"mutability":"mutable","name":"b","nameLocation":"21760:1:11","nodeType":"VariableDeclaration","scope":3150,"src":"21753:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3135,"name":"int256","nodeType":"ElementaryTypeName","src":"21753:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21735:27:11"},"returnParameters":{"id":3141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3150,"src":"21786:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3139,"nodeType":"UserDefinedTypeName","pathNode":{"id":3138,"name":"Signed","nameLocations":["21786:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"21786:6:11"},"referencedDeclaration":2667,"src":"21786:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"21785:15:11"},"scope":3525,"src":"21723:128:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3169,"nodeType":"Block","src":"22146:50:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":3164,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"22183:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3163,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"22167:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22167:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"id":3166,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"22187:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}],"id":3162,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[2315,2335,2355,3130,3150,3170],"referencedDeclaration":3130,"src":"22163:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2667_memory_ptr_$_t_struct$_Signed_$2667_memory_ptr_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (struct FixedPoint.Signed memory,struct FixedPoint.Signed memory) pure returns (struct FixedPoint.Signed memory)"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22163:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3161,"id":3168,"nodeType":"Return","src":"22156:33:11"}]},"documentation":{"id":3151,"nodeType":"StructuredDocumentation","src":"21857:206:11","text":" @notice Subtracts an `Signed` from an unscaled int256, reverting on overflow.\n @param a an int256.\n @param b a FixedPoint.Signed.\n @return the difference of `a` and `b`."},"id":3170,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"22077:3:11","nodeType":"FunctionDefinition","parameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3153,"mutability":"mutable","name":"a","nameLocation":"22088:1:11","nodeType":"VariableDeclaration","scope":3170,"src":"22081:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3152,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3156,"mutability":"mutable","name":"b","nameLocation":"22105:1:11","nodeType":"VariableDeclaration","scope":3170,"src":"22091:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3155,"nodeType":"UserDefinedTypeName","pathNode":{"id":3154,"name":"Signed","nameLocations":["22091:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"22091:6:11"},"referencedDeclaration":2667,"src":"22091:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"22080:27:11"},"returnParameters":{"id":3161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3170,"src":"22131:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3159,"nodeType":"UserDefinedTypeName","pathNode":{"id":3158,"name":"Signed","nameLocations":["22131:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"22131:6:11"},"referencedDeclaration":2667,"src":"22131:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"22130:15:11"},"scope":3525,"src":"22068:128:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3194,"nodeType":"Block","src":"22527:559:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3187,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"23046:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23048:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"23046:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":3184,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"23031:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23033:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"23031:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23042:3:11","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1438,"src":"23031:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23031:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3190,"name":"SFP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"23060:18:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23031:47:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3183,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"23024:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2667_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23024:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3182,"id":3193,"nodeType":"Return","src":"23017:62:11"}]},"documentation":{"id":3171,"nodeType":"StructuredDocumentation","src":"22202:235:11","text":" @notice Multiplies two `Signed`s, reverting on overflow.\n @dev This will \"floor\" the product.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return the product of `a` and `b`."},"id":3195,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"22451:3:11","nodeType":"FunctionDefinition","parameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"a","nameLocation":"22469:1:11","nodeType":"VariableDeclaration","scope":3195,"src":"22455:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3173,"nodeType":"UserDefinedTypeName","pathNode":{"id":3172,"name":"Signed","nameLocations":["22455:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"22455:6:11"},"referencedDeclaration":2667,"src":"22455:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"b","nameLocation":"22486:1:11","nodeType":"VariableDeclaration","scope":3195,"src":"22472:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3176,"nodeType":"UserDefinedTypeName","pathNode":{"id":3175,"name":"Signed","nameLocations":["22472:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"22472:6:11"},"referencedDeclaration":2667,"src":"22472:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"22454:34:11"},"returnParameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3195,"src":"22512:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3180,"nodeType":"UserDefinedTypeName","pathNode":{"id":3179,"name":"Signed","nameLocations":["22512:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"22512:6:11"},"referencedDeclaration":2667,"src":"22512:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"22511:15:11"},"scope":3525,"src":"22442:644:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3215,"nodeType":"Block","src":"23421:49:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":3211,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"23460:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":3208,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"23445:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3209,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23447:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"23445:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23456:3:11","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1438,"src":"23445:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23445:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3207,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"23438:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2667_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23438:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3206,"id":3214,"nodeType":"Return","src":"23431:32:11"}]},"documentation":{"id":3196,"nodeType":"StructuredDocumentation","src":"23092:246:11","text":" @notice Multiplies an `Signed` and an unscaled int256, reverting on overflow.\n @dev This will \"floor\" the product.\n @param a a FixedPoint.Signed.\n @param b an int256.\n @return the product of `a` and `b`."},"id":3216,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"23352:3:11","nodeType":"FunctionDefinition","parameters":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"a","nameLocation":"23370:1:11","nodeType":"VariableDeclaration","scope":3216,"src":"23356:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3198,"nodeType":"UserDefinedTypeName","pathNode":{"id":3197,"name":"Signed","nameLocations":["23356:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"23356:6:11"},"referencedDeclaration":2667,"src":"23356:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3201,"mutability":"mutable","name":"b","nameLocation":"23380:1:11","nodeType":"VariableDeclaration","scope":3216,"src":"23373:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3200,"name":"int256","nodeType":"ElementaryTypeName","src":"23373:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23355:27:11"},"returnParameters":{"id":3206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3216,"src":"23406:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3204,"nodeType":"UserDefinedTypeName","pathNode":{"id":3203,"name":"Signed","nameLocations":["23406:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"23406:6:11"},"referencedDeclaration":2667,"src":"23406:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"23405:15:11"},"scope":3525,"src":"23343:127:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3293,"nodeType":"Block","src":"23795:537:11","statements":[{"assignments":[3230],"declarations":[{"constant":false,"id":3230,"mutability":"mutable","name":"mulRaw","nameLocation":"23812:6:11","nodeType":"VariableDeclaration","scope":3293,"src":"23805:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3229,"name":"int256","nodeType":"ElementaryTypeName","src":"23805:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3237,"initialValue":{"arguments":[{"expression":{"id":3234,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"23836:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23838:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"23836:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":3231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"23821:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23823:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"23821:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23832:3:11","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1438,"src":"23821:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23821:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"23805:42:11"},{"assignments":[3239],"declarations":[{"constant":false,"id":3239,"mutability":"mutable","name":"mulTowardsZero","nameLocation":"23864:14:11","nodeType":"VariableDeclaration","scope":3293,"src":"23857:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3238,"name":"int256","nodeType":"ElementaryTypeName","src":"23857:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3243,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3240,"name":"mulRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"23881:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3241,"name":"SFP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"23890:18:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23881:27:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"23857:51:11"},{"assignments":[3245],"declarations":[{"constant":false,"id":3245,"mutability":"mutable","name":"mod","nameLocation":"23990:3:11","nodeType":"VariableDeclaration","scope":3293,"src":"23983:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3244,"name":"int256","nodeType":"ElementaryTypeName","src":"23983:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3249,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3246,"name":"mulRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"23996:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3247,"name":"SFP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"24005:18:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23996:27:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"23983:40:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3250,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"24037:3:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24044:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24037:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3291,"nodeType":"Block","src":"24272:54:11","statements":[{"expression":{"arguments":[{"id":3288,"name":"mulTowardsZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"24300:14:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3287,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"24293:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2667_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24293:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3228,"id":3290,"nodeType":"Return","src":"24286:29:11"}]},"id":3292,"nodeType":"IfStatement","src":"24033:293:11","trueBody":{"id":3286,"nodeType":"Block","src":"24047:219:11","statements":[{"assignments":[3254],"declarations":[{"constant":false,"id":3254,"mutability":"mutable","name":"isResultPositive","nameLocation":"24066:16:11","nodeType":"VariableDeclaration","scope":3286,"src":"24061:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3253,"name":"bool","nodeType":"ElementaryTypeName","src":"24061:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3264,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"24096:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"hexValue":"30","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24099:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3255,"name":"isLessThan","nodeType":"Identifier","overloadedDeclarations":[2104,2124,2144,2919,2939,2959],"referencedDeclaration":2939,"src":"24085:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2667_memory_ptr_$_t_int256_$returns$_t_bool_$","typeString":"function (struct FixedPoint.Signed memory,int256) pure returns (bool)"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24085:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3260,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"24116:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"hexValue":"30","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24119:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3259,"name":"isLessThan","nodeType":"Identifier","overloadedDeclarations":[2104,2124,2144,2919,2939,2959],"referencedDeclaration":2939,"src":"24105:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2667_memory_ptr_$_t_int256_$returns$_t_bool_$","typeString":"function (struct FixedPoint.Signed memory,int256) pure returns (bool)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24105:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24085:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"24061:60:11"},{"assignments":[3266],"declarations":[{"constant":false,"id":3266,"mutability":"mutable","name":"valueToAdd","nameLocation":"24142:10:11","nodeType":"VariableDeclaration","scope":3286,"src":"24135:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3265,"name":"int256","nodeType":"ElementaryTypeName","src":"24135:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3278,"initialValue":{"condition":{"id":3267,"name":"isResultPositive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"24155:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"24193:2:11","subExpression":{"hexValue":"31","id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24194:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":3273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24186:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3272,"name":"int256","nodeType":"ElementaryTypeName","src":"24186:6:11","typeDescriptions":{}}},"id":3276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24186:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"24155:41:11","trueExpression":{"arguments":[{"hexValue":"31","id":3270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24181:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":3269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24174:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3268,"name":"int256","nodeType":"ElementaryTypeName","src":"24174:6:11","typeDescriptions":{}}},"id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24174:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"24135:61:11"},{"expression":{"arguments":[{"arguments":[{"id":3282,"name":"valueToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"24243:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3280,"name":"mulTowardsZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"24224:14:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24239:3:11","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1483,"src":"24224:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24224:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3279,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"24217:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2667_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24217:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3228,"id":3285,"nodeType":"Return","src":"24210:45:11"}]}}]},"documentation":{"id":3217,"nodeType":"StructuredDocumentation","src":"23476:217:11","text":" @notice Multiplies two `Signed`s and \"ceil's\" the product, reverting on overflow.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return the product of `a` and `b`."},"id":3294,"implemented":true,"kind":"function","modifiers":[],"name":"mulAwayFromZero","nameLocation":"23707:15:11","nodeType":"FunctionDefinition","parameters":{"id":3224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3220,"mutability":"mutable","name":"a","nameLocation":"23737:1:11","nodeType":"VariableDeclaration","scope":3294,"src":"23723:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3219,"nodeType":"UserDefinedTypeName","pathNode":{"id":3218,"name":"Signed","nameLocations":["23723:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"23723:6:11"},"referencedDeclaration":2667,"src":"23723:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"b","nameLocation":"23754:1:11","nodeType":"VariableDeclaration","scope":3294,"src":"23740:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3222,"nodeType":"UserDefinedTypeName","pathNode":{"id":3221,"name":"Signed","nameLocations":["23740:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"23740:6:11"},"referencedDeclaration":2667,"src":"23740:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"23722:34:11"},"returnParameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3294,"src":"23780:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3226,"nodeType":"UserDefinedTypeName","pathNode":{"id":3225,"name":"Signed","nameLocations":["23780:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"23780:6:11"},"referencedDeclaration":2667,"src":"23780:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"23779:15:11"},"scope":3525,"src":"23698:634:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3314,"nodeType":"Block","src":"24671:142:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":3310,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"24803:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":3307,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"24788:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24790:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"24788:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24799:3:11","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1438,"src":"24788:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24788:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3306,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"24781:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2667_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24781:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3305,"id":3313,"nodeType":"Return","src":"24774:32:11"}]},"documentation":{"id":3295,"nodeType":"StructuredDocumentation","src":"24338:238:11","text":" @notice Multiplies an `Signed` and an unscaled int256 and \"ceil's\" the product, reverting on overflow.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return the product of `a` and `b`."},"id":3315,"implemented":true,"kind":"function","modifiers":[],"name":"mulAwayFromZero","nameLocation":"24590:15:11","nodeType":"FunctionDefinition","parameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"a","nameLocation":"24620:1:11","nodeType":"VariableDeclaration","scope":3315,"src":"24606:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3297,"nodeType":"UserDefinedTypeName","pathNode":{"id":3296,"name":"Signed","nameLocations":["24606:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"24606:6:11"},"referencedDeclaration":2667,"src":"24606:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3300,"mutability":"mutable","name":"b","nameLocation":"24630:1:11","nodeType":"VariableDeclaration","scope":3315,"src":"24623:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3299,"name":"int256","nodeType":"ElementaryTypeName","src":"24623:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24605:27:11"},"returnParameters":{"id":3305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3315,"src":"24656:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3303,"nodeType":"UserDefinedTypeName","pathNode":{"id":3302,"name":"Signed","nameLocations":["24656:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"24656:6:11"},"referencedDeclaration":2667,"src":"24656:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"24655:15:11"},"scope":3525,"src":"24581:232:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3340,"nodeType":"Block","src":"25189:542:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3335,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"25712:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25714:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"25712:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"arguments":[{"id":3332,"name":"SFP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"25688:18:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":3329,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"25673:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25675:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"25673:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25684:3:11","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1438,"src":"25673:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25673:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25708:3:11","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1453,"src":"25673:38:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25673:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3328,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"25666:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2667_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25666:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3327,"id":3339,"nodeType":"Return","src":"25659:65:11"}]},"documentation":{"id":3316,"nodeType":"StructuredDocumentation","src":"24819:280:11","text":" @notice Divides one `Signed` by an `Signed`, reverting on overflow or division by 0.\n @dev This will \"floor\" the quotient.\n @param a a FixedPoint numerator.\n @param b a FixedPoint denominator.\n @return the quotient of `a` divided by `b`."},"id":3341,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"25113:3:11","nodeType":"FunctionDefinition","parameters":{"id":3323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3319,"mutability":"mutable","name":"a","nameLocation":"25131:1:11","nodeType":"VariableDeclaration","scope":3341,"src":"25117:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3318,"nodeType":"UserDefinedTypeName","pathNode":{"id":3317,"name":"Signed","nameLocations":["25117:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"25117:6:11"},"referencedDeclaration":2667,"src":"25117:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3322,"mutability":"mutable","name":"b","nameLocation":"25148:1:11","nodeType":"VariableDeclaration","scope":3341,"src":"25134:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3321,"nodeType":"UserDefinedTypeName","pathNode":{"id":3320,"name":"Signed","nameLocations":["25134:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"25134:6:11"},"referencedDeclaration":2667,"src":"25134:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"25116:34:11"},"returnParameters":{"id":3327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3341,"src":"25174:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3325,"nodeType":"UserDefinedTypeName","pathNode":{"id":3324,"name":"Signed","nameLocations":["25174:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"25174:6:11"},"referencedDeclaration":2667,"src":"25174:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"25173:15:11"},"scope":3525,"src":"25104:627:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3361,"nodeType":"Block","src":"26104:49:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":3357,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"26143:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":3354,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"26128:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26130:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"26128:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26139:3:11","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1453,"src":"26128:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26128:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3353,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"26121:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2667_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26121:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3352,"id":3360,"nodeType":"Return","src":"26114:32:11"}]},"documentation":{"id":3342,"nodeType":"StructuredDocumentation","src":"25737:284:11","text":" @notice Divides one `Signed` by an unscaled int256, reverting on overflow or division by 0.\n @dev This will \"floor\" the quotient.\n @param a a FixedPoint numerator.\n @param b an int256 denominator.\n @return the quotient of `a` divided by `b`."},"id":3362,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"26035:3:11","nodeType":"FunctionDefinition","parameters":{"id":3348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3345,"mutability":"mutable","name":"a","nameLocation":"26053:1:11","nodeType":"VariableDeclaration","scope":3362,"src":"26039:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3344,"nodeType":"UserDefinedTypeName","pathNode":{"id":3343,"name":"Signed","nameLocations":["26039:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"26039:6:11"},"referencedDeclaration":2667,"src":"26039:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3347,"mutability":"mutable","name":"b","nameLocation":"26063:1:11","nodeType":"VariableDeclaration","scope":3362,"src":"26056:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3346,"name":"int256","nodeType":"ElementaryTypeName","src":"26056:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26038:27:11"},"returnParameters":{"id":3352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3362,"src":"26089:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3350,"nodeType":"UserDefinedTypeName","pathNode":{"id":3349,"name":"Signed","nameLocations":["26089:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"26089:6:11"},"referencedDeclaration":2667,"src":"26089:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"26088:15:11"},"scope":3525,"src":"26026:127:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3381,"nodeType":"Block","src":"26526:50:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":3376,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"26563:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3375,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"26547:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26547:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"id":3378,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"26567:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}],"id":3374,"name":"div","nodeType":"Identifier","overloadedDeclarations":[2501,2522,2542,3341,3362,3382],"referencedDeclaration":3341,"src":"26543:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2667_memory_ptr_$_t_struct$_Signed_$2667_memory_ptr_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (struct FixedPoint.Signed memory,struct FixedPoint.Signed memory) pure returns (struct FixedPoint.Signed memory)"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26543:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3373,"id":3380,"nodeType":"Return","src":"26536:33:11"}]},"documentation":{"id":3363,"nodeType":"StructuredDocumentation","src":"26159:284:11","text":" @notice Divides one unscaled int256 by an `Signed`, reverting on overflow or division by 0.\n @dev This will \"floor\" the quotient.\n @param a an int256 numerator.\n @param b a FixedPoint denominator.\n @return the quotient of `a` divided by `b`."},"id":3382,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"26457:3:11","nodeType":"FunctionDefinition","parameters":{"id":3369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3365,"mutability":"mutable","name":"a","nameLocation":"26468:1:11","nodeType":"VariableDeclaration","scope":3382,"src":"26461:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3364,"name":"int256","nodeType":"ElementaryTypeName","src":"26461:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3368,"mutability":"mutable","name":"b","nameLocation":"26485:1:11","nodeType":"VariableDeclaration","scope":3382,"src":"26471:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3367,"nodeType":"UserDefinedTypeName","pathNode":{"id":3366,"name":"Signed","nameLocations":["26471:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"26471:6:11"},"referencedDeclaration":2667,"src":"26471:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"26460:27:11"},"returnParameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3382,"src":"26511:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3371,"nodeType":"UserDefinedTypeName","pathNode":{"id":3370,"name":"Signed","nameLocations":["26511:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"26511:6:11"},"referencedDeclaration":2667,"src":"26511:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"26510:15:11"},"scope":3525,"src":"26448:128:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3461,"nodeType":"Block","src":"26946:535:11","statements":[{"assignments":[3396],"declarations":[{"constant":false,"id":3396,"mutability":"mutable","name":"aScaled","nameLocation":"26963:7:11","nodeType":"VariableDeclaration","scope":3461,"src":"26956:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3395,"name":"int256","nodeType":"ElementaryTypeName","src":"26956:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3402,"initialValue":{"arguments":[{"id":3400,"name":"SFP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"26988:18:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":3397,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"26973:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26975:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"26973:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26984:3:11","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1438,"src":"26973:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26973:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"26956:51:11"},{"assignments":[3404],"declarations":[{"constant":false,"id":3404,"mutability":"mutable","name":"divTowardsZero","nameLocation":"27024:14:11","nodeType":"VariableDeclaration","scope":3461,"src":"27017:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3403,"name":"int256","nodeType":"ElementaryTypeName","src":"27017:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3410,"initialValue":{"arguments":[{"expression":{"id":3407,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"27053:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27055:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"27053:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3405,"name":"aScaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"27041:7:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27049:3:11","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1453,"src":"27041:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27041:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"27017:47:11"},{"assignments":[3412],"declarations":[{"constant":false,"id":3412,"mutability":"mutable","name":"mod","nameLocation":"27146:3:11","nodeType":"VariableDeclaration","scope":3461,"src":"27139:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3411,"name":"int256","nodeType":"ElementaryTypeName","src":"27139:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3417,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3413,"name":"aScaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"27152:7:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":3414,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"27162:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27164:8:11","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"27162:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27152:20:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"27139:33:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3418,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"27186:3:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27193:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27186:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3459,"nodeType":"Block","src":"27421:54:11","statements":[{"expression":{"arguments":[{"id":3456,"name":"divTowardsZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"27449:14:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3455,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"27442:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2667_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27442:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3394,"id":3458,"nodeType":"Return","src":"27435:29:11"}]},"id":3460,"nodeType":"IfStatement","src":"27182:293:11","trueBody":{"id":3454,"nodeType":"Block","src":"27196:219:11","statements":[{"assignments":[3422],"declarations":[{"constant":false,"id":3422,"mutability":"mutable","name":"isResultPositive","nameLocation":"27215:16:11","nodeType":"VariableDeclaration","scope":3454,"src":"27210:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3421,"name":"bool","nodeType":"ElementaryTypeName","src":"27210:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3432,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3424,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"27245:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"hexValue":"30","id":3425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27248:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3423,"name":"isLessThan","nodeType":"Identifier","overloadedDeclarations":[2104,2124,2144,2919,2939,2959],"referencedDeclaration":2939,"src":"27234:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2667_memory_ptr_$_t_int256_$returns$_t_bool_$","typeString":"function (struct FixedPoint.Signed memory,int256) pure returns (bool)"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27234:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3428,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"27265:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"hexValue":"30","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27268:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3427,"name":"isLessThan","nodeType":"Identifier","overloadedDeclarations":[2104,2124,2144,2919,2939,2959],"referencedDeclaration":2939,"src":"27254:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2667_memory_ptr_$_t_int256_$returns$_t_bool_$","typeString":"function (struct FixedPoint.Signed memory,int256) pure returns (bool)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27254:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27234:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"27210:60:11"},{"assignments":[3434],"declarations":[{"constant":false,"id":3434,"mutability":"mutable","name":"valueToAdd","nameLocation":"27291:10:11","nodeType":"VariableDeclaration","scope":3454,"src":"27284:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3433,"name":"int256","nodeType":"ElementaryTypeName","src":"27284:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3446,"initialValue":{"condition":{"id":3435,"name":"isResultPositive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"27304:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"27342:2:11","subExpression":{"hexValue":"31","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27343:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":3441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27335:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3440,"name":"int256","nodeType":"ElementaryTypeName","src":"27335:6:11","typeDescriptions":{}}},"id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27335:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"27304:41:11","trueExpression":{"arguments":[{"hexValue":"31","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27330:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":3437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27323:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3436,"name":"int256","nodeType":"ElementaryTypeName","src":"27323:6:11","typeDescriptions":{}}},"id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27323:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"27284:61:11"},{"expression":{"arguments":[{"arguments":[{"id":3450,"name":"valueToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"27392:10:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3448,"name":"divTowardsZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"27373:14:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27388:3:11","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1483,"src":"27373:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27373:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3447,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"27366:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2667_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27366:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3394,"id":3453,"nodeType":"Return","src":"27359:45:11"}]}}]},"documentation":{"id":3383,"nodeType":"StructuredDocumentation","src":"26582:262:11","text":" @notice Divides one `Signed` by an `Signed` and \"ceil's\" the quotient, reverting on overflow or division by 0.\n @param a a FixedPoint numerator.\n @param b a FixedPoint denominator.\n @return the quotient of `a` divided by `b`."},"id":3462,"implemented":true,"kind":"function","modifiers":[],"name":"divAwayFromZero","nameLocation":"26858:15:11","nodeType":"FunctionDefinition","parameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"a","nameLocation":"26888:1:11","nodeType":"VariableDeclaration","scope":3462,"src":"26874:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3385,"nodeType":"UserDefinedTypeName","pathNode":{"id":3384,"name":"Signed","nameLocations":["26874:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"26874:6:11"},"referencedDeclaration":2667,"src":"26874:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"b","nameLocation":"26905:1:11","nodeType":"VariableDeclaration","scope":3462,"src":"26891:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3388,"nodeType":"UserDefinedTypeName","pathNode":{"id":3387,"name":"Signed","nameLocations":["26891:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"26891:6:11"},"referencedDeclaration":2667,"src":"26891:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"26873:34:11"},"returnParameters":{"id":3394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3462,"src":"26931:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3392,"nodeType":"UserDefinedTypeName","pathNode":{"id":3391,"name":"Signed","nameLocations":["26931:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"26931:6:11"},"referencedDeclaration":2667,"src":"26931:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"26930:15:11"},"scope":3525,"src":"26849:632:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3481,"nodeType":"Block","src":"27848:366:11","statements":[{"expression":{"arguments":[{"id":3475,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"28185:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"arguments":[{"id":3477,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"28204:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3476,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"28188:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28188:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}],"id":3474,"name":"divAwayFromZero","nodeType":"Identifier","overloadedDeclarations":[3462,3482],"referencedDeclaration":3462,"src":"28169:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2667_memory_ptr_$_t_struct$_Signed_$2667_memory_ptr_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (struct FixedPoint.Signed memory,struct FixedPoint.Signed memory) pure returns (struct FixedPoint.Signed memory)"}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28169:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3473,"id":3480,"nodeType":"Return","src":"28162:45:11"}]},"documentation":{"id":3463,"nodeType":"StructuredDocumentation","src":"27487:266:11","text":" @notice Divides one `Signed` by an unscaled int256 and \"ceil's\" the quotient, reverting on overflow or division by 0.\n @param a a FixedPoint numerator.\n @param b an int256 denominator.\n @return the quotient of `a` divided by `b`."},"id":3482,"implemented":true,"kind":"function","modifiers":[],"name":"divAwayFromZero","nameLocation":"27767:15:11","nodeType":"FunctionDefinition","parameters":{"id":3469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3466,"mutability":"mutable","name":"a","nameLocation":"27797:1:11","nodeType":"VariableDeclaration","scope":3482,"src":"27783:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3465,"nodeType":"UserDefinedTypeName","pathNode":{"id":3464,"name":"Signed","nameLocations":["27783:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"27783:6:11"},"referencedDeclaration":2667,"src":"27783:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3468,"mutability":"mutable","name":"b","nameLocation":"27807:1:11","nodeType":"VariableDeclaration","scope":3482,"src":"27800:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3467,"name":"int256","nodeType":"ElementaryTypeName","src":"27800:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27782:27:11"},"returnParameters":{"id":3473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3482,"src":"27833:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3471,"nodeType":"UserDefinedTypeName","pathNode":{"id":3470,"name":"Signed","nameLocations":["27833:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"27833:6:11"},"referencedDeclaration":2667,"src":"27833:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"27832:15:11"},"scope":3525,"src":"27758:456:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3523,"nodeType":"Block","src":"28634:142:11","statements":[{"expression":{"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3494,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"28644:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28669:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":3495,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"28653:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28653:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"src":"28644:27:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3499,"nodeType":"ExpressionStatement","src":"28644:27:11"},{"body":{"id":3521,"nodeType":"Block","src":"28722:48:11","statements":[{"expression":{"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3514,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"28736:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3516,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"28749:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"id":3517,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"28757:1:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}],"id":3515,"name":"mul","nodeType":"Identifier","overloadedDeclarations":[2380,2401,3195,3216],"referencedDeclaration":3195,"src":"28745:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2667_memory_ptr_$_t_struct$_Signed_$2667_memory_ptr_$returns$_t_struct$_Signed_$2667_memory_ptr_$","typeString":"function (struct FixedPoint.Signed memory,struct FixedPoint.Signed memory) pure returns (struct FixedPoint.Signed memory)"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28745:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"src":"28736:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3520,"nodeType":"ExpressionStatement","src":"28736:23:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3504,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"28701:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3505,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"28705:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28701:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3522,"initializationExpression":{"assignments":[3501],"declarations":[{"constant":false,"id":3501,"mutability":"mutable","name":"i","nameLocation":"28694:1:11","nodeType":"VariableDeclaration","scope":3522,"src":"28686:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3500,"name":"uint256","nodeType":"ElementaryTypeName","src":"28686:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3503,"initialValue":{"hexValue":"30","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28698:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"28686:13:11"},"loopExpression":{"expression":{"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3507,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"28708:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":3510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28718:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":3508,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"28712:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28714:3:11","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1284,"src":"28712:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28712:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28708:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3513,"nodeType":"ExpressionStatement","src":"28708:12:11"},"nodeType":"ForStatement","src":"28681:89:11"}]},"documentation":{"id":3483,"nodeType":"StructuredDocumentation","src":"28220:323:11","text":" @notice Raises an `Signed` to the power of an unscaled uint256, reverting on overflow. E.g., `b=2` squares `a`.\n @dev This will \"floor\" the result.\n @param a a FixedPoint.Signed.\n @param b a uint256 (negative exponents are not allowed).\n @return output is `a` to the power of `b`."},"id":3524,"implemented":true,"kind":"function","modifiers":[],"name":"pow","nameLocation":"28557:3:11","nodeType":"FunctionDefinition","parameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3486,"mutability":"mutable","name":"a","nameLocation":"28575:1:11","nodeType":"VariableDeclaration","scope":3524,"src":"28561:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3485,"nodeType":"UserDefinedTypeName","pathNode":{"id":3484,"name":"Signed","nameLocations":["28561:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"28561:6:11"},"referencedDeclaration":2667,"src":"28561:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3488,"mutability":"mutable","name":"b","nameLocation":"28586:1:11","nodeType":"VariableDeclaration","scope":3524,"src":"28578:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3487,"name":"uint256","nodeType":"ElementaryTypeName","src":"28578:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28560:28:11"},"returnParameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3492,"mutability":"mutable","name":"output","nameLocation":"28626:6:11","nodeType":"VariableDeclaration","scope":3524,"src":"28612:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3491,"nodeType":"UserDefinedTypeName","pathNode":{"id":3490,"name":"Signed","nameLocations":["28612:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"28612:6:11"},"referencedDeclaration":2667,"src":"28612:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2667_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"28611:22:11"},"scope":3525,"src":"28548:228:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3526,"src":"252:28526:11","usedErrors":[]}],"src":"42:28737:11"},"id":11},"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol":{"ast":{"absolutePath":"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol","exportedSymbols":{"AddressWhitelistInterface":[3551]},"id":3552,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3527,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressWhitelistInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3551,"linearizedBaseContracts":[3551],"name":"AddressWhitelistInterface","nameLocation":"77:25:12","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e43252d7","id":3532,"implemented":false,"kind":"function","modifiers":[],"name":"addToWhitelist","nameLocation":"118:14:12","nodeType":"FunctionDefinition","parameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"newElement","nameLocation":"141:10:12","nodeType":"VariableDeclaration","scope":3532,"src":"133:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3528,"name":"address","nodeType":"ElementaryTypeName","src":"133:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"132:20:12"},"returnParameters":{"id":3531,"nodeType":"ParameterList","parameters":[],"src":"161:0:12"},"scope":3551,"src":"109:53:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8ab1d681","id":3537,"implemented":false,"kind":"function","modifiers":[],"name":"removeFromWhitelist","nameLocation":"177:19:12","nodeType":"FunctionDefinition","parameters":{"id":3535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3534,"mutability":"mutable","name":"newElement","nameLocation":"205:10:12","nodeType":"VariableDeclaration","scope":3537,"src":"197:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3533,"name":"address","nodeType":"ElementaryTypeName","src":"197:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"196:20:12"},"returnParameters":{"id":3536,"nodeType":"ParameterList","parameters":[],"src":"225:0:12"},"scope":3551,"src":"168:58:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3a3ab672","id":3544,"implemented":false,"kind":"function","modifiers":[],"name":"isOnWhitelist","nameLocation":"241:13:12","nodeType":"FunctionDefinition","parameters":{"id":3540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"newElement","nameLocation":"263:10:12","nodeType":"VariableDeclaration","scope":3544,"src":"255:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3538,"name":"address","nodeType":"ElementaryTypeName","src":"255:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"254:20:12"},"returnParameters":{"id":3543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3544,"src":"298:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3541,"name":"bool","nodeType":"ElementaryTypeName","src":"298:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"297:6:12"},"scope":3551,"src":"232:72:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d01f63f5","id":3550,"implemented":false,"kind":"function","modifiers":[],"name":"getWhitelist","nameLocation":"319:12:12","nodeType":"FunctionDefinition","parameters":{"id":3545,"nodeType":"ParameterList","parameters":[],"src":"331:2:12"},"returnParameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3550,"src":"357:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3546,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3547,"nodeType":"ArrayTypeName","src":"357:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"356:18:12"},"scope":3551,"src":"310:65:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3552,"src":"67:310:12","usedErrors":[]}],"src":"42:336:12"},"id":12},"@uma/core/contracts/oracle/implementation/Constants.sol":{"ast":{"absolutePath":"@uma/core/contracts/oracle/implementation/Constants.sol","exportedSymbols":{"OptimisticOracleConstraints":[3602],"OracleInterfaces":[3597]},"id":3603,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3553,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"OracleInterfaces","contractDependencies":[],"contractKind":"library","documentation":{"id":3554,"nodeType":"StructuredDocumentation","src":"67:102:13","text":" @title Stores common interface names used throughout the DVM by registration in the Finder."},"fullyImplemented":true,"id":3597,"linearizedBaseContracts":[3597],"name":"OracleInterfaces","nameLocation":"178:16:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"f24a534e","id":3557,"mutability":"constant","name":"Oracle","nameLocation":"225:6:13","nodeType":"VariableDeclaration","scope":3597,"src":"201:41:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"201:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"4f7261636c65","id":3556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"234:8:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a4461ab9f0dcef4a35a8660e8bbb361ae4c140fabb5b8c363bd6282ded34a90","typeString":"literal_string \"Oracle\""},"value":"Oracle"},"visibility":"public"},{"constant":true,"functionSelector":"4f4a180b","id":3560,"mutability":"constant","name":"IdentifierWhitelist","nameLocation":"272:19:13","nodeType":"VariableDeclaration","scope":3597,"src":"248:67:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"248:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"4964656e74696669657257686974656c697374","id":3559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"294:21:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_00d9d04470dd3fd336d150abd987b1b33f1c6b92e935259bb901f4c9ca28ddf4","typeString":"literal_string \"IdentifierWhitelist\""},"value":"IdentifierWhitelist"},"visibility":"public"},{"constant":true,"functionSelector":"42e90c33","id":3563,"mutability":"constant","name":"Store","nameLocation":"345:5:13","nodeType":"VariableDeclaration","scope":3597,"src":"321:39:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3561,"name":"bytes32","nodeType":"ElementaryTypeName","src":"321:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"53746f7265","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"353:7:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f9742a6ab27efbeed38a3a36aac403fe0810a4cdb9e8328d15bdcd1c87e76672","typeString":"literal_string \"Store\""},"value":"Store"},"visibility":"public"},{"constant":true,"functionSelector":"2a71e5b3","id":3566,"mutability":"constant","name":"FinancialContractsAdmin","nameLocation":"390:23:13","nodeType":"VariableDeclaration","scope":3597,"src":"366:75:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"366:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"46696e616e6369616c436f6e74726163747341646d696e","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"416:25:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_bdecf6c7158bdf4679c9cd47427254674db861278f5aafe09a81927b0ddf85aa","typeString":"literal_string \"FinancialContractsAdmin\""},"value":"FinancialContractsAdmin"},"visibility":"public"},{"constant":true,"functionSelector":"7db9743b","id":3569,"mutability":"constant","name":"Registry","nameLocation":"471:8:13","nodeType":"VariableDeclaration","scope":3597,"src":"447:45:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3567,"name":"bytes32","nodeType":"ElementaryTypeName","src":"447:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"5265676973747279","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"482:10:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8c53ae70b0aa86068023c633abcdda89c433a8a76949ea111f756c171fa23663","typeString":"literal_string \"Registry\""},"value":"Registry"},"visibility":"public"},{"constant":true,"functionSelector":"598dd097","id":3572,"mutability":"constant","name":"CollateralWhitelist","nameLocation":"522:19:13","nodeType":"VariableDeclaration","scope":3597,"src":"498:67:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"498:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"436f6c6c61746572616c57686974656c697374","id":3571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"544:21:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_e9a52feae6648b39bfdb0a8523b0b3da0307731129fd6f0d46a73b43c2989f8f","typeString":"literal_string \"CollateralWhitelist\""},"value":"CollateralWhitelist"},"visibility":"public"},{"constant":true,"functionSelector":"1a4dbd1c","id":3575,"mutability":"constant","name":"OptimisticOracle","nameLocation":"595:16:13","nodeType":"VariableDeclaration","scope":3597,"src":"571:61:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"571:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"4f7074696d69737469634f7261636c65","id":3574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"614:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b7f4a3af71357fd741bc7828f83ec6c49403c71c1a6875664530cb681f8b070","typeString":"literal_string \"OptimisticOracle\""},"value":"OptimisticOracle"},"visibility":"public"},{"constant":true,"functionSelector":"473e7ccd","id":3578,"mutability":"constant","name":"OptimisticOracleV2","nameLocation":"662:18:13","nodeType":"VariableDeclaration","scope":3597,"src":"638:65:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"638:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"4f7074696d69737469634f7261636c655632","id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"683:20:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_616fa5636fbd5fcd7247bf502d2e39a0e864454c814e1628b3406d6d76dcc2d8","typeString":"literal_string \"OptimisticOracleV2\""},"value":"OptimisticOracleV2"},"visibility":"public"},{"constant":true,"functionSelector":"5fa2ef10","id":3581,"mutability":"constant","name":"Bridge","nameLocation":"733:6:13","nodeType":"VariableDeclaration","scope":3597,"src":"709:41:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"709:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"427269646765","id":3580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"742:8:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7aa5ae620294318af92bf4e2b2a729646c932a80312a5fa630da993a2ef5cc10","typeString":"literal_string \"Bridge\""},"value":"Bridge"},"visibility":"public"},{"constant":true,"functionSelector":"079b6c63","id":3584,"mutability":"constant","name":"GenericHandler","nameLocation":"780:14:13","nodeType":"VariableDeclaration","scope":3597,"src":"756:57:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"756:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"47656e6572696348616e646c6572","id":3583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"797:16:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_0c852b6e1eb3d094b8b7ec20be5fb44aea5686ca74f54e2589153de1c87b6302","typeString":"literal_string \"GenericHandler\""},"value":"GenericHandler"},"visibility":"public"},{"constant":true,"functionSelector":"4596ac9b","id":3587,"mutability":"constant","name":"SkinnyOptimisticOracle","nameLocation":"843:22:13","nodeType":"VariableDeclaration","scope":3597,"src":"819:73:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"819:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"536b696e6e794f7074696d69737469634f7261636c65","id":3586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"868:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5783227a49dac1b3d7d5d8e80d9d37463f506ddc1045b867688aa7568f7d856b","typeString":"literal_string \"SkinnyOptimisticOracle\""},"value":"SkinnyOptimisticOracle"},"visibility":"public"},{"constant":true,"functionSelector":"1a0fbfb3","id":3590,"mutability":"constant","name":"ChildMessenger","nameLocation":"922:14:13","nodeType":"VariableDeclaration","scope":3597,"src":"898:57:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"898:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"4368696c644d657373656e676572","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"939:16:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6677d1b6637fcf983cd26dcc1dc81de432550efa8c3484b1099189803b59f9e9","typeString":"literal_string \"ChildMessenger\""},"value":"ChildMessenger"},"visibility":"public"},{"constant":true,"functionSelector":"7608ea2f","id":3593,"mutability":"constant","name":"OracleHub","nameLocation":"985:9:13","nodeType":"VariableDeclaration","scope":3597,"src":"961:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"961:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"4f7261636c65487562","id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"997:11:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ae3a082c61a7379e2280f3356a5131507d9829d222d853bfa7c9fe1200dd040","typeString":"literal_string \"OracleHub\""},"value":"OracleHub"},"visibility":"public"},{"constant":true,"functionSelector":"8adca47f","id":3596,"mutability":"constant","name":"OracleSpoke","nameLocation":"1038:11:13","nodeType":"VariableDeclaration","scope":3597,"src":"1014:51:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1014:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"4f7261636c6553706f6b65","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1052:13:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_fa6c3ccbd43e09dd0b7bf91a760bebaf6409bb7669b007983fb1993c9a18948d","typeString":"literal_string \"OracleSpoke\""},"value":"OracleSpoke"},"visibility":"public"}],"scope":3603,"src":"170:898:13","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"OptimisticOracleConstraints","contractDependencies":[],"contractKind":"library","documentation":{"id":3598,"nodeType":"StructuredDocumentation","src":"1070:93:13","text":" @title Commonly re-used values for contracts associated with the OptimisticOracle."},"fullyImplemented":true,"id":3602,"linearizedBaseContracts":[3602],"name":"OptimisticOracleConstraints","nameLocation":"1172:27:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"c371dda7","id":3601,"mutability":"constant","name":"ancillaryBytesLimit","nameLocation":"1666:19:13","nodeType":"VariableDeclaration","scope":3602,"src":"1642:50:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1642:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"38313932","id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:4:13","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"value":"8192"},"visibility":"public"}],"scope":3603,"src":"1164:531:13","usedErrors":[]}],"src":"42:1654:13"},"id":13},"@uma/core/contracts/oracle/interfaces/FinderInterface.sol":{"ast":{"absolutePath":"@uma/core/contracts/oracle/interfaces/FinderInterface.sol","exportedSymbols":{"FinderInterface":[3622]},"id":3623,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3604,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"FinderInterface","contractDependencies":[],"contractKind":"interface","documentation":{"id":3605,"nodeType":"StructuredDocumentation","src":"67:144:14","text":" @title Provides addresses of the live contracts implementing certain interfaces.\n @dev Examples are the Oracle or Store interfaces."},"fullyImplemented":false,"id":3622,"linearizedBaseContracts":[3622],"name":"FinderInterface","nameLocation":"222:15:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3606,"nodeType":"StructuredDocumentation","src":"244:300:14","text":" @notice Updates the address of the contract that implements `interfaceName`.\n @param interfaceName bytes32 encoding of the interface name that is either changed or registered.\n @param implementationAddress address of the deployed contract that implements the interface."},"functionSelector":"31f9665e","id":3613,"implemented":false,"kind":"function","modifiers":[],"name":"changeImplementationAddress","nameLocation":"558:27:14","nodeType":"FunctionDefinition","parameters":{"id":3611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"interfaceName","nameLocation":"594:13:14","nodeType":"VariableDeclaration","scope":3613,"src":"586:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"586:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3610,"mutability":"mutable","name":"implementationAddress","nameLocation":"617:21:14","nodeType":"VariableDeclaration","scope":3613,"src":"609:29:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3609,"name":"address","nodeType":"ElementaryTypeName","src":"609:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"585:54:14"},"returnParameters":{"id":3612,"nodeType":"ParameterList","parameters":[],"src":"648:0:14"},"scope":3622,"src":"549:100:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3614,"nodeType":"StructuredDocumentation","src":"655:250:14","text":" @notice Gets the address of the contract that implements the given `interfaceName`.\n @param interfaceName queried interface.\n @return implementationAddress address of the deployed contract that implements the interface."},"functionSelector":"aafd5e40","id":3621,"implemented":false,"kind":"function","modifiers":[],"name":"getImplementationAddress","nameLocation":"919:24:14","nodeType":"FunctionDefinition","parameters":{"id":3617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"mutability":"mutable","name":"interfaceName","nameLocation":"952:13:14","nodeType":"VariableDeclaration","scope":3621,"src":"944:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"944:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"943:23:14"},"returnParameters":{"id":3620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3621,"src":"990:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3618,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:9:14"},"scope":3622,"src":"910:89:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3623,"src":"212:789:14","usedErrors":[]}],"src":"42:960:14"},"id":14},"@uma/core/contracts/oracle/interfaces/OptimisticOracleV2Interface.sol":{"ast":{"absolutePath":"@uma/core/contracts/oracle/interfaces/OptimisticOracleV2Interface.sol","exportedSymbols":{"FinderInterface":[3622],"IERC20":[439],"OptimisticOracleV2Interface":[3988]},"id":3989,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3624,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3625,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3989,"sourceUnit":440,"src":"67:56:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/oracle/interfaces/FinderInterface.sol","file":"./FinderInterface.sol","id":3626,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3989,"sourceUnit":3623,"src":"124:31:15","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"OptimisticOracleV2Interface","contractDependencies":[],"contractKind":"contract","documentation":{"id":3627,"nodeType":"StructuredDocumentation","src":"157:175:15","text":" @title Financial contract facing Oracle interface.\n @dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface."},"fullyImplemented":false,"id":3988,"linearizedBaseContracts":[3988],"name":"OptimisticOracleV2Interface","nameLocation":"351:27:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"f1679315ff325c257a944e0ca1bfe7b26616039e9511f9610d4ba3eca851027b","id":3643,"name":"RequestPrice","nameLocation":"391:12:15","nodeType":"EventDefinition","parameters":{"id":3642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3629,"indexed":true,"mutability":"mutable","name":"requester","nameLocation":"429:9:15","nodeType":"VariableDeclaration","scope":3643,"src":"413:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3628,"name":"address","nodeType":"ElementaryTypeName","src":"413:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3631,"indexed":false,"mutability":"mutable","name":"identifier","nameLocation":"456:10:15","nodeType":"VariableDeclaration","scope":3643,"src":"448:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3630,"name":"bytes32","nodeType":"ElementaryTypeName","src":"448:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3633,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"484:9:15","nodeType":"VariableDeclaration","scope":3643,"src":"476:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"476:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3635,"indexed":false,"mutability":"mutable","name":"ancillaryData","nameLocation":"509:13:15","nodeType":"VariableDeclaration","scope":3643,"src":"503:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3634,"name":"bytes","nodeType":"ElementaryTypeName","src":"503:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3637,"indexed":false,"mutability":"mutable","name":"currency","nameLocation":"540:8:15","nodeType":"VariableDeclaration","scope":3643,"src":"532:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3636,"name":"address","nodeType":"ElementaryTypeName","src":"532:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3639,"indexed":false,"mutability":"mutable","name":"reward","nameLocation":"566:6:15","nodeType":"VariableDeclaration","scope":3643,"src":"558:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3638,"name":"uint256","nodeType":"ElementaryTypeName","src":"558:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3641,"indexed":false,"mutability":"mutable","name":"finalFee","nameLocation":"590:8:15","nodeType":"VariableDeclaration","scope":3643,"src":"582:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3640,"name":"uint256","nodeType":"ElementaryTypeName","src":"582:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:201:15"},"src":"385:220:15"},{"anonymous":false,"eventSelector":"6e51dd00371aabffa82cd401592f76ed51e98a9ea4b58751c70463a2c78b5ca1","id":3661,"name":"ProposePrice","nameLocation":"616:12:15","nodeType":"EventDefinition","parameters":{"id":3660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3645,"indexed":true,"mutability":"mutable","name":"requester","nameLocation":"654:9:15","nodeType":"VariableDeclaration","scope":3661,"src":"638:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3644,"name":"address","nodeType":"ElementaryTypeName","src":"638:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3647,"indexed":true,"mutability":"mutable","name":"proposer","nameLocation":"689:8:15","nodeType":"VariableDeclaration","scope":3661,"src":"673:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3646,"name":"address","nodeType":"ElementaryTypeName","src":"673:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3649,"indexed":false,"mutability":"mutable","name":"identifier","nameLocation":"715:10:15","nodeType":"VariableDeclaration","scope":3661,"src":"707:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"707:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3651,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"743:9:15","nodeType":"VariableDeclaration","scope":3661,"src":"735:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3650,"name":"uint256","nodeType":"ElementaryTypeName","src":"735:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3653,"indexed":false,"mutability":"mutable","name":"ancillaryData","nameLocation":"768:13:15","nodeType":"VariableDeclaration","scope":3661,"src":"762:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3652,"name":"bytes","nodeType":"ElementaryTypeName","src":"762:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3655,"indexed":false,"mutability":"mutable","name":"proposedPrice","nameLocation":"798:13:15","nodeType":"VariableDeclaration","scope":3661,"src":"791:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3654,"name":"int256","nodeType":"ElementaryTypeName","src":"791:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3657,"indexed":false,"mutability":"mutable","name":"expirationTimestamp","nameLocation":"829:19:15","nodeType":"VariableDeclaration","scope":3661,"src":"821:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3656,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3659,"indexed":false,"mutability":"mutable","name":"currency","nameLocation":"866:8:15","nodeType":"VariableDeclaration","scope":3661,"src":"858:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3658,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"628:252:15"},"src":"610:271:15"},{"anonymous":false,"eventSelector":"5165909c3d1c01c5d1e121ac6f6d01dda1ba24bc9e1f975b5a375339c15be7f3","id":3677,"name":"DisputePrice","nameLocation":"892:12:15","nodeType":"EventDefinition","parameters":{"id":3676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"indexed":true,"mutability":"mutable","name":"requester","nameLocation":"930:9:15","nodeType":"VariableDeclaration","scope":3677,"src":"914:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3662,"name":"address","nodeType":"ElementaryTypeName","src":"914:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3665,"indexed":true,"mutability":"mutable","name":"proposer","nameLocation":"965:8:15","nodeType":"VariableDeclaration","scope":3677,"src":"949:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3664,"name":"address","nodeType":"ElementaryTypeName","src":"949:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3667,"indexed":true,"mutability":"mutable","name":"disputer","nameLocation":"999:8:15","nodeType":"VariableDeclaration","scope":3677,"src":"983:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3666,"name":"address","nodeType":"ElementaryTypeName","src":"983:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3669,"indexed":false,"mutability":"mutable","name":"identifier","nameLocation":"1025:10:15","nodeType":"VariableDeclaration","scope":3677,"src":"1017:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1017:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3671,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1053:9:15","nodeType":"VariableDeclaration","scope":3677,"src":"1045:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"1045:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3673,"indexed":false,"mutability":"mutable","name":"ancillaryData","nameLocation":"1078:13:15","nodeType":"VariableDeclaration","scope":3677,"src":"1072:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3672,"name":"bytes","nodeType":"ElementaryTypeName","src":"1072:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3675,"indexed":false,"mutability":"mutable","name":"proposedPrice","nameLocation":"1108:13:15","nodeType":"VariableDeclaration","scope":3677,"src":"1101:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3674,"name":"int256","nodeType":"ElementaryTypeName","src":"1101:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"904:223:15"},"src":"886:242:15"},{"anonymous":false,"eventSelector":"3f384afb4bd9f0aef0298c80399950011420eb33b0e1a750b20966270247b9a0","id":3695,"name":"Settle","nameLocation":"1139:6:15","nodeType":"EventDefinition","parameters":{"id":3694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3679,"indexed":true,"mutability":"mutable","name":"requester","nameLocation":"1171:9:15","nodeType":"VariableDeclaration","scope":3695,"src":"1155:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3678,"name":"address","nodeType":"ElementaryTypeName","src":"1155:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3681,"indexed":true,"mutability":"mutable","name":"proposer","nameLocation":"1206:8:15","nodeType":"VariableDeclaration","scope":3695,"src":"1190:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3680,"name":"address","nodeType":"ElementaryTypeName","src":"1190:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3683,"indexed":true,"mutability":"mutable","name":"disputer","nameLocation":"1240:8:15","nodeType":"VariableDeclaration","scope":3695,"src":"1224:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3682,"name":"address","nodeType":"ElementaryTypeName","src":"1224:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3685,"indexed":false,"mutability":"mutable","name":"identifier","nameLocation":"1266:10:15","nodeType":"VariableDeclaration","scope":3695,"src":"1258:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1258:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3687,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1294:9:15","nodeType":"VariableDeclaration","scope":3695,"src":"1286:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"1286:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3689,"indexed":false,"mutability":"mutable","name":"ancillaryData","nameLocation":"1319:13:15","nodeType":"VariableDeclaration","scope":3695,"src":"1313:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3688,"name":"bytes","nodeType":"ElementaryTypeName","src":"1313:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3691,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1349:5:15","nodeType":"VariableDeclaration","scope":3695,"src":"1342:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3690,"name":"int256","nodeType":"ElementaryTypeName","src":"1342:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3693,"indexed":false,"mutability":"mutable","name":"payout","nameLocation":"1372:6:15","nodeType":"VariableDeclaration","scope":3695,"src":"1364:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3692,"name":"uint256","nodeType":"ElementaryTypeName","src":"1364:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1145:239:15"},"src":"1133:252:15"},{"canonicalName":"OptimisticOracleV2Interface.State","id":3703,"members":[{"id":3696,"name":"Invalid","nameLocation":"1468:7:15","nodeType":"EnumValue","src":"1468:7:15"},{"id":3697,"name":"Requested","nameLocation":"1505:9:15","nodeType":"EnumValue","src":"1505:9:15"},{"id":3698,"name":"Proposed","nameLocation":"1562:8:15","nodeType":"EnumValue","src":"1562:8:15"},{"id":3699,"name":"Expired","nameLocation":"1626:7:15","nodeType":"EnumValue","src":"1626:7:15"},{"id":3700,"name":"Disputed","nameLocation":"1685:8:15","nodeType":"EnumValue","src":"1685:8:15"},{"id":3701,"name":"Resolved","nameLocation":"1747:8:15","nodeType":"EnumValue","src":"1747:8:15"},{"id":3702,"name":"Settled","nameLocation":"1805:7:15","nodeType":"EnumValue","src":"1805:7:15"}],"name":"State","nameLocation":"1452:5:15","nodeType":"EnumDefinition","src":"1447:456:15"},{"canonicalName":"OptimisticOracleV2Interface.RequestSettings","id":3718,"members":[{"constant":false,"id":3705,"mutability":"mutable","name":"eventBased","nameLocation":"1947:10:15","nodeType":"VariableDeclaration","scope":3718,"src":"1942:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3704,"name":"bool","nodeType":"ElementaryTypeName","src":"1942:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3707,"mutability":"mutable","name":"refundOnDispute","nameLocation":"2021:15:15","nodeType":"VariableDeclaration","scope":3718,"src":"2016:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3706,"name":"bool","nodeType":"ElementaryTypeName","src":"2016:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3709,"mutability":"mutable","name":"callbackOnPriceProposed","nameLocation":"2120:23:15","nodeType":"VariableDeclaration","scope":3718,"src":"2115:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3708,"name":"bool","nodeType":"ElementaryTypeName","src":"2115:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3711,"mutability":"mutable","name":"callbackOnPriceDisputed","nameLocation":"2215:23:15","nodeType":"VariableDeclaration","scope":3718,"src":"2210:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3710,"name":"bool","nodeType":"ElementaryTypeName","src":"2210:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3713,"mutability":"mutable","name":"callbackOnPriceSettled","nameLocation":"2310:22:15","nodeType":"VariableDeclaration","scope":3718,"src":"2305:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3712,"name":"bool","nodeType":"ElementaryTypeName","src":"2305:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3715,"mutability":"mutable","name":"bond","nameLocation":"2406:4:15","nodeType":"VariableDeclaration","scope":3718,"src":"2398:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"2398:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3717,"mutability":"mutable","name":"customLiveness","nameLocation":"2501:14:15","nodeType":"VariableDeclaration","scope":3718,"src":"2493:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3716,"name":"uint256","nodeType":"ElementaryTypeName","src":"2493:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"RequestSettings","nameLocation":"1916:15:15","nodeType":"StructDefinition","scope":3988,"src":"1909:660:15","visibility":"public"},{"canonicalName":"OptimisticOracleV2Interface.Request","id":3741,"members":[{"constant":false,"id":3720,"mutability":"mutable","name":"proposer","nameLocation":"2652:8:15","nodeType":"VariableDeclaration","scope":3741,"src":"2644:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3719,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3722,"mutability":"mutable","name":"disputer","nameLocation":"2706:8:15","nodeType":"VariableDeclaration","scope":3741,"src":"2698:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3721,"name":"address","nodeType":"ElementaryTypeName","src":"2698:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3725,"mutability":"mutable","name":"currency","nameLocation":"2759:8:15","nodeType":"VariableDeclaration","scope":3741,"src":"2752:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"},"typeName":{"id":3724,"nodeType":"UserDefinedTypeName","pathNode":{"id":3723,"name":"IERC20","nameLocations":["2752:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":439,"src":"2752:6:15"},"referencedDeclaration":439,"src":"2752:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3727,"mutability":"mutable","name":"settled","nameLocation":"2827:7:15","nodeType":"VariableDeclaration","scope":3741,"src":"2822:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3726,"name":"bool","nodeType":"ElementaryTypeName","src":"2822:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3730,"mutability":"mutable","name":"requestSettings","nameLocation":"2895:15:15","nodeType":"VariableDeclaration","scope":3741,"src":"2879:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RequestSettings_$3718_storage_ptr","typeString":"struct OptimisticOracleV2Interface.RequestSettings"},"typeName":{"id":3729,"nodeType":"UserDefinedTypeName","pathNode":{"id":3728,"name":"RequestSettings","nameLocations":["2879:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":3718,"src":"2879:15:15"},"referencedDeclaration":3718,"src":"2879:15:15","typeDescriptions":{"typeIdentifier":"t_struct$_RequestSettings_$3718_storage_ptr","typeString":"struct OptimisticOracleV2Interface.RequestSettings"}},"visibility":"internal"},{"constant":false,"id":3732,"mutability":"mutable","name":"proposedPrice","nameLocation":"2973:13:15","nodeType":"VariableDeclaration","scope":3741,"src":"2966:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3731,"name":"int256","nodeType":"ElementaryTypeName","src":"2966:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3734,"mutability":"mutable","name":"resolvedPrice","nameLocation":"3041:13:15","nodeType":"VariableDeclaration","scope":3741,"src":"3034:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3733,"name":"int256","nodeType":"ElementaryTypeName","src":"3034:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3736,"mutability":"mutable","name":"expirationTime","nameLocation":"3119:14:15","nodeType":"VariableDeclaration","scope":3741,"src":"3111:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3735,"name":"uint256","nodeType":"ElementaryTypeName","src":"3111:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3738,"mutability":"mutable","name":"reward","nameLocation":"3212:6:15","nodeType":"VariableDeclaration","scope":3741,"src":"3204:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3737,"name":"uint256","nodeType":"ElementaryTypeName","src":"3204:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3740,"mutability":"mutable","name":"finalFee","nameLocation":"3300:8:15","nodeType":"VariableDeclaration","scope":3741,"src":"3292:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3739,"name":"uint256","nodeType":"ElementaryTypeName","src":"3292:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Request","nameLocation":"2626:7:15","nodeType":"StructDefinition","scope":3988,"src":"2619:754:15","visibility":"public"},{"constant":true,"functionSelector":"c371dda7","id":3744,"mutability":"constant","name":"ancillaryBytesLimit","nameLocation":"3708:19:15","nodeType":"VariableDeclaration","scope":3988,"src":"3684:50:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3742,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"38313932","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3730:4:15","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"value":"8192"},"visibility":"public"},{"functionSelector":"fe4e1983","id":3749,"implemented":false,"kind":"function","modifiers":[],"name":"defaultLiveness","nameLocation":"3750:15:15","nodeType":"FunctionDefinition","parameters":{"id":3745,"nodeType":"ParameterList","parameters":[],"src":"3765:2:15"},"returnParameters":{"id":3748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3749,"src":"3799:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3746,"name":"uint256","nodeType":"ElementaryTypeName","src":"3799:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3798:9:15"},"scope":3988,"src":"3741:67:15","stateMutability":"view","virtual":true,"visibility":"external"},{"functionSelector":"b9a3c84c","id":3755,"implemented":false,"kind":"function","modifiers":[],"name":"finder","nameLocation":"3823:6:15","nodeType":"FunctionDefinition","parameters":{"id":3750,"nodeType":"ParameterList","parameters":[],"src":"3829:2:15"},"returnParameters":{"id":3754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3755,"src":"3863:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"},"typeName":{"id":3752,"nodeType":"UserDefinedTypeName","pathNode":{"id":3751,"name":"FinderInterface","nameLocations":["3863:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":3622,"src":"3863:15:15"},"referencedDeclaration":3622,"src":"3863:15:15","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"}},"visibility":"internal"}],"src":"3862:17:15"},"scope":3988,"src":"3814:66:15","stateMutability":"view","virtual":true,"visibility":"external"},{"functionSelector":"29cb924d","id":3760,"implemented":false,"kind":"function","modifiers":[],"name":"getCurrentTime","nameLocation":"3895:14:15","nodeType":"FunctionDefinition","parameters":{"id":3756,"nodeType":"ParameterList","parameters":[],"src":"3909:2:15"},"returnParameters":{"id":3759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3760,"src":"3943:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3757,"name":"uint256","nodeType":"ElementaryTypeName","src":"3943:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3942:9:15"},"scope":3988,"src":"3886:66:15","stateMutability":"view","virtual":true,"visibility":"external"},{"constant":false,"functionSelector":"9d866985","id":3765,"mutability":"mutable","name":"requests","nameLocation":"4085:8:15","nodeType":"VariableDeclaration","scope":3988,"src":"4050:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Request_$3741_storage_$","typeString":"mapping(bytes32 => struct OptimisticOracleV2Interface.Request)"},"typeName":{"id":3764,"keyType":{"id":3761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4058:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"4050:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Request_$3741_storage_$","typeString":"mapping(bytes32 => struct OptimisticOracleV2Interface.Request)"},"valueType":{"id":3763,"nodeType":"UserDefinedTypeName","pathNode":{"id":3762,"name":"Request","nameLocations":["4069:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":3741,"src":"4069:7:15"},"referencedDeclaration":3741,"src":"4069:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3741_storage_ptr","typeString":"struct OptimisticOracleV2Interface.Request"}}},"visibility":"public"},{"documentation":{"id":3766,"nodeType":"StructuredDocumentation","src":"4100:854:15","text":" @notice Requests a new price.\n @param identifier price identifier being requested.\n @param timestamp timestamp of the price being requested.\n @param ancillaryData ancillary data representing additional args being passed with the price request.\n @param currency ERC20 token used for payment of rewards and fees. Must be approved for use with the DVM.\n @param reward reward offered to a successful proposer. Will be pulled from the caller. Note: this can be 0,\n               which could make sense if the contract requests and proposes the value in the same call or\n               provides its own reward system.\n @return totalBond default bond (final fee) + final fee that the proposer and disputer will be required to pay.\n This can be changed with a subsequent call to setBond()."},"functionSelector":"11df92f1","id":3782,"implemented":false,"kind":"function","modifiers":[],"name":"requestPrice","nameLocation":"4968:12:15","nodeType":"FunctionDefinition","parameters":{"id":3778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3768,"mutability":"mutable","name":"identifier","nameLocation":"4998:10:15","nodeType":"VariableDeclaration","scope":3782,"src":"4990:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3767,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3770,"mutability":"mutable","name":"timestamp","nameLocation":"5026:9:15","nodeType":"VariableDeclaration","scope":3782,"src":"5018:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3769,"name":"uint256","nodeType":"ElementaryTypeName","src":"5018:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3772,"mutability":"mutable","name":"ancillaryData","nameLocation":"5058:13:15","nodeType":"VariableDeclaration","scope":3782,"src":"5045:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3771,"name":"bytes","nodeType":"ElementaryTypeName","src":"5045:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3775,"mutability":"mutable","name":"currency","nameLocation":"5088:8:15","nodeType":"VariableDeclaration","scope":3782,"src":"5081:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"},"typeName":{"id":3774,"nodeType":"UserDefinedTypeName","pathNode":{"id":3773,"name":"IERC20","nameLocations":["5081:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":439,"src":"5081:6:15"},"referencedDeclaration":439,"src":"5081:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3777,"mutability":"mutable","name":"reward","nameLocation":"5114:6:15","nodeType":"VariableDeclaration","scope":3782,"src":"5106:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"5106:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4980:146:15"},"returnParameters":{"id":3781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3780,"mutability":"mutable","name":"totalBond","nameLocation":"5161:9:15","nodeType":"VariableDeclaration","scope":3782,"src":"5153:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3779,"name":"uint256","nodeType":"ElementaryTypeName","src":"5153:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5152:19:15"},"scope":3988,"src":"4959:213:15","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":3783,"nodeType":"StructuredDocumentation","src":"5178:516:15","text":" @notice Set the proposal bond associated with a price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param bond custom bond amount to set.\n @return totalBond new bond + final fee that the proposer and disputer will be required to pay. This can be\n changed again with a subsequent call to setBond()."},"functionSelector":"ad5a755a","id":3796,"implemented":false,"kind":"function","modifiers":[],"name":"setBond","nameLocation":"5708:7:15","nodeType":"FunctionDefinition","parameters":{"id":3792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"identifier","nameLocation":"5733:10:15","nodeType":"VariableDeclaration","scope":3796,"src":"5725:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5725:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3787,"mutability":"mutable","name":"timestamp","nameLocation":"5761:9:15","nodeType":"VariableDeclaration","scope":3796,"src":"5753:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3786,"name":"uint256","nodeType":"ElementaryTypeName","src":"5753:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3789,"mutability":"mutable","name":"ancillaryData","nameLocation":"5793:13:15","nodeType":"VariableDeclaration","scope":3796,"src":"5780:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3788,"name":"bytes","nodeType":"ElementaryTypeName","src":"5780:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3791,"mutability":"mutable","name":"bond","nameLocation":"5824:4:15","nodeType":"VariableDeclaration","scope":3796,"src":"5816:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"5816:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5715:119:15"},"returnParameters":{"id":3795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3794,"mutability":"mutable","name":"totalBond","nameLocation":"5869:9:15","nodeType":"VariableDeclaration","scope":3796,"src":"5861:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"5861:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5860:19:15"},"scope":3988,"src":"5699:181:15","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":3797,"nodeType":"StructuredDocumentation","src":"5886:545:15","text":" @notice Sets the request to refund the reward if the proposal is disputed. This can help to \"hedge\" the caller\n in the event of a dispute-caused delay. Note: in the event of a dispute, the winner still receives the other's\n bond, so there is still profit to be made even if the reward is refunded.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested."},"functionSelector":"91f58dcb","id":3806,"implemented":false,"kind":"function","modifiers":[],"name":"setRefundOnDispute","nameLocation":"6445:18:15","nodeType":"FunctionDefinition","parameters":{"id":3804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3799,"mutability":"mutable","name":"identifier","nameLocation":"6481:10:15","nodeType":"VariableDeclaration","scope":3806,"src":"6473:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3801,"mutability":"mutable","name":"timestamp","nameLocation":"6509:9:15","nodeType":"VariableDeclaration","scope":3806,"src":"6501:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3800,"name":"uint256","nodeType":"ElementaryTypeName","src":"6501:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3803,"mutability":"mutable","name":"ancillaryData","nameLocation":"6541:13:15","nodeType":"VariableDeclaration","scope":3806,"src":"6528:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3802,"name":"bytes","nodeType":"ElementaryTypeName","src":"6528:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6463:97:15"},"returnParameters":{"id":3805,"nodeType":"ParameterList","parameters":[],"src":"6577:0:15"},"scope":3988,"src":"6436:142:15","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":3807,"nodeType":"StructuredDocumentation","src":"6584:426:15","text":" @notice Sets a custom liveness value for the request. Liveness is the amount of time a proposal must wait before\n being auto-resolved.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param customLiveness new custom liveness."},"functionSelector":"473c45fe","id":3818,"implemented":false,"kind":"function","modifiers":[],"name":"setCustomLiveness","nameLocation":"7024:17:15","nodeType":"FunctionDefinition","parameters":{"id":3816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"identifier","nameLocation":"7059:10:15","nodeType":"VariableDeclaration","scope":3818,"src":"7051:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7051:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3811,"mutability":"mutable","name":"timestamp","nameLocation":"7087:9:15","nodeType":"VariableDeclaration","scope":3818,"src":"7079:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3810,"name":"uint256","nodeType":"ElementaryTypeName","src":"7079:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3813,"mutability":"mutable","name":"ancillaryData","nameLocation":"7119:13:15","nodeType":"VariableDeclaration","scope":3818,"src":"7106:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3812,"name":"bytes","nodeType":"ElementaryTypeName","src":"7106:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3815,"mutability":"mutable","name":"customLiveness","nameLocation":"7150:14:15","nodeType":"VariableDeclaration","scope":3818,"src":"7142:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3814,"name":"uint256","nodeType":"ElementaryTypeName","src":"7142:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7041:129:15"},"returnParameters":{"id":3817,"nodeType":"ParameterList","parameters":[],"src":"7187:0:15"},"scope":3988,"src":"7015:173:15","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":3819,"nodeType":"StructuredDocumentation","src":"7194:862:15","text":" @notice Sets the request to be an \"event-based\" request.\n @dev Calling this method has a few impacts on the request:\n 1. The timestamp at which the request is evaluated is the time of the proposal, not the timestamp associated\n    with the request.\n 2. The proposer cannot propose the \"too early\" value (TOO_EARLY_RESPONSE). This is to ensure that a proposer who\n    prematurely proposes a response loses their bond.\n 3. RefundoOnDispute is automatically set, meaning disputes trigger the reward to be automatically refunded to\n    the requesting contract.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested."},"functionSelector":"120698af","id":3828,"implemented":false,"kind":"function","modifiers":[],"name":"setEventBased","nameLocation":"8070:13:15","nodeType":"FunctionDefinition","parameters":{"id":3826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"identifier","nameLocation":"8101:10:15","nodeType":"VariableDeclaration","scope":3828,"src":"8093:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8093:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3823,"mutability":"mutable","name":"timestamp","nameLocation":"8129:9:15","nodeType":"VariableDeclaration","scope":3828,"src":"8121:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3822,"name":"uint256","nodeType":"ElementaryTypeName","src":"8121:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3825,"mutability":"mutable","name":"ancillaryData","nameLocation":"8161:13:15","nodeType":"VariableDeclaration","scope":3828,"src":"8148:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3824,"name":"bytes","nodeType":"ElementaryTypeName","src":"8148:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8083:97:15"},"returnParameters":{"id":3827,"nodeType":"ParameterList","parameters":[],"src":"8197:0:15"},"scope":3988,"src":"8061:137:15","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":3829,"nodeType":"StructuredDocumentation","src":"8204:555:15","text":" @notice Sets which callbacks should be enabled for the request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param callbackOnPriceProposed whether to enable the callback onPriceProposed.\n @param callbackOnPriceDisputed whether to enable the callback onPriceDisputed.\n @param callbackOnPriceSettled whether to enable the callback onPriceSettled."},"functionSelector":"f327b075","id":3844,"implemented":false,"kind":"function","modifiers":[],"name":"setCallbacks","nameLocation":"8773:12:15","nodeType":"FunctionDefinition","parameters":{"id":3842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3831,"mutability":"mutable","name":"identifier","nameLocation":"8803:10:15","nodeType":"VariableDeclaration","scope":3844,"src":"8795:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8795:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3833,"mutability":"mutable","name":"timestamp","nameLocation":"8831:9:15","nodeType":"VariableDeclaration","scope":3844,"src":"8823:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3832,"name":"uint256","nodeType":"ElementaryTypeName","src":"8823:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3835,"mutability":"mutable","name":"ancillaryData","nameLocation":"8863:13:15","nodeType":"VariableDeclaration","scope":3844,"src":"8850:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3834,"name":"bytes","nodeType":"ElementaryTypeName","src":"8850:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3837,"mutability":"mutable","name":"callbackOnPriceProposed","nameLocation":"8891:23:15","nodeType":"VariableDeclaration","scope":3844,"src":"8886:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3836,"name":"bool","nodeType":"ElementaryTypeName","src":"8886:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"callbackOnPriceDisputed","nameLocation":"8929:23:15","nodeType":"VariableDeclaration","scope":3844,"src":"8924:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3838,"name":"bool","nodeType":"ElementaryTypeName","src":"8924:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3841,"mutability":"mutable","name":"callbackOnPriceSettled","nameLocation":"8967:22:15","nodeType":"VariableDeclaration","scope":3844,"src":"8962:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3840,"name":"bool","nodeType":"ElementaryTypeName","src":"8962:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8785:210:15"},"returnParameters":{"id":3843,"nodeType":"ParameterList","parameters":[],"src":"9012:0:15"},"scope":3988,"src":"8764:249:15","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":3845,"nodeType":"StructuredDocumentation","src":"9019:764:15","text":" @notice Proposes a price value on another address' behalf. Note: this address will receive any rewards that come\n from this proposal. However, any bonds are pulled from the caller.\n @param proposer address to set as the proposer.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param proposedPrice price being proposed.\n @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n the proposer once settled if the proposal is correct."},"functionSelector":"7c82288f","id":3862,"implemented":false,"kind":"function","modifiers":[],"name":"proposePriceFor","nameLocation":"9797:15:15","nodeType":"FunctionDefinition","parameters":{"id":3858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3847,"mutability":"mutable","name":"proposer","nameLocation":"9830:8:15","nodeType":"VariableDeclaration","scope":3862,"src":"9822:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3846,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3849,"mutability":"mutable","name":"requester","nameLocation":"9856:9:15","nodeType":"VariableDeclaration","scope":3862,"src":"9848:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3848,"name":"address","nodeType":"ElementaryTypeName","src":"9848:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3851,"mutability":"mutable","name":"identifier","nameLocation":"9883:10:15","nodeType":"VariableDeclaration","scope":3862,"src":"9875:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9875:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3853,"mutability":"mutable","name":"timestamp","nameLocation":"9911:9:15","nodeType":"VariableDeclaration","scope":3862,"src":"9903:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3852,"name":"uint256","nodeType":"ElementaryTypeName","src":"9903:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3855,"mutability":"mutable","name":"ancillaryData","nameLocation":"9943:13:15","nodeType":"VariableDeclaration","scope":3862,"src":"9930:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3854,"name":"bytes","nodeType":"ElementaryTypeName","src":"9930:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3857,"mutability":"mutable","name":"proposedPrice","nameLocation":"9973:13:15","nodeType":"VariableDeclaration","scope":3862,"src":"9966:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3856,"name":"int256","nodeType":"ElementaryTypeName","src":"9966:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9812:180:15"},"returnParameters":{"id":3861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3860,"mutability":"mutable","name":"totalBond","nameLocation":"10025:9:15","nodeType":"VariableDeclaration","scope":3862,"src":"10017:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3859,"name":"uint256","nodeType":"ElementaryTypeName","src":"10017:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10016:19:15"},"scope":3988,"src":"9788:248:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":3863,"nodeType":"StructuredDocumentation","src":"10042:586:15","text":" @notice Proposes a price value for an existing price request.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param proposedPrice price being proposed.\n @return totalBond the amount that's pulled from the proposer's wallet as a bond. The bond will be returned to\n the proposer once settled if the proposal is correct."},"functionSelector":"b8b4f908","id":3878,"implemented":false,"kind":"function","modifiers":[],"name":"proposePrice","nameLocation":"10642:12:15","nodeType":"FunctionDefinition","parameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3865,"mutability":"mutable","name":"requester","nameLocation":"10672:9:15","nodeType":"VariableDeclaration","scope":3878,"src":"10664:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3864,"name":"address","nodeType":"ElementaryTypeName","src":"10664:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3867,"mutability":"mutable","name":"identifier","nameLocation":"10699:10:15","nodeType":"VariableDeclaration","scope":3878,"src":"10691:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10691:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3869,"mutability":"mutable","name":"timestamp","nameLocation":"10727:9:15","nodeType":"VariableDeclaration","scope":3878,"src":"10719:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3868,"name":"uint256","nodeType":"ElementaryTypeName","src":"10719:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3871,"mutability":"mutable","name":"ancillaryData","nameLocation":"10759:13:15","nodeType":"VariableDeclaration","scope":3878,"src":"10746:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3870,"name":"bytes","nodeType":"ElementaryTypeName","src":"10746:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3873,"mutability":"mutable","name":"proposedPrice","nameLocation":"10789:13:15","nodeType":"VariableDeclaration","scope":3878,"src":"10782:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3872,"name":"int256","nodeType":"ElementaryTypeName","src":"10782:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"10654:154:15"},"returnParameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"totalBond","nameLocation":"10843:9:15","nodeType":"VariableDeclaration","scope":3878,"src":"10835:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"10835:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10834:19:15"},"scope":3988,"src":"10633:221:15","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":3879,"nodeType":"StructuredDocumentation","src":"10860:766:15","text":" @notice Disputes a price request with an active proposal on another address' behalf. Note: this address will\n receive any rewards that come from this dispute. However, any bonds are pulled from the caller.\n @param disputer address to set as the disputer.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n the disputer once settled if the dispute was value (the proposal was incorrect)."},"functionSelector":"76c7823f","id":3894,"implemented":false,"kind":"function","modifiers":[],"name":"disputePriceFor","nameLocation":"11640:15:15","nodeType":"FunctionDefinition","parameters":{"id":3890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3881,"mutability":"mutable","name":"disputer","nameLocation":"11673:8:15","nodeType":"VariableDeclaration","scope":3894,"src":"11665:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3880,"name":"address","nodeType":"ElementaryTypeName","src":"11665:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3883,"mutability":"mutable","name":"requester","nameLocation":"11699:9:15","nodeType":"VariableDeclaration","scope":3894,"src":"11691:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3882,"name":"address","nodeType":"ElementaryTypeName","src":"11691:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3885,"mutability":"mutable","name":"identifier","nameLocation":"11726:10:15","nodeType":"VariableDeclaration","scope":3894,"src":"11718:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11718:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3887,"mutability":"mutable","name":"timestamp","nameLocation":"11754:9:15","nodeType":"VariableDeclaration","scope":3894,"src":"11746:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3886,"name":"uint256","nodeType":"ElementaryTypeName","src":"11746:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3889,"mutability":"mutable","name":"ancillaryData","nameLocation":"11786:13:15","nodeType":"VariableDeclaration","scope":3894,"src":"11773:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3888,"name":"bytes","nodeType":"ElementaryTypeName","src":"11773:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11655:150:15"},"returnParameters":{"id":3893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3892,"mutability":"mutable","name":"totalBond","nameLocation":"11838:9:15","nodeType":"VariableDeclaration","scope":3894,"src":"11830:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3891,"name":"uint256","nodeType":"ElementaryTypeName","src":"11830:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11829:19:15"},"scope":3988,"src":"11631:218:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":3895,"nodeType":"StructuredDocumentation","src":"11855:587:15","text":" @notice Disputes a price value for an existing price request with an active proposal.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return totalBond the amount that's pulled from the disputer's wallet as a bond. The bond will be returned to\n the disputer once settled if the dispute was valid (the proposal was incorrect)."},"functionSelector":"fba7f1e3","id":3908,"implemented":false,"kind":"function","modifiers":[],"name":"disputePrice","nameLocation":"12456:12:15","nodeType":"FunctionDefinition","parameters":{"id":3904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"requester","nameLocation":"12486:9:15","nodeType":"VariableDeclaration","scope":3908,"src":"12478:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3896,"name":"address","nodeType":"ElementaryTypeName","src":"12478:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3899,"mutability":"mutable","name":"identifier","nameLocation":"12513:10:15","nodeType":"VariableDeclaration","scope":3908,"src":"12505:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12505:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3901,"mutability":"mutable","name":"timestamp","nameLocation":"12541:9:15","nodeType":"VariableDeclaration","scope":3908,"src":"12533:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3900,"name":"uint256","nodeType":"ElementaryTypeName","src":"12533:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3903,"mutability":"mutable","name":"ancillaryData","nameLocation":"12573:13:15","nodeType":"VariableDeclaration","scope":3908,"src":"12560:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3902,"name":"bytes","nodeType":"ElementaryTypeName","src":"12560:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12468:124:15"},"returnParameters":{"id":3907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3906,"mutability":"mutable","name":"totalBond","nameLocation":"12627:9:15","nodeType":"VariableDeclaration","scope":3908,"src":"12619:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3905,"name":"uint256","nodeType":"ElementaryTypeName","src":"12619:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12618:19:15"},"scope":3988,"src":"12447:191:15","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":3909,"nodeType":"StructuredDocumentation","src":"12644:515:15","text":" @notice Retrieves a price that was previously requested by a caller. Reverts if the request is not settled\n or settleable. Note: this method is not view so that this call may actually settle the price request if it\n hasn't been settled.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return resolved price."},"functionSelector":"53b59239","id":3920,"implemented":false,"kind":"function","modifiers":[],"name":"settleAndGetPrice","nameLocation":"13173:17:15","nodeType":"FunctionDefinition","parameters":{"id":3916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"identifier","nameLocation":"13208:10:15","nodeType":"VariableDeclaration","scope":3920,"src":"13200:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3910,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13200:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3913,"mutability":"mutable","name":"timestamp","nameLocation":"13236:9:15","nodeType":"VariableDeclaration","scope":3920,"src":"13228:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3912,"name":"uint256","nodeType":"ElementaryTypeName","src":"13228:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3915,"mutability":"mutable","name":"ancillaryData","nameLocation":"13268:13:15","nodeType":"VariableDeclaration","scope":3920,"src":"13255:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3914,"name":"bytes","nodeType":"ElementaryTypeName","src":"13255:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13190:97:15"},"returnParameters":{"id":3919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3920,"src":"13314:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3917,"name":"int256","nodeType":"ElementaryTypeName","src":"13314:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13313:8:15"},"scope":3988,"src":"13164:158:15","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":3921,"nodeType":"StructuredDocumentation","src":"13328:565:15","text":" @notice Attempts to settle an outstanding price request. Will revert if it isn't settleable.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return payout the amount that the \"winner\" (proposer or disputer) receives on settlement. This amount includes\n the returned bonds as well as additional rewards."},"functionSelector":"5e9a79a9","id":3934,"implemented":false,"kind":"function","modifiers":[],"name":"settle","nameLocation":"13907:6:15","nodeType":"FunctionDefinition","parameters":{"id":3930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3923,"mutability":"mutable","name":"requester","nameLocation":"13931:9:15","nodeType":"VariableDeclaration","scope":3934,"src":"13923:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3922,"name":"address","nodeType":"ElementaryTypeName","src":"13923:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3925,"mutability":"mutable","name":"identifier","nameLocation":"13958:10:15","nodeType":"VariableDeclaration","scope":3934,"src":"13950:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13950:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3927,"mutability":"mutable","name":"timestamp","nameLocation":"13986:9:15","nodeType":"VariableDeclaration","scope":3934,"src":"13978:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3926,"name":"uint256","nodeType":"ElementaryTypeName","src":"13978:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3929,"mutability":"mutable","name":"ancillaryData","nameLocation":"14018:13:15","nodeType":"VariableDeclaration","scope":3934,"src":"14005:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3928,"name":"bytes","nodeType":"ElementaryTypeName","src":"14005:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13913:124:15"},"returnParameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3932,"mutability":"mutable","name":"payout","nameLocation":"14072:6:15","nodeType":"VariableDeclaration","scope":3934,"src":"14064:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3931,"name":"uint256","nodeType":"ElementaryTypeName","src":"14064:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14063:16:15"},"scope":3988,"src":"13898:182:15","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":3935,"nodeType":"StructuredDocumentation","src":"14086:429:15","text":" @notice Gets the current data structure containing all information about a price request.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return the Request data structure."},"functionSelector":"a9904f9b","id":3949,"implemented":false,"kind":"function","modifiers":[],"name":"getRequest","nameLocation":"14529:10:15","nodeType":"FunctionDefinition","parameters":{"id":3944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3937,"mutability":"mutable","name":"requester","nameLocation":"14557:9:15","nodeType":"VariableDeclaration","scope":3949,"src":"14549:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3936,"name":"address","nodeType":"ElementaryTypeName","src":"14549:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3939,"mutability":"mutable","name":"identifier","nameLocation":"14584:10:15","nodeType":"VariableDeclaration","scope":3949,"src":"14576:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14576:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3941,"mutability":"mutable","name":"timestamp","nameLocation":"14612:9:15","nodeType":"VariableDeclaration","scope":3949,"src":"14604:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3940,"name":"uint256","nodeType":"ElementaryTypeName","src":"14604:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3943,"mutability":"mutable","name":"ancillaryData","nameLocation":"14644:13:15","nodeType":"VariableDeclaration","scope":3949,"src":"14631:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3942,"name":"bytes","nodeType":"ElementaryTypeName","src":"14631:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14539:124:15"},"returnParameters":{"id":3948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3949,"src":"14693:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3741_memory_ptr","typeString":"struct OptimisticOracleV2Interface.Request"},"typeName":{"id":3946,"nodeType":"UserDefinedTypeName","pathNode":{"id":3945,"name":"Request","nameLocations":["14693:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":3741,"src":"14693:7:15"},"referencedDeclaration":3741,"src":"14693:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3741_storage_ptr","typeString":"struct OptimisticOracleV2Interface.Request"}},"visibility":"internal"}],"src":"14692:16:15"},"scope":3988,"src":"14520:189:15","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":3950,"nodeType":"StructuredDocumentation","src":"14715:379:15","text":" @notice Returns the state of a price request.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return the State enum value."},"functionSelector":"ba4b930c","id":3964,"implemented":false,"kind":"function","modifiers":[],"name":"getState","nameLocation":"15108:8:15","nodeType":"FunctionDefinition","parameters":{"id":3959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3952,"mutability":"mutable","name":"requester","nameLocation":"15134:9:15","nodeType":"VariableDeclaration","scope":3964,"src":"15126:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3951,"name":"address","nodeType":"ElementaryTypeName","src":"15126:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3954,"mutability":"mutable","name":"identifier","nameLocation":"15161:10:15","nodeType":"VariableDeclaration","scope":3964,"src":"15153:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15153:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3956,"mutability":"mutable","name":"timestamp","nameLocation":"15189:9:15","nodeType":"VariableDeclaration","scope":3964,"src":"15181:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3955,"name":"uint256","nodeType":"ElementaryTypeName","src":"15181:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3958,"mutability":"mutable","name":"ancillaryData","nameLocation":"15221:13:15","nodeType":"VariableDeclaration","scope":3964,"src":"15208:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3957,"name":"bytes","nodeType":"ElementaryTypeName","src":"15208:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15116:124:15"},"returnParameters":{"id":3963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3964,"src":"15270:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_State_$3703","typeString":"enum OptimisticOracleV2Interface.State"},"typeName":{"id":3961,"nodeType":"UserDefinedTypeName","pathNode":{"id":3960,"name":"State","nameLocations":["15270:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":3703,"src":"15270:5:15"},"referencedDeclaration":3703,"src":"15270:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_State_$3703","typeString":"enum OptimisticOracleV2Interface.State"}},"visibility":"internal"}],"src":"15269:7:15"},"scope":3988,"src":"15099:178:15","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":3965,"nodeType":"StructuredDocumentation","src":"15283:471:15","text":" @notice Checks if a given request has resolved or been settled (i.e the optimistic oracle has a price).\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return true if price has resolved or settled, false otherwise."},"functionSelector":"bc58ccaa","id":3978,"implemented":false,"kind":"function","modifiers":[],"name":"hasPrice","nameLocation":"15768:8:15","nodeType":"FunctionDefinition","parameters":{"id":3974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3967,"mutability":"mutable","name":"requester","nameLocation":"15794:9:15","nodeType":"VariableDeclaration","scope":3978,"src":"15786:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3966,"name":"address","nodeType":"ElementaryTypeName","src":"15786:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3969,"mutability":"mutable","name":"identifier","nameLocation":"15821:10:15","nodeType":"VariableDeclaration","scope":3978,"src":"15813:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15813:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3971,"mutability":"mutable","name":"timestamp","nameLocation":"15849:9:15","nodeType":"VariableDeclaration","scope":3978,"src":"15841:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3970,"name":"uint256","nodeType":"ElementaryTypeName","src":"15841:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3973,"mutability":"mutable","name":"ancillaryData","nameLocation":"15881:13:15","nodeType":"VariableDeclaration","scope":3978,"src":"15868:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3972,"name":"bytes","nodeType":"ElementaryTypeName","src":"15868:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15776:124:15"},"returnParameters":{"id":3977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3978,"src":"15930:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3975,"name":"bool","nodeType":"ElementaryTypeName","src":"15930:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15929:6:15"},"scope":3988,"src":"15759:177:15","stateMutability":"view","virtual":true,"visibility":"public"},{"functionSelector":"af5d2f39","id":3987,"implemented":false,"kind":"function","modifiers":[],"name":"stampAncillaryData","nameLocation":"15951:18:15","nodeType":"FunctionDefinition","parameters":{"id":3983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"ancillaryData","nameLocation":"15983:13:15","nodeType":"VariableDeclaration","scope":3987,"src":"15970:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3979,"name":"bytes","nodeType":"ElementaryTypeName","src":"15970:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3982,"mutability":"mutable","name":"requester","nameLocation":"16006:9:15","nodeType":"VariableDeclaration","scope":3987,"src":"15998:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3981,"name":"address","nodeType":"ElementaryTypeName","src":"15998:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15969:47:15"},"returnParameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3987,"src":"16078:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3984,"name":"bytes","nodeType":"ElementaryTypeName","src":"16078:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16077:14:15"},"scope":3988,"src":"15942:150:15","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3989,"src":"333:15761:15","usedErrors":[]}],"src":"42:16053:15"},"id":15},"@uma/core/contracts/oracle/interfaces/StoreInterface.sol":{"ast":{"absolutePath":"@uma/core/contracts/oracle/interfaces/StoreInterface.sol","exportedSymbols":{"FixedPoint":[3525],"IERC20":[439],"SafeMath":[1420],"SignedSafeMath":[1484],"StoreInterface":[4033]},"id":4034,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3990,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3991,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4034,"sourceUnit":440,"src":"67:56:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/common/implementation/FixedPoint.sol","file":"../../common/implementation/FixedPoint.sol","id":3992,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4034,"sourceUnit":3526,"src":"124:52:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"StoreInterface","contractDependencies":[],"contractKind":"interface","documentation":{"id":3993,"nodeType":"StructuredDocumentation","src":"178:107:16","text":" @title Interface that allows financial contracts to pay oracle fees for their use of the system."},"fullyImplemented":false,"id":4033,"linearizedBaseContracts":[4033],"name":"StoreInterface","nameLocation":"296:14:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3994,"nodeType":"StructuredDocumentation","src":"317:130:16","text":" @notice Pays Oracle fees in ETH to the store.\n @dev To be used by contracts whose margin currency is ETH."},"functionSelector":"cd3a9b24","id":3997,"implemented":false,"kind":"function","modifiers":[],"name":"payOracleFees","nameLocation":"461:13:16","nodeType":"FunctionDefinition","parameters":{"id":3995,"nodeType":"ParameterList","parameters":[],"src":"474:2:16"},"returnParameters":{"id":3996,"nodeType":"ParameterList","parameters":[],"src":"493:0:16"},"scope":4033,"src":"452:42:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3998,"nodeType":"StructuredDocumentation","src":"500:351:16","text":" @notice Pays oracle fees in the margin currency, erc20Address, to the store.\n @dev To be used if the margin currency is an ERC20 token rather than ETH.\n @param erc20Address address of the ERC20 token used to pay the fee.\n @param amount number of tokens to transfer. An approval for at least this amount must exist."},"functionSelector":"8659d232","id":4006,"implemented":false,"kind":"function","modifiers":[],"name":"payOracleFeesErc20","nameLocation":"865:18:16","nodeType":"FunctionDefinition","parameters":{"id":4004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4000,"mutability":"mutable","name":"erc20Address","nameLocation":"892:12:16","nodeType":"VariableDeclaration","scope":4006,"src":"884:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3999,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4003,"mutability":"mutable","name":"amount","nameLocation":"935:6:16","nodeType":"VariableDeclaration","scope":4006,"src":"906:35:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_calldata_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":4002,"nodeType":"UserDefinedTypeName","pathNode":{"id":4001,"name":"FixedPoint.Unsigned","nameLocations":["906:10:16","917:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"906:19:16"},"referencedDeclaration":1911,"src":"906:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"883:59:16"},"returnParameters":{"id":4005,"nodeType":"ParameterList","parameters":[],"src":"951:0:16"},"scope":4033,"src":"856:96:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4007,"nodeType":"StructuredDocumentation","src":"958:597:16","text":" @notice Computes the regular oracle fees that a contract should pay for a period.\n @param startTime defines the beginning time from which the fee is paid.\n @param endTime end time until which the fee is paid.\n @param pfc \"profit from corruption\", or the maximum amount of margin currency that a\n token sponsor could extract from the contract through corrupting the price feed in their favor.\n @return regularFee amount owed for the duration from start to end time for the given pfc.\n @return latePenalty for paying the fee after the deadline."},"functionSelector":"74201feb","id":4023,"implemented":false,"kind":"function","modifiers":[],"name":"computeRegularFee","nameLocation":"1569:17:16","nodeType":"FunctionDefinition","parameters":{"id":4015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4009,"mutability":"mutable","name":"startTime","nameLocation":"1604:9:16","nodeType":"VariableDeclaration","scope":4023,"src":"1596:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4008,"name":"uint256","nodeType":"ElementaryTypeName","src":"1596:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4011,"mutability":"mutable","name":"endTime","nameLocation":"1631:7:16","nodeType":"VariableDeclaration","scope":4023,"src":"1623:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4010,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4014,"mutability":"mutable","name":"pfc","nameLocation":"1677:3:16","nodeType":"VariableDeclaration","scope":4023,"src":"1648:32:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_calldata_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":4013,"nodeType":"UserDefinedTypeName","pathNode":{"id":4012,"name":"FixedPoint.Unsigned","nameLocations":["1648:10:16","1659:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"1648:19:16"},"referencedDeclaration":1911,"src":"1648:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"1586:100:16"},"returnParameters":{"id":4022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4018,"mutability":"mutable","name":"regularFee","nameLocation":"1737:10:16","nodeType":"VariableDeclaration","scope":4023,"src":"1710:37:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":4017,"nodeType":"UserDefinedTypeName","pathNode":{"id":4016,"name":"FixedPoint.Unsigned","nameLocations":["1710:10:16","1721:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"1710:19:16"},"referencedDeclaration":1911,"src":"1710:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":4021,"mutability":"mutable","name":"latePenalty","nameLocation":"1776:11:16","nodeType":"VariableDeclaration","scope":4023,"src":"1749:38:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":4020,"nodeType":"UserDefinedTypeName","pathNode":{"id":4019,"name":"FixedPoint.Unsigned","nameLocations":["1749:10:16","1760:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"1749:19:16"},"referencedDeclaration":1911,"src":"1749:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"1709:79:16"},"scope":4033,"src":"1560:229:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4024,"nodeType":"StructuredDocumentation","src":"1795:191:16","text":" @notice Computes the final oracle fees that a contract should pay at settlement.\n @param currency token used to pay the final fee.\n @return finalFee amount due."},"functionSelector":"5b97aadd","id":4032,"implemented":false,"kind":"function","modifiers":[],"name":"computeFinalFee","nameLocation":"2000:15:16","nodeType":"FunctionDefinition","parameters":{"id":4027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4026,"mutability":"mutable","name":"currency","nameLocation":"2024:8:16","nodeType":"VariableDeclaration","scope":4032,"src":"2016:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4025,"name":"address","nodeType":"ElementaryTypeName","src":"2016:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2015:18:16"},"returnParameters":{"id":4031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4032,"src":"2057:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":4029,"nodeType":"UserDefinedTypeName","pathNode":{"id":4028,"name":"FixedPoint.Unsigned","nameLocations":["2057:10:16","2068:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"2057:19:16"},"referencedDeclaration":1911,"src":"2057:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"2056:28:16"},"scope":4033,"src":"1991:94:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4034,"src":"286:1801:16","usedErrors":[]}],"src":"42:2046:16"},"id":16},"contracts/Decentralist.sol":{"ast":{"absolutePath":"contracts/Decentralist.sol","exportedSymbols":{"Address":[1086],"AncillaryData":[1892],"Context":[1108],"Decentralist":[4926],"FinderInterface":[3622],"FixedPoint":[3525],"IERC20":[439],"IERC20Permit":[475],"Initializable":[361],"OptimisticOracleConstraints":[3602],"OptimisticOracleV2Interface":[3988],"OracleInterfaces":[3597],"Ownable":[112],"SafeERC20":[756],"SafeMath":[1420],"SignedSafeMath":[1484],"StoreInterface":[4033]},"id":4927,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4035,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"33:23:17"},{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts/proxy/utils/Initializable.sol","id":4036,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4927,"sourceUnit":362,"src":"60:63:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":4037,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4927,"sourceUnit":757,"src":"125:65:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4038,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4927,"sourceUnit":440,"src":"192:56:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4039,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4927,"sourceUnit":113,"src":"250:52:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/oracle/implementation/Constants.sol","file":"@uma/core/contracts/oracle/implementation/Constants.sol","id":4040,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4927,"sourceUnit":3603,"src":"306:65:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/oracle/interfaces/FinderInterface.sol","file":"@uma/core/contracts/oracle/interfaces/FinderInterface.sol","id":4041,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4927,"sourceUnit":3623,"src":"373:67:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/common/implementation/AncillaryData.sol","file":"@uma/core/contracts/common/implementation/AncillaryData.sol","id":4042,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4927,"sourceUnit":1893,"src":"442:69:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/oracle/interfaces/StoreInterface.sol","file":"@uma/core/contracts/oracle/interfaces/StoreInterface.sol","id":4043,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4927,"sourceUnit":4034,"src":"513:66:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/oracle/interfaces/OptimisticOracleV2Interface.sol","file":"@uma/core/contracts/oracle/interfaces/OptimisticOracleV2Interface.sol","id":4044,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4927,"sourceUnit":3989,"src":"581:79:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4045,"name":"Initializable","nameLocations":["689:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":361,"src":"689:13:17"},"id":4046,"nodeType":"InheritanceSpecifier","src":"689:13:17"},{"baseName":{"id":4047,"name":"Ownable","nameLocations":["704:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"704:7:17"},"id":4048,"nodeType":"InheritanceSpecifier","src":"704:7:17"}],"canonicalName":"Decentralist","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4926,"linearizedBaseContracts":[4926,112,1108,361],"name":"Decentralist","nameLocation":"673:12:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4052,"libraryName":{"id":4049,"name":"SafeERC20","nameLocations":["725:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":756,"src":"725:9:17"},"nodeType":"UsingForDirective","src":"719:27:17","typeName":{"id":4051,"nodeType":"UserDefinedTypeName","pathNode":{"id":4050,"name":"IERC20","nameLocations":["739:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":439,"src":"739:6:17"},"referencedDeclaration":439,"src":"739:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}}},{"anonymous":false,"eventSelector":"8479c2bee15eda418c90b95fa659dac53de3029ccab55c13c32641a566b4fd92","id":4062,"name":"RevisionProposed","nameLocation":"760:16:17","nodeType":"EventDefinition","parameters":{"id":4061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"indexed":true,"mutability":"mutable","name":"revisionId","nameLocation":"803:10:17","nodeType":"VariableDeclaration","scope":4062,"src":"787:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"787:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4057,"indexed":false,"mutability":"mutable","name":"revisionType","nameLocation":"837:12:17","nodeType":"VariableDeclaration","scope":4062,"src":"824:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"},"typeName":{"id":4056,"nodeType":"UserDefinedTypeName","pathNode":{"id":4055,"name":"RevisionType","nameLocations":["824:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":4142,"src":"824:12:17"},"referencedDeclaration":4142,"src":"824:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}},"visibility":"internal"},{"constant":false,"id":4060,"indexed":false,"mutability":"mutable","name":"proposedAddresses","nameLocation":"870:17:17","nodeType":"VariableDeclaration","scope":4062,"src":"860:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4058,"name":"address","nodeType":"ElementaryTypeName","src":"860:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4059,"nodeType":"ArrayTypeName","src":"860:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"776:118:17"},"src":"754:141:17"},{"anonymous":false,"eventSelector":"e7dfc76d7cf4f1781646dbd1e7e5057b56a0145663bf2bc18d35b27cb3a65b3f","id":4069,"name":"RevisionApproved","nameLocation":"907:16:17","nodeType":"EventDefinition","parameters":{"id":4068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4064,"indexed":true,"mutability":"mutable","name":"revisionId","nameLocation":"950:10:17","nodeType":"VariableDeclaration","scope":4069,"src":"934:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4063,"name":"uint256","nodeType":"ElementaryTypeName","src":"934:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4067,"indexed":false,"mutability":"mutable","name":"revisionType","nameLocation":"984:12:17","nodeType":"VariableDeclaration","scope":4069,"src":"971:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"},"typeName":{"id":4066,"nodeType":"UserDefinedTypeName","pathNode":{"id":4065,"name":"RevisionType","nameLocations":["971:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":4142,"src":"971:12:17"},"referencedDeclaration":4142,"src":"971:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}},"visibility":"internal"}],"src":"923:80:17"},"src":"901:103:17"},{"anonymous":false,"eventSelector":"02050decabc268ccd3e064662a50780070b8d1ab87047ec88bc8e2c29fe29cda","id":4076,"name":"RevisionRejected","nameLocation":"1016:16:17","nodeType":"EventDefinition","parameters":{"id":4075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4071,"indexed":true,"mutability":"mutable","name":"revisionId","nameLocation":"1059:10:17","nodeType":"VariableDeclaration","scope":4076,"src":"1043:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4070,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4074,"indexed":false,"mutability":"mutable","name":"revisionType","nameLocation":"1093:12:17","nodeType":"VariableDeclaration","scope":4076,"src":"1080:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"},"typeName":{"id":4073,"nodeType":"UserDefinedTypeName","pathNode":{"id":4072,"name":"RevisionType","nameLocations":["1080:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":4142,"src":"1080:12:17"},"referencedDeclaration":4142,"src":"1080:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}},"visibility":"internal"}],"src":"1032:80:17"},"src":"1010:103:17"},{"anonymous":false,"eventSelector":"80f45b4d1139e5fb60a132f4ca38836c7c42309e0a67a42d1a58450daf29253e","id":4086,"name":"RevisionExecuted","nameLocation":"1125:16:17","nodeType":"EventDefinition","parameters":{"id":4085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4078,"indexed":true,"mutability":"mutable","name":"revisionId","nameLocation":"1168:10:17","nodeType":"VariableDeclaration","scope":4086,"src":"1152:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4077,"name":"uint256","nodeType":"ElementaryTypeName","src":"1152:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4081,"indexed":false,"mutability":"mutable","name":"revisionType","nameLocation":"1202:12:17","nodeType":"VariableDeclaration","scope":4086,"src":"1189:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"},"typeName":{"id":4080,"nodeType":"UserDefinedTypeName","pathNode":{"id":4079,"name":"RevisionType","nameLocations":["1189:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":4142,"src":"1189:12:17"},"referencedDeclaration":4142,"src":"1189:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}},"visibility":"internal"},{"constant":false,"id":4084,"indexed":false,"mutability":"mutable","name":"revisedAddresses","nameLocation":"1235:16:17","nodeType":"VariableDeclaration","scope":4086,"src":"1225:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4082,"name":"address","nodeType":"ElementaryTypeName","src":"1225:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4083,"nodeType":"ArrayTypeName","src":"1225:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1141:117:17"},"src":"1119:140:17"},{"anonymous":false,"eventSelector":"067def216f0ef603ed8175482f6240978b15c9dc7efd8e1ac4bd3a743787a5b6","id":4092,"name":"RewardsSet","nameLocation":"1273:10:17","nodeType":"EventDefinition","parameters":{"id":4091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4088,"indexed":false,"mutability":"mutable","name":"additionReward","nameLocation":"1292:14:17","nodeType":"VariableDeclaration","scope":4092,"src":"1284:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4087,"name":"uint256","nodeType":"ElementaryTypeName","src":"1284:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4090,"indexed":false,"mutability":"mutable","name":"removalReward","nameLocation":"1316:13:17","nodeType":"VariableDeclaration","scope":4092,"src":"1308:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4089,"name":"uint256","nodeType":"ElementaryTypeName","src":"1308:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1283:47:17"},"src":"1267:64:17"},{"anonymous":false,"eventSelector":"e5e4fe1ed302905b2067dd5af3ef8c34bc829afc97a52f95dd96d97d1ee4351b","id":4096,"name":"LivenessSet","nameLocation":"1343:11:17","nodeType":"EventDefinition","parameters":{"id":4095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4094,"indexed":false,"mutability":"mutable","name":"liveness","nameLocation":"1362:8:17","nodeType":"VariableDeclaration","scope":4096,"src":"1355:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4093,"name":"uint64","nodeType":"ElementaryTypeName","src":"1355:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1354:17:17"},"src":"1337:35:17"},{"anonymous":false,"eventSelector":"1b44689fb73c0c9cdf591d534287488fc7959fd3647346821063a3e567ec9a99","id":4100,"name":"BondSet","nameLocation":"1384:7:17","nodeType":"EventDefinition","parameters":{"id":4099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4098,"indexed":false,"mutability":"mutable","name":"bondAmount","nameLocation":"1400:10:17","nodeType":"VariableDeclaration","scope":4100,"src":"1392:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4097,"name":"uint256","nodeType":"ElementaryTypeName","src":"1392:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1391:20:17"},"src":"1378:34:17"},{"constant":false,"functionSelector":"7dc0d1d0","id":4103,"mutability":"mutable","name":"oracle","nameLocation":"1455:6:17","nodeType":"VariableDeclaration","scope":4926,"src":"1420:41:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_OptimisticOracleV2Interface_$3988","typeString":"contract OptimisticOracleV2Interface"},"typeName":{"id":4102,"nodeType":"UserDefinedTypeName","pathNode":{"id":4101,"name":"OptimisticOracleV2Interface","nameLocations":["1420:27:17"],"nodeType":"IdentifierPath","referencedDeclaration":3988,"src":"1420:27:17"},"referencedDeclaration":3988,"src":"1420:27:17","typeDescriptions":{"typeIdentifier":"t_contract$_OptimisticOracleV2Interface_$3988","typeString":"contract OptimisticOracleV2Interface"}},"visibility":"public"},{"constant":false,"functionSelector":"975057e7","id":4106,"mutability":"mutable","name":"store","nameLocation":"1490:5:17","nodeType":"VariableDeclaration","scope":4926,"src":"1468:27:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_StoreInterface_$4033","typeString":"contract StoreInterface"},"typeName":{"id":4105,"nodeType":"UserDefinedTypeName","pathNode":{"id":4104,"name":"StoreInterface","nameLocations":["1468:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":4033,"src":"1468:14:17"},"referencedDeclaration":4033,"src":"1468:14:17","typeDescriptions":{"typeIdentifier":"t_contract$_StoreInterface_$4033","typeString":"contract StoreInterface"}},"visibility":"public"},{"constant":false,"functionSelector":"b9a3c84c","id":4109,"mutability":"mutable","name":"finder","nameLocation":"1527:6:17","nodeType":"VariableDeclaration","scope":4926,"src":"1504:29:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"},"typeName":{"id":4108,"nodeType":"UserDefinedTypeName","pathNode":{"id":4107,"name":"FinderInterface","nameLocations":["1504:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":3622,"src":"1504:15:17"},"referencedDeclaration":3622,"src":"1504:15:17","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"}},"visibility":"public"},{"constant":false,"functionSelector":"5cae7fb5","id":4111,"mutability":"mutable","name":"fixedAncillaryData","nameLocation":"1553:18:17","nodeType":"VariableDeclaration","scope":4926,"src":"1540:31:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes"},"typeName":{"id":4110,"name":"bytes","nodeType":"ElementaryTypeName","src":"1540:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"public"},{"constant":false,"functionSelector":"4a79d50c","id":4113,"mutability":"mutable","name":"title","nameLocation":"1592:5:17","nodeType":"VariableDeclaration","scope":4926,"src":"1578:19:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4112,"name":"string","nodeType":"ElementaryTypeName","src":"1578:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"80f323a7","id":4115,"mutability":"mutable","name":"bondAmount","nameLocation":"1619:10:17","nodeType":"VariableDeclaration","scope":4926,"src":"1604:25:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1604:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"fc0c546a","id":4118,"mutability":"mutable","name":"token","nameLocation":"1650:5:17","nodeType":"VariableDeclaration","scope":4926,"src":"1636:19:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"},"typeName":{"id":4117,"nodeType":"UserDefinedTypeName","pathNode":{"id":4116,"name":"IERC20","nameLocations":["1636:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":439,"src":"1636:6:17"},"referencedDeclaration":439,"src":"1636:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"8dee967e","id":4120,"mutability":"mutable","name":"additionReward","nameLocation":"1677:14:17","nodeType":"VariableDeclaration","scope":4926,"src":"1662:29:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1662:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c207ec6e","id":4122,"mutability":"mutable","name":"removalReward","nameLocation":"1713:13:17","nodeType":"VariableDeclaration","scope":4926,"src":"1698:28:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1698:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"6ad0690a","id":4124,"mutability":"mutable","name":"liveness","nameLocation":"1747:8:17","nodeType":"VariableDeclaration","scope":4926,"src":"1733:22:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4123,"name":"uint64","nodeType":"ElementaryTypeName","src":"1733:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"public"},{"constant":false,"functionSelector":"91152f10","id":4126,"mutability":"mutable","name":"minimumLiveness","nameLocation":"1776:15:17","nodeType":"VariableDeclaration","scope":4926,"src":"1762:29:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4125,"name":"uint64","nodeType":"ElementaryTypeName","src":"1762:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"public"},{"constant":false,"id":4128,"mutability":"mutable","name":"revisionCounter","nameLocation":"1814:15:17","nodeType":"VariableDeclaration","scope":4926,"src":"1798:31:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4127,"name":"uint256","nodeType":"ElementaryTypeName","src":"1798:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4130,"mutability":"mutable","name":"finalFee","nameLocation":"1852:8:17","nodeType":"VariableDeclaration","scope":4926,"src":"1836:24:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1836:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":true,"id":4136,"mutability":"constant","name":"PROPOSAL_YES_RESPONSE","nameLocation":"1894:21:17","nodeType":"VariableDeclaration","scope":4926,"src":"1869:61:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4131,"name":"int256","nodeType":"ElementaryTypeName","src":"1869:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"arguments":[{"hexValue":"31653138","id":4134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1925:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"id":4133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1918:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4132,"name":"int256","nodeType":"ElementaryTypeName","src":"1918:6:17","typeDescriptions":{}}},"id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1918:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":true,"id":4139,"mutability":"constant","name":"IDENTIFIER","nameLocation":"1963:10:17","nodeType":"VariableDeclaration","scope":4926,"src":"1937:54:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1937:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"444543454e5452412d4c495354","id":4138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1976:15:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9975c9461388297874375f8c46418a5163f8f6f271e5857847fdd288fafbcdbb","typeString":"literal_string \"DECENTRA-LIST\""},"value":"DECENTRA-LIST"},"visibility":"internal"},{"canonicalName":"Decentralist.RevisionType","id":4142,"members":[{"id":4140,"name":"Remove","nameLocation":"2029:6:17","nodeType":"EnumValue","src":"2029:6:17"},{"id":4141,"name":"Add","nameLocation":"2046:3:17","nodeType":"EnumValue","src":"2046:3:17"}],"name":"RevisionType","nameLocation":"2005:12:17","nodeType":"EnumDefinition","src":"2000:56:17"},{"canonicalName":"Decentralist.Status","id":4148,"members":[{"id":4143,"name":"Invalid","nameLocation":"2087:7:17","nodeType":"EnumValue","src":"2087:7:17"},{"id":4144,"name":"Proposed","nameLocation":"2105:8:17","nodeType":"EnumValue","src":"2105:8:17"},{"id":4145,"name":"Approved","nameLocation":"2124:8:17","nodeType":"EnumValue","src":"2124:8:17"},{"id":4146,"name":"Rejected","nameLocation":"2143:8:17","nodeType":"EnumValue","src":"2143:8:17"},{"id":4147,"name":"Executed","nameLocation":"2162:8:17","nodeType":"EnumValue","src":"2162:8:17"}],"name":"Status","nameLocation":"2069:6:17","nodeType":"EnumDefinition","src":"2064:113:17"},{"canonicalName":"Decentralist.Revision","id":4159,"members":[{"constant":false,"id":4150,"mutability":"mutable","name":"proposer","nameLocation":"2220:8:17","nodeType":"VariableDeclaration","scope":4159,"src":"2212:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4149,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4152,"mutability":"mutable","name":"addressesHash","nameLocation":"2247:13:17","nodeType":"VariableDeclaration","scope":4159,"src":"2239:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2239:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4155,"mutability":"mutable","name":"revisionType","nameLocation":"2284:12:17","nodeType":"VariableDeclaration","scope":4159,"src":"2271:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"},"typeName":{"id":4154,"nodeType":"UserDefinedTypeName","pathNode":{"id":4153,"name":"RevisionType","nameLocations":["2271:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":4142,"src":"2271:12:17"},"referencedDeclaration":4142,"src":"2271:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}},"visibility":"internal"},{"constant":false,"id":4158,"mutability":"mutable","name":"status","nameLocation":"2314:6:17","nodeType":"VariableDeclaration","scope":4159,"src":"2307:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4148","typeString":"enum Decentralist.Status"},"typeName":{"id":4157,"nodeType":"UserDefinedTypeName","pathNode":{"id":4156,"name":"Status","nameLocations":["2307:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":4148,"src":"2307:6:17"},"referencedDeclaration":4148,"src":"2307:6:17","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4148","typeString":"enum Decentralist.Status"}},"visibility":"internal"}],"name":"Revision","nameLocation":"2192:8:17","nodeType":"StructDefinition","scope":4926,"src":"2185:143:17","visibility":"public"},{"constant":false,"id":4163,"mutability":"mutable","name":"revisionIds","nameLocation":"2428:11:17","nodeType":"VariableDeclaration","scope":4926,"src":"2392:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":4162,"keyType":{"id":4160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2400:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2392:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":4161,"name":"uint256","nodeType":"ElementaryTypeName","src":"2411:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"functionSelector":"0ef486d1","id":4168,"mutability":"mutable","name":"revisions","nameLocation":"2518:9:17","nodeType":"VariableDeclaration","scope":4926,"src":"2482:45:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Revision_$4159_storage_$","typeString":"mapping(uint256 => struct Decentralist.Revision)"},"typeName":{"id":4167,"keyType":{"id":4164,"name":"uint256","nodeType":"ElementaryTypeName","src":"2490:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2482:28:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Revision_$4159_storage_$","typeString":"mapping(uint256 => struct Decentralist.Revision)"},"valueType":{"id":4166,"nodeType":"UserDefinedTypeName","pathNode":{"id":4165,"name":"Revision","nameLocations":["2501:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":4159,"src":"2501:8:17"},"referencedDeclaration":4159,"src":"2501:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Revision_$4159_storage_ptr","typeString":"struct Decentralist.Revision"}}},"visibility":"public"},{"constant":false,"functionSelector":"6f626eb3","id":4172,"mutability":"mutable","name":"onList","nameLocation":"2619:6:17","nodeType":"VariableDeclaration","scope":4926,"src":"2587:38:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":4171,"keyType":{"id":4169,"name":"address","nodeType":"ElementaryTypeName","src":"2595:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2587:24:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":4170,"name":"bool","nodeType":"ElementaryTypeName","src":"2606:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":4300,"nodeType":"Block","src":"4099:1146:17","statements":[{"expression":{"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4198,"name":"finder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"4110:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4200,"name":"_finder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"4135:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4199,"name":"FinderInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"4119:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FinderInterface_$3622_$","typeString":"type(contract FinderInterface)"}},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"}},"src":"4110:33:17","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"}},"id":4203,"nodeType":"ExpressionStatement","src":"4110:33:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4204,"name":"syncContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"4154:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4206,"nodeType":"ExpressionStatement","src":"4154:15:17"},{"expression":{"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4207,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"4180:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4209,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"4195:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4208,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"4188:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$439_$","typeString":"type(contract IERC20)"}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"src":"4180:22:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"id":4212,"nodeType":"ExpressionStatement","src":"4180:22:17"},{"expression":{"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4213,"name":"finalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"4215:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"arguments":[{"id":4218,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"4256:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}],"id":4217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4248:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4216,"name":"address","nodeType":"ElementaryTypeName","src":"4248:7:17","typeDescriptions":{}}},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4248:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4214,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"4226:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_StoreInterface_$4033","typeString":"contract StoreInterface"}},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4232:15:17","memberName":"computeFinalFee","nodeType":"MemberAccess","referencedDeclaration":4032,"src":"4226:21:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (address) view external returns (struct FixedPoint.Unsigned memory)"}},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4226:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":4221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4264:8:17","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"4226:46:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4215:57:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4223,"nodeType":"ExpressionStatement","src":"4215:57:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4225,"name":"_bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"4307:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"arguments":[{"id":4230,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"4352:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}],"id":4229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4344:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4228,"name":"address","nodeType":"ElementaryTypeName","src":"4344:7:17","typeDescriptions":{}}},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4344:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4226,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"4322:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_StoreInterface_$4033","typeString":"contract StoreInterface"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4328:15:17","memberName":"computeFinalFee","nodeType":"MemberAccess","referencedDeclaration":4032,"src":"4322:21:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (address) view external returns (struct FixedPoint.Unsigned memory)"}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":4233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4360:8:17","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"4322:46:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4307:61:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"626f6e64206d757374206265203e3d2066696e616c20666565","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4383:27:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_125dbae9684ccfc3c2f4c48a6488e7ec8ba5d4e141f94ac8e2819dadd3c071b1","typeString":"literal_string \"bond must be >= final fee\""},"value":"bond must be >= final fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_125dbae9684ccfc3c2f4c48a6488e7ec8ba5d4e141f94ac8e2819dadd3c071b1","typeString":"literal_string \"bond must be >= final fee\""}],"id":4224,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4285:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4285:136:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4237,"nodeType":"ExpressionStatement","src":"4285:136:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4239,"name":"_liveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"4454:9:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4240,"name":"_minimumLiveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"4467:16:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"4454:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6c6976656e657373206d757374206265203e3d206d696e696d756d4c6976656e657373","id":4242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4498:37:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3081d0d2e97ae829db742cd828461af7ab934373cdf728548dad1bc0eadb759","typeString":"literal_string \"liveness must be >= minimumLiveness\""},"value":"liveness must be >= minimumLiveness"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f3081d0d2e97ae829db742cd828461af7ab934373cdf728548dad1bc0eadb759","typeString":"literal_string \"liveness must be >= minimumLiveness\""}],"id":4238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4432:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4432:114:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4244,"nodeType":"ExpressionStatement","src":"4432:114:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4246,"name":"_liveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"4565:9:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"35323030","id":4247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4577:10:17","subdenomination":"weeks","typeDescriptions":{"typeIdentifier":"t_rational_3144960000_by_1","typeString":"int_const 3144960000"},"value":"5200"},"src":"4565:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6c6976656e657373206d757374206265203c2035323030207765656b73","id":4249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4589:31:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_dc1d0486d33821ede5d3b758f625d3ef0e5234b7b67b0141c6dff2128f35de56","typeString":"literal_string \"liveness must be < 5200 weeks\""},"value":"liveness must be < 5200 weeks"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dc1d0486d33821ede5d3b758f625d3ef0e5234b7b67b0141c6dff2128f35de56","typeString":"literal_string \"liveness must be < 5200 weeks\""}],"id":4245,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4557:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4557:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4251,"nodeType":"ExpressionStatement","src":"4557:64:17"},{"expression":{"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4252,"name":"fixedAncillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"4707:18:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"6d65657420746865204c697374204372697465726961206174207468652074696d65206f662074686520707269636520726571756573743f204c6973742043726974657269613a20","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4755:74:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e34da2609200b224ffe992330cd12047395e79cf84eab35610f71f5a93146d","typeString":"literal_string \"meet the List Criteria at the time of the price request? List Criteria: \""},"value":"meet the List Criteria at the time of the price request? List Criteria: "},{"id":4257,"name":"_listCriteria","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"4844:13:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"2e20446563656e7472612d4c697374205265766973696f6e204944203d20","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4872:32:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4ec96ac91c07cd49086380698a088473608ec0c63287fc444eb606330cd9ecca","typeString":"literal_string \". Decentra-List Revision ID = \""},"value":". Decentra-List Revision ID = "}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_36e34da2609200b224ffe992330cd12047395e79cf84eab35610f71f5a93146d","typeString":"literal_string \"meet the List Criteria at the time of the price request? List Criteria: \""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_4ec96ac91c07cd49086380698a088473608ec0c63287fc444eb606330cd9ecca","typeString":"literal_string \". Decentra-List Revision ID = \""}],"expression":{"id":4254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4728:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4253,"name":"bytes","nodeType":"ElementaryTypeName","src":"4728:5:17","typeDescriptions":{}}},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4734:6:17","memberName":"concat","nodeType":"MemberAccess","src":"4728:12:17","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4728:187:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4707:208:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":4261,"nodeType":"ExpressionStatement","src":"4707:208:17"},{"expression":{"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4262,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"4926:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4263,"name":"_title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"4934:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4926:14:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4265,"nodeType":"ExpressionStatement","src":"4926:14:17"},{"expression":{"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4266,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"4951:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4268,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"4966:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4267,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"4959:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$439_$","typeString":"type(contract IERC20)"}},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4959:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"src":"4951:22:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"id":4271,"nodeType":"ExpressionStatement","src":"4951:22:17"},{"expression":{"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4272,"name":"bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"4984:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4273,"name":"_bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"4997:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4984:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4275,"nodeType":"ExpressionStatement","src":"4984:24:17"},{"expression":{"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4276,"name":"additionReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"5019:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4277,"name":"_additionReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"5036:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5019:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4279,"nodeType":"ExpressionStatement","src":"5019:32:17"},{"expression":{"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4280,"name":"removalReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"5062:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4281,"name":"_removalReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"5078:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5062:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4283,"nodeType":"ExpressionStatement","src":"5062:30:17"},{"expression":{"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4284,"name":"liveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"5103:8:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4285,"name":"_liveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"5114:9:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"5103:20:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4287,"nodeType":"ExpressionStatement","src":"5103:20:17"},{"expression":{"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4288,"name":"minimumLiveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"5134:15:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4289,"name":"_minimumLiveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"5152:16:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"5134:34:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4291,"nodeType":"ExpressionStatement","src":"5134:34:17"},{"expression":{"arguments":[{"id":4293,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"5198:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4292,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"5179:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5179:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4295,"nodeType":"ExpressionStatement","src":"5179:26:17"},{"expression":{"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4296,"name":"revisionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"5218:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":4297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5236:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5218:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4299,"nodeType":"ExpressionStatement","src":"5218:19:17"}]},"documentation":{"id":4173,"nodeType":"StructuredDocumentation","src":"2634:1109:17","text":" @notice Initializes the contract.\n @param _finder The address of UMA Finder contract. This is set in the DecentralistProxyFactory constructor.\n @param _listCriteria Criteria for what addresses should be included on the list. Can be on-chain text or a link to IPFS.\n @param _title Short title for the list.\n @param _token The address of the token currency used for this contract. Must be on UMA's collateral whitelist.\n @param _bondAmount Additional bond required, beyond the final fee.\n @param _additionReward Reward per address successfully added to the list, paid by the contract to the proposer.\n @param _removalReward Reward per address successfully removed from the list, paid by the contract to the proposer.\n @param _liveness The period, in seconds, in which a proposal can be disputed.\n @param _minimumLiveness The minimum allowable liveness period, in seconds.\n @param _owner Owner of the contract can remove funds from the contract and adjust reward rates. Set to the 0 address to make the contract 'public'."},"functionSelector":"74881462","id":4301,"implemented":true,"kind":"function","modifiers":[{"id":4196,"kind":"modifierInvocation","modifierName":{"id":4195,"name":"initializer","nameLocations":["4087:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":263,"src":"4087:11:17"},"nodeType":"ModifierInvocation","src":"4087:11:17"}],"name":"initialize","nameLocation":"3758:10:17","nodeType":"FunctionDefinition","parameters":{"id":4194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"mutability":"mutable","name":"_finder","nameLocation":"3787:7:17","nodeType":"VariableDeclaration","scope":4301,"src":"3779:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4174,"name":"address","nodeType":"ElementaryTypeName","src":"3779:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4177,"mutability":"mutable","name":"_listCriteria","nameLocation":"3818:13:17","nodeType":"VariableDeclaration","scope":4301,"src":"3805:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4176,"name":"bytes","nodeType":"ElementaryTypeName","src":"3805:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4179,"mutability":"mutable","name":"_title","nameLocation":"3856:6:17","nodeType":"VariableDeclaration","scope":4301,"src":"3842:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4178,"name":"string","nodeType":"ElementaryTypeName","src":"3842:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4181,"mutability":"mutable","name":"_token","nameLocation":"3881:6:17","nodeType":"VariableDeclaration","scope":4301,"src":"3873:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4180,"name":"address","nodeType":"ElementaryTypeName","src":"3873:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4183,"mutability":"mutable","name":"_bondAmount","nameLocation":"3906:11:17","nodeType":"VariableDeclaration","scope":4301,"src":"3898:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4182,"name":"uint256","nodeType":"ElementaryTypeName","src":"3898:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4185,"mutability":"mutable","name":"_additionReward","nameLocation":"3936:15:17","nodeType":"VariableDeclaration","scope":4301,"src":"3928:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4184,"name":"uint256","nodeType":"ElementaryTypeName","src":"3928:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4187,"mutability":"mutable","name":"_removalReward","nameLocation":"3970:14:17","nodeType":"VariableDeclaration","scope":4301,"src":"3962:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4186,"name":"uint256","nodeType":"ElementaryTypeName","src":"3962:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4189,"mutability":"mutable","name":"_liveness","nameLocation":"4002:9:17","nodeType":"VariableDeclaration","scope":4301,"src":"3995:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4188,"name":"uint64","nodeType":"ElementaryTypeName","src":"3995:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4191,"mutability":"mutable","name":"_minimumLiveness","nameLocation":"4029:16:17","nodeType":"VariableDeclaration","scope":4301,"src":"4022:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4190,"name":"uint64","nodeType":"ElementaryTypeName","src":"4022:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4193,"mutability":"mutable","name":"_owner","nameLocation":"4064:6:17","nodeType":"VariableDeclaration","scope":4301,"src":"4056:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4192,"name":"address","nodeType":"ElementaryTypeName","src":"4056:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3768:309:17"},"returnParameters":{"id":4197,"nodeType":"ParameterList","parameters":[],"src":"4099:0:17"},"scope":4926,"src":"3749:1496:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4498,"nodeType":"Block","src":"5777:2683:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4312,"name":"_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"5810:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5821:6:17","memberName":"length","nodeType":"MemberAccess","src":"5810:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313030","id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5830:3:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"5810:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616464726573736573206172726179206c656e677468206d757374206265203c20313030","id":4316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5848:38:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bd8befa97d8e5bb2f31c0d006a597f1b9f8a94909e1a13c46b5fbe426615cab","typeString":"literal_string \"addresses array length must be < 100\""},"value":"addresses array length must be < 100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4bd8befa97d8e5bb2f31c0d006a597f1b9f8a94909e1a13c46b5fbe426615cab","typeString":"literal_string \"addresses array length must be < 100\""}],"id":4311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5788:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5788:109:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4318,"nodeType":"ExpressionStatement","src":"5788:109:17"},{"assignments":[4320],"declarations":[{"constant":false,"id":4320,"mutability":"mutable","name":"ancillaryData","nameLocation":"5963:13:17","nodeType":"VariableDeclaration","scope":4498,"src":"5950:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4319,"name":"bytes","nodeType":"ElementaryTypeName","src":"5950:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4322,"initialValue":{"hexValue":"446f20616c6c2050726f706f7365642041646472657373657320","id":4321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5979:28:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f801d135b9051a147d01d6e9fd804c0c21eeb9482a65aa51f30b98691cb6e46","typeString":"literal_string \"Do all Proposed Addresses \""},"value":"Do all Proposed Addresses "},"nodeType":"VariableDeclarationStatement","src":"5950:57:17"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4323,"name":"_revisionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"6022:13:17","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4324,"name":"RevisionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"6039:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RevisionType_$4142_$","typeString":"type(enum Decentralist.RevisionType)"}},"id":4325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6052:6:17","memberName":"Remove","nodeType":"MemberAccess","referencedDeclaration":4140,"src":"6039:19:17","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}},"src":"6022:36:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4337,"nodeType":"IfStatement","src":"6018:124:17","trueBody":{"id":4336,"nodeType":"Block","src":"6060:82:17","statements":[{"expression":{"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4327,"name":"ancillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"6075:13:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4331,"name":"ancillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"6104:13:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"6661696c20746f20","id":4332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6119:10:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_047da255ce7159ed6ea6f856209867e957706bcd0e0dc74eaefbf996e670b8d8","typeString":"literal_string \"fail to \""},"value":"fail to "}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_047da255ce7159ed6ea6f856209867e957706bcd0e0dc74eaefbf996e670b8d8","typeString":"literal_string \"fail to \""}],"expression":{"id":4329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6091:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4328,"name":"bytes","nodeType":"ElementaryTypeName","src":"6091:5:17","typeDescriptions":{}}},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6097:6:17","memberName":"concat","nodeType":"MemberAccess","src":"6091:12:17","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6091:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"6075:55:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4335,"nodeType":"ExpressionStatement","src":"6075:55:17"}]}},{"expression":{"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4338,"name":"ancillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"6152:13:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4342,"name":"ancillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"6195:13:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4343,"name":"fixedAncillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"6223:18:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},{"arguments":[{"id":4346,"name":"revisionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"6286:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4344,"name":"AncillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"6256:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AncillaryData_$1892_$","typeString":"type(library AncillaryData)"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6270:15:17","memberName":"toUtf8BytesUint","nodeType":"MemberAccess","referencedDeclaration":1774,"src":"6256:29:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6256:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"2e20466f7220646972656374696f6e7320746f2066696e64207468652050726f706f736564204164647265737365732c2073656520496d706c656d656e746174696f6e2073656374696f6e206f6620554d49502d3136392e","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6317:90:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5a20166ea5c33b0f9b3fada118af4cd1ef04e3d947091a133e81dfe6e694e718","typeString":"literal_string \". For directions to find the Proposed Addresses, see Implementation section of UMIP-169.\""},"value":". For directions to find the Proposed Addresses, see Implementation section of UMIP-169."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_5a20166ea5c33b0f9b3fada118af4cd1ef04e3d947091a133e81dfe6e694e718","typeString":"literal_string \". For directions to find the Proposed Addresses, see Implementation section of UMIP-169.\""}],"expression":{"id":4340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6168:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4339,"name":"bytes","nodeType":"ElementaryTypeName","src":"6168:5:17","typeDescriptions":{}}},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6174:6:17","memberName":"concat","nodeType":"MemberAccess","src":"6168:12:17","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6168:250:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"6152:266:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4351,"nodeType":"ExpressionStatement","src":"6152:266:17"},{"assignments":[4353],"declarations":[{"constant":false,"id":4353,"mutability":"mutable","name":"currentTime","nameLocation":"6437:11:17","nodeType":"VariableDeclaration","scope":4498,"src":"6429:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4352,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4356,"initialValue":{"expression":{"id":4354,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6451:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6457:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"6451:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6429:37:17"},{"assignments":[4358],"declarations":[{"constant":false,"id":4358,"mutability":"mutable","name":"oracleRequestHash","nameLocation":"6536:17:17","nodeType":"VariableDeclaration","scope":4498,"src":"6528:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6528:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4366,"initialValue":{"arguments":[{"arguments":[{"id":4362,"name":"ancillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"6597:13:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4363,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"6612:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4360,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6580:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6584:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"6580:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6580:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4359,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6556:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6556:79:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6528:107:17"},{"assignments":[4368],"declarations":[{"constant":false,"id":4368,"mutability":"mutable","name":"addressesHash","nameLocation":"6654:13:17","nodeType":"VariableDeclaration","scope":4498,"src":"6646:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6646:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4375,"initialValue":{"arguments":[{"arguments":[{"id":4372,"name":"_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"6697:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}],"expression":{"id":4370,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6680:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6684:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"6680:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6680:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4369,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6670:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6670:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6646:63:17"},{"expression":{"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4376,"name":"revisionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"6787:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4378,"indexExpression":{"id":4377,"name":"oracleRequestHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"6799:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6787:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4379,"name":"revisionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"6820:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6787:48:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4381,"nodeType":"ExpressionStatement","src":"6787:48:17"},{"expression":{"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4382,"name":"revisions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"6927:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Revision_$4159_storage_$","typeString":"mapping(uint256 => struct Decentralist.Revision storage ref)"}},"id":4384,"indexExpression":{"id":4383,"name":"revisionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"6937:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6927:26:17","typeDescriptions":{"typeIdentifier":"t_struct$_Revision_$4159_storage","typeString":"struct Decentralist.Revision storage ref"}},"id":4385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6954:8:17","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":4150,"src":"6927:35:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4386,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6965:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6969:6:17","memberName":"sender","nodeType":"MemberAccess","src":"6965:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6927:48:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4389,"nodeType":"ExpressionStatement","src":"6927:48:17"},{"expression":{"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4390,"name":"revisions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"6986:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Revision_$4159_storage_$","typeString":"mapping(uint256 => struct Decentralist.Revision storage ref)"}},"id":4392,"indexExpression":{"id":4391,"name":"revisionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"6996:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6986:26:17","typeDescriptions":{"typeIdentifier":"t_struct$_Revision_$4159_storage","typeString":"struct Decentralist.Revision storage ref"}},"id":4393,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7013:13:17","memberName":"addressesHash","nodeType":"MemberAccess","referencedDeclaration":4152,"src":"6986:40:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4394,"name":"addressesHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"7029:13:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6986:56:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4396,"nodeType":"ExpressionStatement","src":"6986:56:17"},{"expression":{"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4397,"name":"revisions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"7053:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Revision_$4159_storage_$","typeString":"mapping(uint256 => struct Decentralist.Revision storage ref)"}},"id":4399,"indexExpression":{"id":4398,"name":"revisionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"7063:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7053:26:17","typeDescriptions":{"typeIdentifier":"t_struct$_Revision_$4159_storage","typeString":"struct Decentralist.Revision storage ref"}},"id":4400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7080:12:17","memberName":"revisionType","nodeType":"MemberAccess","referencedDeclaration":4155,"src":"7053:39:17","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4401,"name":"_revisionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"7095:13:17","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}},"src":"7053:55:17","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}},"id":4403,"nodeType":"ExpressionStatement","src":"7053:55:17"},{"expression":{"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4404,"name":"revisions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"7119:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Revision_$4159_storage_$","typeString":"mapping(uint256 => struct Decentralist.Revision storage ref)"}},"id":4406,"indexExpression":{"id":4405,"name":"revisionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"7129:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7119:26:17","typeDescriptions":{"typeIdentifier":"t_struct$_Revision_$4159_storage","typeString":"struct Decentralist.Revision storage ref"}},"id":4407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7146:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":4158,"src":"7119:33:17","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4148","typeString":"enum Decentralist.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4408,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"7155:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$4148_$","typeString":"type(enum Decentralist.Status)"}},"id":4409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7162:8:17","memberName":"Proposed","nodeType":"MemberAccess","referencedDeclaration":4144,"src":"7155:15:17","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4148","typeString":"enum Decentralist.Status"}},"src":"7119:51:17","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4148","typeString":"enum Decentralist.Status"}},"id":4411,"nodeType":"ExpressionStatement","src":"7119:51:17"},{"expression":{"arguments":[{"id":4415,"name":"IDENTIFIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"7271:10:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4416,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"7283:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4417,"name":"ancillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"7296:13:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4418,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"7311:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},{"hexValue":"30","id":4419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7318:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":4412,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"7251:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_OptimisticOracleV2Interface_$3988","typeString":"contract OptimisticOracleV2Interface"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7258:12:17","memberName":"requestPrice","nodeType":"MemberAccess","referencedDeclaration":3782,"src":"7251:19:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$_t_contract$_IERC20_$439_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes32,uint256,bytes memory,contract IERC20,uint256) external returns (uint256)"}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7251:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4421,"nodeType":"ExpressionStatement","src":"7251:69:17"},{"expression":{"arguments":[{"id":4425,"name":"IDENTIFIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"7365:10:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4426,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"7390:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4427,"name":"ancillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"7416:13:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":4428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7444:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7464:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"74727565","id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7484:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4422,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"7331:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_OptimisticOracleV2Interface_$3988","typeString":"contract OptimisticOracleV2Interface"}},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7338:12:17","memberName":"setCallbacks","nodeType":"MemberAccess","referencedDeclaration":3844,"src":"7331:19:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$_t_bool_$_t_bool_$_t_bool_$returns$__$","typeString":"function (bytes32,uint256,bytes memory,bool,bool,bool) external"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7331:168:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4432,"nodeType":"ExpressionStatement","src":"7331:168:17"},{"expression":{"arguments":[{"id":4436,"name":"IDENTIFIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"7549:10:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4437,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"7574:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4438,"name":"ancillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"7600:13:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4439,"name":"liveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"7628:8:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":4433,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"7510:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_OptimisticOracleV2Interface_$3988","typeString":"contract OptimisticOracleV2Interface"}},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7517:17:17","memberName":"setCustomLiveness","nodeType":"MemberAccess","referencedDeclaration":3818,"src":"7510:24:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,bytes memory,uint256) external"}},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7510:137:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4441,"nodeType":"ExpressionStatement","src":"7510:137:17"},{"assignments":[4443],"declarations":[{"constant":false,"id":4443,"mutability":"mutable","name":"totalBond","nameLocation":"7666:9:17","nodeType":"VariableDeclaration","scope":4498,"src":"7658:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4442,"name":"uint256","nodeType":"ElementaryTypeName","src":"7658:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4451,"initialValue":{"arguments":[{"id":4446,"name":"IDENTIFIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"7707:10:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4447,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"7732:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4448,"name":"ancillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"7758:13:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4449,"name":"bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"7786:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4444,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"7678:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_OptimisticOracleV2Interface_$3988","typeString":"contract OptimisticOracleV2Interface"}},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7685:7:17","memberName":"setBond","nodeType":"MemberAccess","referencedDeclaration":3796,"src":"7678:14:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes32,uint256,bytes memory,uint256) external returns (uint256)"}},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7678:129:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7658:149:17"},{"expression":{"arguments":[{"expression":{"id":4455,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7925:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7929:6:17","memberName":"sender","nodeType":"MemberAccess","src":"7925:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4459,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7945:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Decentralist_$4926","typeString":"contract Decentralist"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Decentralist_$4926","typeString":"contract Decentralist"}],"id":4458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7937:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4457,"name":"address","nodeType":"ElementaryTypeName","src":"7937:7:17","typeDescriptions":{}}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7937:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4461,"name":"totalBond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"7952:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4452,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"7902:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7908:16:17","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":533,"src":"7902:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$439_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7902:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4463,"nodeType":"ExpressionStatement","src":"7902:60:17"},{"expression":{"arguments":[{"arguments":[{"id":4469,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"8077:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_OptimisticOracleV2Interface_$3988","typeString":"contract OptimisticOracleV2Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OptimisticOracleV2Interface_$3988","typeString":"contract OptimisticOracleV2Interface"}],"id":4468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8069:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4467,"name":"address","nodeType":"ElementaryTypeName","src":"8069:7:17","typeDescriptions":{}}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4471,"name":"totalBond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"8086:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4464,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"8051:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8057:11:17","memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":577,"src":"8051:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$439_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8051:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4473,"nodeType":"ExpressionStatement","src":"8051:45:17"},{"expression":{"arguments":[{"expression":{"id":4477,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8182:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8186:6:17","memberName":"sender","nodeType":"MemberAccess","src":"8182:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4481,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8215:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Decentralist_$4926","typeString":"contract Decentralist"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Decentralist_$4926","typeString":"contract Decentralist"}],"id":4480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8207:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4479,"name":"address","nodeType":"ElementaryTypeName","src":"8207:7:17","typeDescriptions":{}}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8207:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4483,"name":"IDENTIFIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"8235:10:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4484,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"8260:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4485,"name":"ancillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"8286:13:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4486,"name":"PROPOSAL_YES_RESPONSE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"8314:21:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":4474,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"8145:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_OptimisticOracleV2Interface_$3988","typeString":"contract OptimisticOracleV2Interface"}},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8152:15:17","memberName":"proposePriceFor","nodeType":"MemberAccess","referencedDeclaration":3862,"src":"8145:22:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$_t_int256_$returns$_t_uint256_$","typeString":"function (address,address,bytes32,uint256,bytes memory,int256) external returns (uint256)"}},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8145:201:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4488,"nodeType":"ExpressionStatement","src":"8145:201:17"},{"eventCall":{"arguments":[{"id":4490,"name":"revisionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"8381:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4491,"name":"_revisionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"8398:13:17","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}},{"id":4492,"name":"_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"8413:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"},{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}],"id":4489,"name":"RevisionProposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"8364:16:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_RevisionType_$4142_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,enum Decentralist.RevisionType,address[] memory)"}},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8364:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4494,"nodeType":"EmitStatement","src":"8359:65:17"},{"expression":{"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8435:17:17","subExpression":{"id":4495,"name":"revisionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"8435:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4497,"nodeType":"ExpressionStatement","src":"8435:17:17"}]},"documentation":{"id":4302,"nodeType":"StructuredDocumentation","src":"5253:400:17","text":" @notice Proposes addresses to add or remove from the list.\n @param _revisionType Enum indicatting if the proposed revision is adding or removing addresses. 0 = Remove, 1 = Add.\n @param _addresses Array of addresses for the proposed revision.\n @dev Caller must have approved this contract to spend the total bond amount of the contract's token before calling."},"functionSelector":"af359fa2","id":4499,"implemented":true,"kind":"function","modifiers":[],"name":"proposeRevision","nameLocation":"5668:15:17","nodeType":"FunctionDefinition","parameters":{"id":4309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4305,"mutability":"mutable","name":"_revisionType","nameLocation":"5707:13:17","nodeType":"VariableDeclaration","scope":4499,"src":"5694:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"},"typeName":{"id":4304,"nodeType":"UserDefinedTypeName","pathNode":{"id":4303,"name":"RevisionType","nameLocations":["5694:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":4142,"src":"5694:12:17"},"referencedDeclaration":4142,"src":"5694:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}},"visibility":"internal"},{"constant":false,"id":4308,"mutability":"mutable","name":"_addresses","nameLocation":"5750:10:17","nodeType":"VariableDeclaration","scope":4499,"src":"5731:29:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4306,"name":"address","nodeType":"ElementaryTypeName","src":"5731:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4307,"nodeType":"ArrayTypeName","src":"5731:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"5683:84:17"},"returnParameters":{"id":4310,"nodeType":"ParameterList","parameters":[],"src":"5777:0:17"},"scope":4926,"src":"5659:2801:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4576,"nodeType":"Block","src":"8966:922:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4512,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9046:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9050:6:17","memberName":"sender","nodeType":"MemberAccess","src":"9046:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":4516,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"9068:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_OptimisticOracleV2Interface_$3988","typeString":"contract OptimisticOracleV2Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OptimisticOracleV2Interface_$3988","typeString":"contract OptimisticOracleV2Interface"}],"id":4515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9060:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4514,"name":"address","nodeType":"ElementaryTypeName","src":"9060:7:17","typeDescriptions":{}}},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9060:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9046:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6c79206f7261636c652063616e2063616c6c20746869732066756e6374696f6e","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9090:36:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_20de572be7a72693017907a48071b9a28c6697a396e1ff16cc2cb4c4947aaf75","typeString":"literal_string \"only oracle can call this function\""},"value":"only oracle can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_20de572be7a72693017907a48071b9a28c6697a396e1ff16cc2cb4c4947aaf75","typeString":"literal_string \"only oracle can call this function\""}],"id":4511,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9024:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9024:113:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4521,"nodeType":"ExpressionStatement","src":"9024:113:17"},{"assignments":[4523],"declarations":[{"constant":false,"id":4523,"mutability":"mutable","name":"oracleRequestHash","nameLocation":"9208:17:17","nodeType":"VariableDeclaration","scope":4576,"src":"9200:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9200:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4531,"initialValue":{"arguments":[{"arguments":[{"id":4527,"name":"ancillaryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"9269:13:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4528,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"9284:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4525,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9252:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9256:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"9252:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9252:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4524,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9228:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9228:77:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9200:105:17"},{"assignments":[4533],"declarations":[{"constant":false,"id":4533,"mutability":"mutable","name":"revisionId","nameLocation":"9324:10:17","nodeType":"VariableDeclaration","scope":4576,"src":"9316:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4532,"name":"uint256","nodeType":"ElementaryTypeName","src":"9316:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4537,"initialValue":{"baseExpression":{"id":4534,"name":"revisionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"9337:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4536,"indexExpression":{"id":4535,"name":"oracleRequestHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4523,"src":"9349:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9337:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9316:51:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"9431:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4539,"name":"PROPOSAL_YES_RESPONSE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"9440:21:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9431:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4574,"nodeType":"Block","src":"9675:206:17","statements":[{"expression":{"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4558,"name":"revisions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"9690:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Revision_$4159_storage_$","typeString":"mapping(uint256 => struct Decentralist.Revision storage ref)"}},"id":4560,"indexExpression":{"id":4559,"name":"revisionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"9700:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9690:21:17","typeDescriptions":{"typeIdentifier":"t_struct$_Revision_$4159_storage","typeString":"struct Decentralist.Revision storage ref"}},"id":4561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9712:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":4158,"src":"9690:28:17","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4148","typeString":"enum Decentralist.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4562,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"9721:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$4148_$","typeString":"type(enum Decentralist.Status)"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9728:8:17","memberName":"Rejected","nodeType":"MemberAccess","referencedDeclaration":4146,"src":"9721:15:17","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4148","typeString":"enum Decentralist.Status"}},"src":"9690:46:17","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4148","typeString":"enum Decentralist.Status"}},"id":4565,"nodeType":"ExpressionStatement","src":"9690:46:17"},{"eventCall":{"arguments":[{"id":4567,"name":"revisionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"9791:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":4568,"name":"revisions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"9820:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Revision_$4159_storage_$","typeString":"mapping(uint256 => struct Decentralist.Revision storage ref)"}},"id":4570,"indexExpression":{"id":4569,"name":"revisionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"9830:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9820:21:17","typeDescriptions":{"typeIdentifier":"t_struct$_Revision_$4159_storage","typeString":"struct Decentralist.Revision storage ref"}},"id":4571,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9842:12:17","memberName":"revisionType","nodeType":"MemberAccess","referencedDeclaration":4155,"src":"9820:34:17","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}],"id":4566,"name":"RevisionRejected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"9756:16:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_RevisionType_$4142_$returns$__$","typeString":"function (uint256,enum Decentralist.RevisionType)"}},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9756:113:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4573,"nodeType":"EmitStatement","src":"9751:118:17"}]},"id":4575,"nodeType":"IfStatement","src":"9427:454:17","trueBody":{"id":4557,"nodeType":"Block","src":"9463:206:17","statements":[{"expression":{"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4541,"name":"revisions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"9478:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Revision_$4159_storage_$","typeString":"mapping(uint256 => struct Decentralist.Revision storage ref)"}},"id":4543,"indexExpression":{"id":4542,"name":"revisionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"9488:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9478:21:17","typeDescriptions":{"typeIdentifier":"t_struct$_Revision_$4159_storage","typeString":"struct Decentralist.Revision storage ref"}},"id":4544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9500:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":4158,"src":"9478:28:17","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4148","typeString":"enum Decentralist.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4545,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"9509:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$4148_$","typeString":"type(enum Decentralist.Status)"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9516:8:17","memberName":"Approved","nodeType":"MemberAccess","referencedDeclaration":4145,"src":"9509:15:17","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4148","typeString":"enum Decentralist.Status"}},"src":"9478:46:17","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4148","typeString":"enum Decentralist.Status"}},"id":4548,"nodeType":"ExpressionStatement","src":"9478:46:17"},{"eventCall":{"arguments":[{"id":4550,"name":"revisionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"9579:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":4551,"name":"revisions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"9608:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Revision_$4159_storage_$","typeString":"mapping(uint256 => struct Decentralist.Revision storage ref)"}},"id":4553,"indexExpression":{"id":4552,"name":"revisionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"9618:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9608:21:17","typeDescriptions":{"typeIdentifier":"t_struct$_Revision_$4159_storage","typeString":"struct Decentralist.Revision storage ref"}},"id":4554,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9630:12:17","memberName":"revisionType","nodeType":"MemberAccess","referencedDeclaration":4155,"src":"9608:34:17","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}],"id":4549,"name":"RevisionApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"9544:16:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_RevisionType_$4142_$returns$__$","typeString":"function (uint256,enum Decentralist.RevisionType)"}},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9544:113:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4556,"nodeType":"EmitStatement","src":"9539:118:17"}]}}]},"documentation":{"id":4500,"nodeType":"StructuredDocumentation","src":"8468:331:17","text":" @notice Callback function called upon oracle data settlement to update the Revision status to Approved or Rejected.\n @param timestamp Timestamp to identify the existing request.\n @param ancillaryData Ancillary data of the data being requested.\n @param value Value returned from the oracle."},"functionSelector":"04cc1fd5","id":4577,"implemented":true,"kind":"function","modifiers":[],"name":"priceSettled","nameLocation":"8814:12:17","nodeType":"FunctionDefinition","parameters":{"id":4509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4577,"src":"8837:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8837:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4504,"mutability":"mutable","name":"timestamp","nameLocation":"8880:9:17","nodeType":"VariableDeclaration","scope":4577,"src":"8872:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4503,"name":"uint256","nodeType":"ElementaryTypeName","src":"8872:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4506,"mutability":"mutable","name":"ancillaryData","nameLocation":"8913:13:17","nodeType":"VariableDeclaration","scope":4577,"src":"8900:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4505,"name":"bytes","nodeType":"ElementaryTypeName","src":"8900:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4508,"mutability":"mutable","name":"value","nameLocation":"8944:5:17","nodeType":"VariableDeclaration","scope":4577,"src":"8937:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4507,"name":"int256","nodeType":"ElementaryTypeName","src":"8937:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8826:130:17"},"returnParameters":{"id":4510,"nodeType":"ParameterList","parameters":[],"src":"8966:0:17"},"scope":4926,"src":"8805:1083:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4774,"nodeType":"Block","src":"10376:2047:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$4148","typeString":"enum Decentralist.Status"},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4587,"name":"revisions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"10409:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Revision_$4159_storage_$","typeString":"mapping(uint256 => struct Decentralist.Revision storage ref)"}},"id":4589,"indexExpression":{"id":4588,"name":"_revisionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"10419:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10409:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_Revision_$4159_storage","typeString":"struct Decentralist.Revision storage ref"}},"id":4590,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10432:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":4158,"src":"10409:29:17","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4148","typeString":"enum Decentralist.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4591,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"10442:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$4148_$","typeString":"type(enum Decentralist.Status)"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10449:8:17","memberName":"Approved","nodeType":"MemberAccess","referencedDeclaration":4145,"src":"10442:15:17","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4148","typeString":"enum Decentralist.Status"}},"src":"10409:48:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7265766973696f6e4964206973206e6f7420617070726f766564","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10472:28:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_bc85443d2dadaa51fb6c0191ee754fd345bd245be5525b0cd8d4d9df1755026b","typeString":"literal_string \"revisionId is not approved\""},"value":"revisionId is not approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bc85443d2dadaa51fb6c0191ee754fd345bd245be5525b0cd8d4d9df1755026b","typeString":"literal_string \"revisionId is not approved\""}],"id":4586,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10387:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10387:124:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4596,"nodeType":"ExpressionStatement","src":"10387:124:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4598,"name":"revisions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"10544:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Revision_$4159_storage_$","typeString":"mapping(uint256 => struct Decentralist.Revision storage ref)"}},"id":4600,"indexExpression":{"id":4599,"name":"_revisionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"10554:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10544:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_Revision_$4159_storage","typeString":"struct Decentralist.Revision storage ref"}},"id":4601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10567:13:17","memberName":"addressesHash","nodeType":"MemberAccess","referencedDeclaration":4152,"src":"10544:36:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4605,"name":"_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"10628:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}],"expression":{"id":4603,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10611:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10615:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"10611:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10611:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4602,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10601:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10601:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10544:96:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"68617368206f662061646472657373657320213d207265766973696f6e496427732061646472657373657348617368","id":4609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10655:49:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d075603a1671628c3e8a050324d6f35e6442672815a752252f84ad5249c9515","typeString":"literal_string \"hash of addresses != revisionId's addressesHash\""},"value":"hash of addresses != revisionId's addressesHash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d075603a1671628c3e8a050324d6f35e6442672815a752252f84ad5249c9515","typeString":"literal_string \"hash of addresses != revisionId's addressesHash\""}],"id":4597,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10522:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10522:193:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4611,"nodeType":"ExpressionStatement","src":"10522:193:17"},{"expression":{"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4612,"name":"revisions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"10763:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Revision_$4159_storage_$","typeString":"mapping(uint256 => struct Decentralist.Revision storage ref)"}},"id":4614,"indexExpression":{"id":4613,"name":"_revisionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"10773:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10763:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_Revision_$4159_storage","typeString":"struct Decentralist.Revision storage ref"}},"id":4615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10786:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":4158,"src":"10763:29:17","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4148","typeString":"enum Decentralist.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4616,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"10795:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$4148_$","typeString":"type(enum Decentralist.Status)"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10802:8:17","memberName":"Executed","nodeType":"MemberAccess","referencedDeclaration":4147,"src":"10795:15:17","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4148","typeString":"enum Decentralist.Status"}},"src":"10763:47:17","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4148","typeString":"enum Decentralist.Status"}},"id":4619,"nodeType":"ExpressionStatement","src":"10763:47:17"},{"assignments":[4621],"declarations":[{"constant":false,"id":4621,"mutability":"mutable","name":"setOnListTo","nameLocation":"10899:11:17","nodeType":"VariableDeclaration","scope":4774,"src":"10894:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4620,"name":"bool","nodeType":"ElementaryTypeName","src":"10894:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4622,"nodeType":"VariableDeclarationStatement","src":"10894:16:17"},{"assignments":[4624],"declarations":[{"constant":false,"id":4624,"mutability":"mutable","name":"rewardRate","nameLocation":"10929:10:17","nodeType":"VariableDeclaration","scope":4774,"src":"10921:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4623,"name":"uint256","nodeType":"ElementaryTypeName","src":"10921:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4625,"nodeType":"VariableDeclarationStatement","src":"10921:18:17"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4626,"name":"revisions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"10956:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Revision_$4159_storage_$","typeString":"mapping(uint256 => struct Decentralist.Revision storage ref)"}},"id":4628,"indexExpression":{"id":4627,"name":"_revisionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"10966:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10956:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_Revision_$4159_storage","typeString":"struct Decentralist.Revision storage ref"}},"id":4629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10979:12:17","memberName":"revisionType","nodeType":"MemberAccess","referencedDeclaration":4155,"src":"10956:35:17","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4630,"name":"RevisionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"10995:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RevisionType_$4142_$","typeString":"type(enum Decentralist.RevisionType)"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11008:6:17","memberName":"Remove","nodeType":"MemberAccess","referencedDeclaration":4140,"src":"10995:19:17","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}},"src":"10956:58:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4642,"name":"revisions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"11113:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Revision_$4159_storage_$","typeString":"mapping(uint256 => struct Decentralist.Revision storage ref)"}},"id":4644,"indexExpression":{"id":4643,"name":"_revisionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"11123:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11113:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_Revision_$4159_storage","typeString":"struct Decentralist.Revision storage ref"}},"id":4645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11136:12:17","memberName":"revisionType","nodeType":"MemberAccess","referencedDeclaration":4155,"src":"11113:35:17","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4646,"name":"RevisionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"11152:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RevisionType_$4142_$","typeString":"type(enum Decentralist.RevisionType)"}},"id":4647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11165:3:17","memberName":"Add","nodeType":"MemberAccess","referencedDeclaration":4141,"src":"11152:16:17","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}},"src":"11113:55:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4658,"nodeType":"IfStatement","src":"11109:148:17","trueBody":{"id":4657,"nodeType":"Block","src":"11170:87:17","statements":[{"expression":{"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4649,"name":"setOnListTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"11185:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11199:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11185:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4652,"nodeType":"ExpressionStatement","src":"11185:18:17"},{"expression":{"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4653,"name":"rewardRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"11218:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4654,"name":"additionReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"11231:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11218:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4656,"nodeType":"ExpressionStatement","src":"11218:27:17"}]}},"id":4659,"nodeType":"IfStatement","src":"10952:305:17","trueBody":{"id":4641,"nodeType":"Block","src":"11016:87:17","statements":[{"expression":{"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4633,"name":"setOnListTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"11031:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11045:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"11031:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4636,"nodeType":"ExpressionStatement","src":"11031:19:17"},{"expression":{"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4637,"name":"rewardRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"11065:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4638,"name":"removalReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"11078:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11065:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4640,"nodeType":"ExpressionStatement","src":"11065:26:17"}]}},{"assignments":[4661],"declarations":[{"constant":false,"id":4661,"mutability":"mutable","name":"rewardCounter","nameLocation":"11403:13:17","nodeType":"VariableDeclaration","scope":4774,"src":"11395:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4660,"name":"uint256","nodeType":"ElementaryTypeName","src":"11395:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4662,"nodeType":"VariableDeclarationStatement","src":"11395:21:17"},{"assignments":[4667],"declarations":[{"constant":false,"id":4667,"mutability":"mutable","name":"revisedAddresses","nameLocation":"11444:16:17","nodeType":"VariableDeclaration","scope":4774,"src":"11427:33:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4665,"name":"address","nodeType":"ElementaryTypeName","src":"11427:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4666,"nodeType":"ArrayTypeName","src":"11427:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4674,"initialValue":{"arguments":[{"expression":{"id":4671,"name":"_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"11477:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11488:6:17","memberName":"length","nodeType":"MemberAccess","src":"11477:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11463:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4668,"name":"address","nodeType":"ElementaryTypeName","src":"11467:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4669,"nodeType":"ArrayTypeName","src":"11467:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11463:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11427:68:17"},{"body":{"id":4714,"nodeType":"Block","src":"11556:226:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4686,"name":"onList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"11575:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4690,"indexExpression":{"baseExpression":{"id":4687,"name":"_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"11582:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4689,"indexExpression":{"id":4688,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"11593:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11582:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11575:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4691,"name":"setOnListTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"11600:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11575:36:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4713,"nodeType":"IfStatement","src":"11571:200:17","trueBody":{"id":4712,"nodeType":"Block","src":"11613:158:17","statements":[{"expression":{"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4693,"name":"onList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"11632:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4697,"indexExpression":{"baseExpression":{"id":4694,"name":"_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"11639:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4696,"indexExpression":{"id":4695,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"11650:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11639:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11632:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4698,"name":"setOnListTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"11656:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11632:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4700,"nodeType":"ExpressionStatement","src":"11632:35:17"},{"expression":{"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4701,"name":"revisedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"11686:16:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4703,"indexExpression":{"id":4702,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"11703:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11686:19:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4704,"name":"_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"11708:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4706,"indexExpression":{"id":4705,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"11719:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11708:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11686:35:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4708,"nodeType":"ExpressionStatement","src":"11686:35:17"},{"expression":{"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11740:15:17","subExpression":{"id":4709,"name":"rewardCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"11740:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4711,"nodeType":"ExpressionStatement","src":"11740:15:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4679,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"11528:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4680,"name":"_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"11532:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11543:6:17","memberName":"length","nodeType":"MemberAccess","src":"11532:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11528:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4715,"initializationExpression":{"assignments":[4676],"declarations":[{"constant":false,"id":4676,"mutability":"mutable","name":"i","nameLocation":"11521:1:17","nodeType":"VariableDeclaration","scope":4715,"src":"11513:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4675,"name":"uint256","nodeType":"ElementaryTypeName","src":"11513:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4678,"initialValue":{"hexValue":"30","id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11525:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11513:13:17"},"loopExpression":{"expression":{"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11551:3:17","subExpression":{"id":4683,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"11551:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4685,"nodeType":"ExpressionStatement","src":"11551:3:17"},"nodeType":"ForStatement","src":"11508:274:17"},{"assignments":[4717],"declarations":[{"constant":false,"id":4717,"mutability":"mutable","name":"reward","nameLocation":"11854:6:17","nodeType":"VariableDeclaration","scope":4774,"src":"11846:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4716,"name":"uint256","nodeType":"ElementaryTypeName","src":"11846:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4721,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4718,"name":"rewardRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"11863:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4719,"name":"rewardCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"11876:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11863:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11846:43:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4722,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"11904:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11913:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11904:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4764,"nodeType":"IfStatement","src":"11900:366:17","trueBody":{"id":4763,"nodeType":"Block","src":"11916:350:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4729,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11959:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Decentralist_$4926","typeString":"contract Decentralist"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Decentralist_$4926","typeString":"contract Decentralist"}],"id":4728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11951:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4727,"name":"address","nodeType":"ElementaryTypeName","src":"11951:7:17","typeDescriptions":{}}},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11951:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4725,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"11935:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11941:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":396,"src":"11935:15:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11935:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4732,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"11968:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11935:39:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4761,"nodeType":"Block","src":"12161:94:17","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":4754,"name":"revisions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"12199:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Revision_$4159_storage_$","typeString":"mapping(uint256 => struct Decentralist.Revision storage ref)"}},"id":4756,"indexExpression":{"id":4755,"name":"_revisionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"12209:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12199:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_Revision_$4159_storage","typeString":"struct Decentralist.Revision storage ref"}},"id":4757,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12222:8:17","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":4150,"src":"12199:31:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4758,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"12232:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4751,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"12180:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12186:12:17","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":507,"src":"12180:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$439_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12180:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4760,"nodeType":"ExpressionStatement","src":"12180:59:17"}]},"id":4762,"nodeType":"IfStatement","src":"11931:324:17","trueBody":{"id":4750,"nodeType":"Block","src":"11976:179:17","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":4737,"name":"revisions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"12036:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Revision_$4159_storage_$","typeString":"mapping(uint256 => struct Decentralist.Revision storage ref)"}},"id":4739,"indexExpression":{"id":4738,"name":"_revisionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"12046:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12036:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_Revision_$4159_storage","typeString":"struct Decentralist.Revision storage ref"}},"id":4740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12059:8:17","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":4150,"src":"12036:31:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":4745,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12114:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Decentralist_$4926","typeString":"contract Decentralist"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Decentralist_$4926","typeString":"contract Decentralist"}],"id":4744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12106:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4743,"name":"address","nodeType":"ElementaryTypeName","src":"12106:7:17","typeDescriptions":{}}},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12106:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4741,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"12090:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12096:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":396,"src":"12090:15:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12090:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4734,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"11995:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12001:12:17","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":507,"src":"11995:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$439_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11995:144:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4749,"nodeType":"ExpressionStatement","src":"11995:144:17"}]}}]}},{"eventCall":{"arguments":[{"id":4766,"name":"_revisionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"12312:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":4767,"name":"revisions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"12338:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Revision_$4159_storage_$","typeString":"mapping(uint256 => struct Decentralist.Revision storage ref)"}},"id":4769,"indexExpression":{"id":4768,"name":"_revisionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"12348:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12338:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_Revision_$4159_storage","typeString":"struct Decentralist.Revision storage ref"}},"id":4770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12361:12:17","memberName":"revisionType","nodeType":"MemberAccess","referencedDeclaration":4155,"src":"12338:35:17","typeDescriptions":{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"}},{"id":4771,"name":"revisedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"12388:16:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RevisionType_$4142","typeString":"enum Decentralist.RevisionType"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":4765,"name":"RevisionExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"12281:16:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_RevisionType_$4142_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,enum Decentralist.RevisionType,address[] memory)"}},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12281:134:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4773,"nodeType":"EmitStatement","src":"12276:139:17"}]},"documentation":{"id":4578,"nodeType":"StructuredDocumentation","src":"9896:374:17","text":" @notice Executes approved revisions by revising the list and paying out rewards to the proposer.\n @param _revisionId ID of revision to be executed. If Revision submitted does not have status Approved, tx will revert.\n @param _addresses Address array that matches the array logged in the RevisionProposed event for the provided _revisionId."},"functionSelector":"fee53ab6","id":4775,"implemented":true,"kind":"function","modifiers":[],"name":"executeRevision","nameLocation":"10285:15:17","nodeType":"FunctionDefinition","parameters":{"id":4584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4580,"mutability":"mutable","name":"_revisionId","nameLocation":"10309:11:17","nodeType":"VariableDeclaration","scope":4775,"src":"10301:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4579,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4583,"mutability":"mutable","name":"_addresses","nameLocation":"10341:10:17","nodeType":"VariableDeclaration","scope":4775,"src":"10322:29:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4581,"name":"address","nodeType":"ElementaryTypeName","src":"10322:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4582,"nodeType":"ArrayTypeName","src":"10322:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10300:52:17"},"returnParameters":{"id":4585,"nodeType":"ParameterList","parameters":[],"src":"10376:0:17"},"scope":4926,"src":"10276:2147:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4792,"nodeType":"Block","src":"12709:56:17","statements":[{"expression":{"arguments":[{"id":4788,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"12739:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4789,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"12750:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4785,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"12720:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12726:12:17","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":507,"src":"12720:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$439_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12720:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4791,"nodeType":"ExpressionStatement","src":"12720:37:17"}]},"documentation":{"id":4776,"nodeType":"StructuredDocumentation","src":"12431:200:17","text":" @notice Allows owner to withdraw the default tokens from the contract.\n @param recipient The recipient of the tokens.\n @param amount The amount of tokens to to send."},"functionSelector":"f3fef3a3","id":4793,"implemented":true,"kind":"function","modifiers":[{"id":4783,"kind":"modifierInvocation","modifierName":{"id":4782,"name":"onlyOwner","nameLocations":["12699:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"12699:9:17"},"nodeType":"ModifierInvocation","src":"12699:9:17"}],"name":"withdraw","nameLocation":"12646:8:17","nodeType":"FunctionDefinition","parameters":{"id":4781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4778,"mutability":"mutable","name":"recipient","nameLocation":"12663:9:17","nodeType":"VariableDeclaration","scope":4793,"src":"12655:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4777,"name":"address","nodeType":"ElementaryTypeName","src":"12655:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4780,"mutability":"mutable","name":"amount","nameLocation":"12682:6:17","nodeType":"VariableDeclaration","scope":4793,"src":"12674:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4779,"name":"uint256","nodeType":"ElementaryTypeName","src":"12674:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12654:35:17"},"returnParameters":{"id":4784,"nodeType":"ParameterList","parameters":[],"src":"12709:0:17"},"scope":4926,"src":"12637:128:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4813,"nodeType":"Block","src":"13166:65:17","statements":[{"expression":{"arguments":[{"id":4809,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"13205:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4810,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"13216:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4806,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"13184:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4805,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"13177:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$439_$","typeString":"type(contract IERC20)"}},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13177:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13192:12:17","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":507,"src":"13177:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$439_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13177:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4812,"nodeType":"ExpressionStatement","src":"13177:46:17"}]},"documentation":{"id":4794,"nodeType":"StructuredDocumentation","src":"12773:267:17","text":" @notice Allows owner to rescue tokens sent accidentally to the contract.\n @param recipient The recipient of the tokens.\n @param amount The amount of tokens to to send.\n @param _token The contract address of the token to send."},"functionSelector":"8671d23b","id":4814,"implemented":true,"kind":"function","modifiers":[{"id":4803,"kind":"modifierInvocation","modifierName":{"id":4802,"name":"onlyOwner","nameLocations":["13156:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"13156:9:17"},"nodeType":"ModifierInvocation","src":"13156:9:17"}],"name":"rescue","nameLocation":"13055:6:17","nodeType":"FunctionDefinition","parameters":{"id":4801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4796,"mutability":"mutable","name":"recipient","nameLocation":"13080:9:17","nodeType":"VariableDeclaration","scope":4814,"src":"13072:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4795,"name":"address","nodeType":"ElementaryTypeName","src":"13072:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4798,"mutability":"mutable","name":"amount","nameLocation":"13108:6:17","nodeType":"VariableDeclaration","scope":4814,"src":"13100:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4797,"name":"uint256","nodeType":"ElementaryTypeName","src":"13100:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4800,"mutability":"mutable","name":"_token","nameLocation":"13133:6:17","nodeType":"VariableDeclaration","scope":4814,"src":"13125:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4799,"name":"address","nodeType":"ElementaryTypeName","src":"13125:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13061:85:17"},"returnParameters":{"id":4804,"nodeType":"ParameterList","parameters":[],"src":"13166:0:17"},"scope":4926,"src":"13046:185:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4837,"nodeType":"Block","src":"13618:151:17","statements":[{"expression":{"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4824,"name":"additionReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"13629:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4825,"name":"_additionReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"13646:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13629:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4827,"nodeType":"ExpressionStatement","src":"13629:32:17"},{"expression":{"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4828,"name":"removalReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"13672:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4829,"name":"_removalReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"13688:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13672:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4831,"nodeType":"ExpressionStatement","src":"13672:30:17"},{"eventCall":{"arguments":[{"id":4833,"name":"_additionReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"13729:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4834,"name":"_removalReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"13746:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4832,"name":"RewardsSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"13718:10:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13718:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4836,"nodeType":"EmitStatement","src":"13713:48:17"}]},"documentation":{"id":4815,"nodeType":"StructuredDocumentation","src":"13239:262:17","text":" @notice Sets the rewards for successful revisions.\n @param _additionReward Reward to proposer per address successfully added to the list.\n @param _removalReward Reward to proposer per address successfully removed from the list."},"functionSelector":"654e51e7","id":4838,"implemented":true,"kind":"function","modifiers":[{"id":4822,"kind":"modifierInvocation","modifierName":{"id":4821,"name":"onlyOwner","nameLocations":["13603:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"13603:9:17"},"nodeType":"ModifierInvocation","src":"13603:9:17"}],"name":"setRewards","nameLocation":"13516:10:17","nodeType":"FunctionDefinition","parameters":{"id":4820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4817,"mutability":"mutable","name":"_additionReward","nameLocation":"13535:15:17","nodeType":"VariableDeclaration","scope":4838,"src":"13527:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4816,"name":"uint256","nodeType":"ElementaryTypeName","src":"13527:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4819,"mutability":"mutable","name":"_removalReward","nameLocation":"13560:14:17","nodeType":"VariableDeclaration","scope":4838,"src":"13552:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4818,"name":"uint256","nodeType":"ElementaryTypeName","src":"13552:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13526:49:17"},"returnParameters":{"id":4823,"nodeType":"ParameterList","parameters":[],"src":"13618:0:17"},"scope":4926,"src":"13507:262:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4868,"nodeType":"Block","src":"14004:381:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4847,"name":"_bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"14190:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"arguments":[{"id":4852,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"14235:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}],"id":4851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14227:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4850,"name":"address","nodeType":"ElementaryTypeName","src":"14227:7:17","typeDescriptions":{}}},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14227:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4848,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"14205:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_StoreInterface_$4033","typeString":"contract StoreInterface"}},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14211:15:17","memberName":"computeFinalFee","nodeType":"MemberAccess","referencedDeclaration":4032,"src":"14205:21:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_Unsigned_$1911_memory_ptr_$","typeString":"function (address) view external returns (struct FixedPoint.Unsigned memory)"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14205:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1911_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":4855,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14243:8:17","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"14205:46:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14190:61:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"626f6e64206d757374206265203e3d2066696e616c20666565","id":4857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14266:27:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_125dbae9684ccfc3c2f4c48a6488e7ec8ba5d4e141f94ac8e2819dadd3c071b1","typeString":"literal_string \"bond must be >= final fee\""},"value":"bond must be >= final fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_125dbae9684ccfc3c2f4c48a6488e7ec8ba5d4e141f94ac8e2819dadd3c071b1","typeString":"literal_string \"bond must be >= final fee\""}],"id":4846,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14168:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14168:136:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4859,"nodeType":"ExpressionStatement","src":"14168:136:17"},{"expression":{"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4860,"name":"bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"14317:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4861,"name":"_bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"14330:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14317:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4863,"nodeType":"ExpressionStatement","src":"14317:24:17"},{"eventCall":{"arguments":[{"id":4865,"name":"_bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"14365:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4864,"name":"BondSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"14357:7:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14357:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4867,"nodeType":"EmitStatement","src":"14352:25:17"}]},"documentation":{"id":4839,"nodeType":"StructuredDocumentation","src":"13777:164:17","text":" @notice Sets the bond amount for revisions.\n @param _bondAmount Amount of the bond token that will need to be paid for future proposals."},"functionSelector":"259bd920","id":4869,"implemented":true,"kind":"function","modifiers":[{"id":4844,"kind":"modifierInvocation","modifierName":{"id":4843,"name":"onlyOwner","nameLocations":["13994:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"13994:9:17"},"nodeType":"ModifierInvocation","src":"13994:9:17"}],"name":"setBond","nameLocation":"13956:7:17","nodeType":"FunctionDefinition","parameters":{"id":4842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4841,"mutability":"mutable","name":"_bondAmount","nameLocation":"13972:11:17","nodeType":"VariableDeclaration","scope":4869,"src":"13964:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4840,"name":"uint256","nodeType":"ElementaryTypeName","src":"13964:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13963:21:17"},"returnParameters":{"id":4845,"nodeType":"ParameterList","parameters":[],"src":"14004:0:17"},"scope":4926,"src":"13947:438:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4899,"nodeType":"Block","src":"14656:274:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4878,"name":"_liveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"14689:9:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4879,"name":"minimumLiveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"14702:15:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"14689:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6c6976656e657373206d757374206265203e3d206d696e696d756d4c6976656e657373","id":4881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14732:37:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3081d0d2e97ae829db742cd828461af7ab934373cdf728548dad1bc0eadb759","typeString":"literal_string \"liveness must be >= minimumLiveness\""},"value":"liveness must be >= minimumLiveness"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f3081d0d2e97ae829db742cd828461af7ab934373cdf728548dad1bc0eadb759","typeString":"literal_string \"liveness must be >= minimumLiveness\""}],"id":4877,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14667:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14667:113:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4883,"nodeType":"ExpressionStatement","src":"14667:113:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4885,"name":"_liveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"14799:9:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":4886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14811:7:17","subdenomination":"weeks","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"1"},"src":"14799:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6c6976656e657373206d757374206265203c207468616e2031207765656b","id":4888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14820:32:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b17c2a48ebae0023b062a31d39c1484bce50d2e042bc517d8fa71a29b7ae876","typeString":"literal_string \"liveness must be < than 1 week\""},"value":"liveness must be < than 1 week"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9b17c2a48ebae0023b062a31d39c1484bce50d2e042bc517d8fa71a29b7ae876","typeString":"literal_string \"liveness must be < than 1 week\""}],"id":4884,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14791:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14791:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4890,"nodeType":"ExpressionStatement","src":"14791:62:17"},{"expression":{"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4891,"name":"liveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"14864:8:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4892,"name":"_liveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"14875:9:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"14864:20:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4894,"nodeType":"ExpressionStatement","src":"14864:20:17"},{"eventCall":{"arguments":[{"id":4896,"name":"_liveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"14912:9:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":4895,"name":"LivenessSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"14900:11:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14900:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4898,"nodeType":"EmitStatement","src":"14895:27:17"}]},"documentation":{"id":4870,"nodeType":"StructuredDocumentation","src":"14393:199:17","text":" @notice Sets the liveness for future revisions. This is the amount of delay before a proposal is approved by\n default.\n @param _liveness Liveness to set in seconds."},"functionSelector":"3c4432f1","id":4900,"implemented":true,"kind":"function","modifiers":[{"id":4875,"kind":"modifierInvocation","modifierName":{"id":4874,"name":"onlyOwner","nameLocations":["14646:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"14646:9:17"},"nodeType":"ModifierInvocation","src":"14646:9:17"}],"name":"setLiveness","nameLocation":"14607:11:17","nodeType":"FunctionDefinition","parameters":{"id":4873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4872,"mutability":"mutable","name":"_liveness","nameLocation":"14626:9:17","nodeType":"VariableDeclaration","scope":4900,"src":"14619:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4871,"name":"uint64","nodeType":"ElementaryTypeName","src":"14619:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"14618:18:17"},"returnParameters":{"id":4876,"nodeType":"ParameterList","parameters":[],"src":"14656:0:17"},"scope":4926,"src":"14598:332:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4924,"nodeType":"Block","src":"15226:263:17","statements":[{"expression":{"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4904,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"15237:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_OptimisticOracleV2Interface_$3988","typeString":"contract OptimisticOracleV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":4908,"name":"OracleInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"15320:16:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OracleInterfaces_$3597_$","typeString":"type(library OracleInterfaces)"}},"id":4909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15337:18:17","memberName":"OptimisticOracleV2","nodeType":"MemberAccess","referencedDeclaration":3578,"src":"15320:35:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4906,"name":"finder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"15288:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"}},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15295:24:17","memberName":"getImplementationAddress","nodeType":"MemberAccess","referencedDeclaration":3621,"src":"15288:31:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15288:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4905,"name":"OptimisticOracleV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"15246:27:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OptimisticOracleV2Interface_$3988_$","typeString":"type(contract OptimisticOracleV2Interface)"}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15246:121:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_OptimisticOracleV2Interface_$3988","typeString":"contract OptimisticOracleV2Interface"}},"src":"15237:130:17","typeDescriptions":{"typeIdentifier":"t_contract$_OptimisticOracleV2Interface_$3988","typeString":"contract OptimisticOracleV2Interface"}},"id":4913,"nodeType":"ExpressionStatement","src":"15237:130:17"},{"expression":{"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4914,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"15378:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_StoreInterface_$4033","typeString":"contract StoreInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":4918,"name":"OracleInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"15447:16:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OracleInterfaces_$3597_$","typeString":"type(library OracleInterfaces)"}},"id":4919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15464:5:17","memberName":"Store","nodeType":"MemberAccess","referencedDeclaration":3563,"src":"15447:22:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4916,"name":"finder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"15415:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"}},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15422:24:17","memberName":"getImplementationAddress","nodeType":"MemberAccess","referencedDeclaration":3621,"src":"15415:31:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15415:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4915,"name":"StoreInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"15386:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StoreInterface_$4033_$","typeString":"type(contract StoreInterface)"}},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15386:95:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_StoreInterface_$4033","typeString":"contract StoreInterface"}},"src":"15378:103:17","typeDescriptions":{"typeIdentifier":"t_contract$_StoreInterface_$4033","typeString":"contract StoreInterface"}},"id":4923,"nodeType":"ExpressionStatement","src":"15378:103:17"}]},"documentation":{"id":4901,"nodeType":"StructuredDocumentation","src":"14938:250:17","text":" @notice This pulls in the most up-to-date Optimistic Oracle contract.\n @dev If a new OptimisticOracle is added and this is run between a revision's introduction and execution, the\n proposal will become unexecutable."},"functionSelector":"8a301adc","id":4925,"implemented":true,"kind":"function","modifiers":[],"name":"syncContracts","nameLocation":"15203:13:17","nodeType":"FunctionDefinition","parameters":{"id":4902,"nodeType":"ParameterList","parameters":[],"src":"15216:2:17"},"returnParameters":{"id":4903,"nodeType":"ParameterList","parameters":[],"src":"15226:0:17"},"scope":4926,"src":"15194:295:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":4927,"src":"664:14828:17","usedErrors":[]}],"src":"33:15459:17"},"id":17},"contracts/DecentralistProxyFactory.sol":{"ast":{"absolutePath":"contracts/DecentralistProxyFactory.sol","exportedSymbols":{"AddressWhitelistInterface":[3551],"Clones":[192],"DecentralistProxyFactory":[5101],"FinderInterface":[3622],"OptimisticOracleConstraints":[3602],"OracleInterfaces":[3597]},"id":5102,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4928,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"33:23:18"},{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","file":"@openzeppelin/contracts/proxy/Clones.sol","id":4929,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5102,"sourceUnit":193,"src":"60:50:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/oracle/interfaces/FinderInterface.sol","file":"@uma/core/contracts/oracle/interfaces/FinderInterface.sol","id":4930,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5102,"sourceUnit":3623,"src":"112:67:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol","file":"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol","id":4931,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5102,"sourceUnit":3552,"src":"181:77:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/oracle/implementation/Constants.sol","file":"@uma/core/contracts/oracle/implementation/Constants.sol","id":4932,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5102,"sourceUnit":3603,"src":"260:65:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"DecentralistProxyFactory","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5101,"linearizedBaseContracts":[5101],"name":"DecentralistProxyFactory","nameLocation":"338:24:18","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"91152f10","id":4934,"mutability":"mutable","name":"minimumLiveness","nameLocation":"386:15:18","nodeType":"VariableDeclaration","scope":5101,"src":"372:29:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4933,"name":"uint64","nodeType":"ElementaryTypeName","src":"372:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"public"},{"constant":false,"functionSelector":"99e7d056","id":4936,"mutability":"mutable","name":"implementationContract","nameLocation":"425:22:18","nodeType":"VariableDeclaration","scope":5101,"src":"410:37:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4935,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"d7741cad","id":4939,"mutability":"mutable","name":"allClones","nameLocation":"473:9:18","nodeType":"VariableDeclaration","scope":5101,"src":"456:26:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":4937,"name":"address","nodeType":"ElementaryTypeName","src":"456:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4938,"nodeType":"ArrayTypeName","src":"456:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"b9a3c84c","id":4942,"mutability":"mutable","name":"finder","nameLocation":"514:6:18","nodeType":"VariableDeclaration","scope":5101,"src":"491:29:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"},"typeName":{"id":4941,"nodeType":"UserDefinedTypeName","pathNode":{"id":4940,"name":"FinderInterface","nameLocations":["491:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":3622,"src":"491:15:18"},"referencedDeclaration":3622,"src":"491:15:18","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"}},"visibility":"public"},{"constant":false,"functionSelector":"e4ee614a","id":4945,"mutability":"mutable","name":"collateralWhitelist","nameLocation":"560:19:18","nodeType":"VariableDeclaration","scope":5101,"src":"527:52:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AddressWhitelistInterface_$3551","typeString":"contract AddressWhitelistInterface"},"typeName":{"id":4944,"nodeType":"UserDefinedTypeName","pathNode":{"id":4943,"name":"AddressWhitelistInterface","nameLocations":["527:25:18"],"nodeType":"IdentifierPath","referencedDeclaration":3551,"src":"527:25:18"},"referencedDeclaration":3551,"src":"527:25:18","typeDescriptions":{"typeIdentifier":"t_contract$_AddressWhitelistInterface_$3551","typeString":"contract AddressWhitelistInterface"}},"visibility":"public"},{"anonymous":false,"eventSelector":"cc1e9c890bc4f4943c457abb8d17f97703b9f7144e1f4a69e50c6e4988ef38b7","id":4949,"name":"NewClone","nameLocation":"594:8:18","nodeType":"EventDefinition","parameters":{"id":4948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4947,"indexed":false,"mutability":"mutable","name":"_clone","nameLocation":"611:6:18","nodeType":"VariableDeclaration","scope":4949,"src":"603:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4946,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"602:16:18"},"src":"588:31:18"},{"body":{"id":4996,"nodeType":"Block","src":"939:334:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4960,"name":"_finder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"958:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"977:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"969:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4961,"name":"address","nodeType":"ElementaryTypeName","src":"969:7:18","typeDescriptions":{}}},"id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"969:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"958:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696d706c656d656e746174696f6e20616464726573732063616e206e6f7420626520656d707479","id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"981:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_78e3bf9502626f09060106afd8790cbec0ebebca8f8db979e3ae7796e67c1c4a","typeString":"literal_string \"implementation address can not be empty\""},"value":"implementation address can not be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_78e3bf9502626f09060106afd8790cbec0ebebca8f8db979e3ae7796e67c1c4a","typeString":"literal_string \"implementation address can not be empty\""}],"id":4959,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"950:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"950:73:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4968,"nodeType":"ExpressionStatement","src":"950:73:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4970,"name":"_finder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"1042:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1061:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1053:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4971,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:18","typeDescriptions":{}}},"id":4974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1053:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1042:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"66696e64657220616464726573732063616e206e6f7420626520656d707479","id":4976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1065:33:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_79f72dd753d5acc67fd029f243bf8b3fc09511ac690b846d2075e38941a91a23","typeString":"literal_string \"finder address can not be empty\""},"value":"finder address can not be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_79f72dd753d5acc67fd029f243bf8b3fc09511ac690b846d2075e38941a91a23","typeString":"literal_string \"finder address can not be empty\""}],"id":4969,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1034:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1034:65:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4978,"nodeType":"ExpressionStatement","src":"1034:65:18"},{"expression":{"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4979,"name":"implementationContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"1110:22:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4980,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"1135:15:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1110:40:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4982,"nodeType":"ExpressionStatement","src":"1110:40:18"},{"expression":{"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4983,"name":"finder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"1161:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4985,"name":"_finder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"1186:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4984,"name":"FinderInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"1170:15:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FinderInterface_$3622_$","typeString":"type(contract FinderInterface)"}},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1170:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"}},"src":"1161:33:18","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"}},"id":4988,"nodeType":"ExpressionStatement","src":"1161:33:18"},{"expression":{"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4989,"name":"minimumLiveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"1205:15:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4990,"name":"_minimumLiveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"1223:16:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1205:34:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4992,"nodeType":"ExpressionStatement","src":"1205:34:18"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4993,"name":"syncWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"1250:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1250:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4995,"nodeType":"ExpressionStatement","src":"1250:15:18"}]},"documentation":{"id":4950,"nodeType":"StructuredDocumentation","src":"627:227:18","text":" @param _implementation The decentraList implementation contract that clones will be based on.\n @param _finder The address of UMA Finder contract. This is set in the DecentralistProxyFactory constructor."},"id":4997,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4952,"mutability":"mutable","name":"_implementation","nameLocation":"880:15:18","nodeType":"VariableDeclaration","scope":4997,"src":"872:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4951,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4954,"mutability":"mutable","name":"_finder","nameLocation":"905:7:18","nodeType":"VariableDeclaration","scope":4997,"src":"897:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4953,"name":"address","nodeType":"ElementaryTypeName","src":"897:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4956,"mutability":"mutable","name":"_minimumLiveness","nameLocation":"921:16:18","nodeType":"VariableDeclaration","scope":4997,"src":"914:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4955,"name":"uint64","nodeType":"ElementaryTypeName","src":"914:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"871:67:18"},"returnParameters":{"id":4958,"nodeType":"ParameterList","parameters":[],"src":"939:0:18"},"scope":5101,"src":"860:413:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5074,"nodeType":"Block","src":"2595:942:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":5022,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"2695:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5020,"name":"collateralWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"2661:19:18","typeDescriptions":{"typeIdentifier":"t_contract$_AddressWhitelistInterface_$3551","typeString":"contract AddressWhitelistInterface"}},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2681:13:18","memberName":"isOnWhitelist","nodeType":"MemberAccess","referencedDeclaration":3544,"src":"2661:33:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2661:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f6b656e206973206e6f74206f6e20554d41277320636f6c6c61746572616c2077686974656c697374","id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2704:44:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_284a847f07c9e11f6d6a09b7ffb7c1312021489096d61c8c2e1aa269c3ad5534","typeString":"literal_string \"token is not on UMA's collateral whitelist\""},"value":"token is not on UMA's collateral whitelist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_284a847f07c9e11f6d6a09b7ffb7c1312021489096d61c8c2e1aa269c3ad5534","typeString":"literal_string \"token is not on UMA's collateral whitelist\""}],"id":5019,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2653:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:96:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5026,"nodeType":"ExpressionStatement","src":"2653:96:18"},{"expression":{"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5027,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"2803:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5030,"name":"implementationContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"2827:22:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5028,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2814:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Clones_$192_$","typeString":"type(library Clones)"}},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2821:5:18","memberName":"clone","nodeType":"MemberAccess","referencedDeclaration":135,"src":"2814:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_address_$","typeString":"function (address) returns (address)"}},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2814:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2803:47:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5033,"nodeType":"ExpressionStatement","src":"2803:47:18"},{"assignments":[5035,null],"declarations":[{"constant":false,"id":5035,"mutability":"mutable","name":"success","nameLocation":"2903:7:18","nodeType":"VariableDeclaration","scope":5074,"src":"2898:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5034,"name":"bool","nodeType":"ElementaryTypeName","src":"2898:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":5056,"initialValue":{"arguments":[{"arguments":[{"hexValue":"696e697469616c697a6528616464726573732c62797465732c737472696e672c616464726573732c75696e743235362c75696e743235362c75696e743235362c75696e7436342c75696e7436342c6164647265737329","id":5040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2986:88:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_74881462dc788eecfa373a4861b3d5db2514fe89857932c4378473ff5c03cd81","typeString":"literal_string \"initialize(address,bytes,string,address,uint256,uint256,uint256,uint64,uint64,address)\""},"value":"initialize(address,bytes,string,address,uint256,uint256,uint256,uint64,uint64,address)"},{"arguments":[{"id":5043,"name":"finder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"3101:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"}],"id":5042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3093:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5041,"name":"address","nodeType":"ElementaryTypeName","src":"3093:7:18","typeDescriptions":{}}},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3093:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5045,"name":"_listCriteria","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"3127:13:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5046,"name":"_title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"3147:6:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5047,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"3160:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5048,"name":"_bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"3173:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5049,"name":"_additionReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"3191:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5050,"name":"_removalReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"3213:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5051,"name":"_liveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"3246:9:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":5052,"name":"minimumLiveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"3274:15:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":5053,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"3308:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_74881462dc788eecfa373a4861b3d5db2514fe89857932c4378473ff5c03cd81","typeString":"literal_string \"initialize(address,bytes,string,address,uint256,uint256,uint256,uint64,uint64,address)\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5038,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2944:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2948:19:18","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"2944:23:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2944:385:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5036,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"2916:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2925:4:18","memberName":"call","nodeType":"MemberAccess","src":"2916:13:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2916:424:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2897:443:18"},{"expression":{"arguments":[{"id":5058,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"3359:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6661696c656420746f206372656174652061206e657720696e7374616e6365","id":5059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3368:33:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd6254682a2283a2c9e2200dc67615bd0491e95d67a854e3cea8e733b2d0026a","typeString":"literal_string \"failed to create a new instance\""},"value":"failed to create a new instance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd6254682a2283a2c9e2200dc67615bd0491e95d67a854e3cea8e733b2d0026a","typeString":"literal_string \"failed to create a new instance\""}],"id":5057,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3351:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3351:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5061,"nodeType":"ExpressionStatement","src":"3351:51:18"},{"expression":{"arguments":[{"id":5065,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"3460:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5062,"name":"allClones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"3445:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3455:4:18","memberName":"push","nodeType":"MemberAccess","src":"3445:14:18","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3445:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5067,"nodeType":"ExpressionStatement","src":"3445:24:18"},{"eventCall":{"arguments":[{"id":5069,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"3494:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5068,"name":"NewClone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"3485:8:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3485:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5071,"nodeType":"EmitStatement","src":"3480:23:18"},{"expression":{"id":5072,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"3521:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5018,"id":5073,"nodeType":"Return","src":"3514:15:18"}]},"documentation":{"id":4998,"nodeType":"StructuredDocumentation","src":"1281:992:18","text":" @notice Creates a new decentraList smart contract.\n @param _listCriteria Criteria for what addresses should be included on the list. Can be on-chain text or a link to IPFS.\n @param _title Short title for the list.\n @param _token The address of the token currency used for this contract. Must be on UMA's collateral whitelist.\n @param _bondAmount Additional bond required, beyond the final fee.\n @param _additionReward Reward per address successfully added to the list, paid by the contract to the proposer.\n @param _removalReward Reward per address successfully removed from the list, paid by the contract to the proposer.\n @param _liveness The period, in seconds, in which a proposal can be disputed. Must be greater than 8 hours.\n @param _owner Owner of the contract can remove funds from the contract and adjust bondAmount, rewards and liveness. \n Set to the 0 address to make the contract a non-managed public good."},"functionSelector":"3ca9482d","id":5075,"implemented":true,"kind":"function","modifiers":[],"name":"createNewDecentralist","nameLocation":"2288:21:18","nodeType":"FunctionDefinition","parameters":{"id":5015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5000,"mutability":"mutable","name":"_listCriteria","nameLocation":"2333:13:18","nodeType":"VariableDeclaration","scope":5075,"src":"2320:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4999,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5002,"mutability":"mutable","name":"_title","nameLocation":"2371:6:18","nodeType":"VariableDeclaration","scope":5075,"src":"2357:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5001,"name":"string","nodeType":"ElementaryTypeName","src":"2357:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5004,"mutability":"mutable","name":"_token","nameLocation":"2396:6:18","nodeType":"VariableDeclaration","scope":5075,"src":"2388:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5003,"name":"address","nodeType":"ElementaryTypeName","src":"2388:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5006,"mutability":"mutable","name":"_bondAmount","nameLocation":"2421:11:18","nodeType":"VariableDeclaration","scope":5075,"src":"2413:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5005,"name":"uint256","nodeType":"ElementaryTypeName","src":"2413:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5008,"mutability":"mutable","name":"_additionReward","nameLocation":"2451:15:18","nodeType":"VariableDeclaration","scope":5075,"src":"2443:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5007,"name":"uint256","nodeType":"ElementaryTypeName","src":"2443:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5010,"mutability":"mutable","name":"_removalReward","nameLocation":"2485:14:18","nodeType":"VariableDeclaration","scope":5075,"src":"2477:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5009,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5012,"mutability":"mutable","name":"_liveness","nameLocation":"2517:9:18","nodeType":"VariableDeclaration","scope":5075,"src":"2510:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5011,"name":"uint64","nodeType":"ElementaryTypeName","src":"2510:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5014,"mutability":"mutable","name":"_owner","nameLocation":"2545:6:18","nodeType":"VariableDeclaration","scope":5075,"src":"2537:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5013,"name":"address","nodeType":"ElementaryTypeName","src":"2537:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2309:249:18"},"returnParameters":{"id":5018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5017,"mutability":"mutable","name":"instance","nameLocation":"2585:8:18","nodeType":"VariableDeclaration","scope":5075,"src":"2577:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5016,"name":"address","nodeType":"ElementaryTypeName","src":"2577:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2576:18:18"},"scope":5101,"src":"2279:1258:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5084,"nodeType":"Block","src":"3669:26:18","statements":[{"expression":{"id":5082,"name":"allClones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"3681:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":5081,"id":5083,"nodeType":"Return","src":"3674:16:18"}]},"documentation":{"id":5076,"nodeType":"StructuredDocumentation","src":"3545:57:18","text":" @notice Returns all instances created."},"functionSelector":"27831ee0","id":5085,"implemented":true,"kind":"function","modifiers":[],"name":"getAllClones","nameLocation":"3614:12:18","nodeType":"FunctionDefinition","parameters":{"id":5077,"nodeType":"ParameterList","parameters":[],"src":"3626:2:18"},"returnParameters":{"id":5081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5085,"src":"3651:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5078,"name":"address","nodeType":"ElementaryTypeName","src":"3651:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5079,"nodeType":"ArrayTypeName","src":"3651:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3650:18:18"},"scope":5101,"src":"3605:90:18","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5099,"nodeType":"Block","src":"3995:137:18","statements":[{"expression":{"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5089,"name":"collateralWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"4006:19:18","typeDescriptions":{"typeIdentifier":"t_contract$_AddressWhitelistInterface_$3551","typeString":"contract AddressWhitelistInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":5093,"name":"OracleInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"4086:16:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OracleInterfaces_$3597_$","typeString":"type(library OracleInterfaces)"}},"id":5094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4103:19:18","memberName":"CollateralWhitelist","nodeType":"MemberAccess","referencedDeclaration":3572,"src":"4086:36:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5091,"name":"finder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"4054:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"}},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4061:24:18","memberName":"getImplementationAddress","nodeType":"MemberAccess","referencedDeclaration":3621,"src":"4054:31:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:69:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5090,"name":"AddressWhitelistInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"4028:25:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressWhitelistInterface_$3551_$","typeString":"type(contract AddressWhitelistInterface)"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4028:96:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AddressWhitelistInterface_$3551","typeString":"contract AddressWhitelistInterface"}},"src":"4006:118:18","typeDescriptions":{"typeIdentifier":"t_contract$_AddressWhitelistInterface_$3551","typeString":"contract AddressWhitelistInterface"}},"id":5098,"nodeType":"ExpressionStatement","src":"4006:118:18"}]},"documentation":{"id":5086,"nodeType":"StructuredDocumentation","src":"3703:254:18","text":" @notice This pulls in the most up-to-date collateral whitelist.\n @dev If a new OptimisticOracle is added and this function is run between a list revision's proposal and execution,\n the proposal will become unexecutable."},"functionSelector":"2177a32b","id":5100,"implemented":true,"kind":"function","modifiers":[],"name":"syncWhitelist","nameLocation":"3972:13:18","nodeType":"FunctionDefinition","parameters":{"id":5087,"nodeType":"ParameterList","parameters":[],"src":"3985:2:18"},"returnParameters":{"id":5088,"nodeType":"ParameterList","parameters":[],"src":"3995:0:18"},"scope":5101,"src":"3963:169:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":5102,"src":"329:3806:18","usedErrors":[]}],"src":"33:4104:18"},"id":18},"contracts/interfaces/DecentralistInterface.sol":{"ast":{"absolutePath":"contracts/interfaces/DecentralistInterface.sol","exportedSymbols":{"Address":[1086],"Context":[1108],"DecentralistInterface":[5348],"FinderInterface":[3622],"FixedPoint":[3525],"IERC20":[439],"IERC20Permit":[475],"Initializable":[361],"OptimisticOracleV2Interface":[3988],"Ownable":[112],"SafeERC20":[756],"SafeMath":[1420],"SignedSafeMath":[1484],"StoreInterface":[4033]},"id":5349,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5103,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"33:23:19"},{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts/proxy/utils/Initializable.sol","id":5104,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5349,"sourceUnit":362,"src":"60:63:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":5105,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5349,"sourceUnit":757,"src":"125:65:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5106,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5349,"sourceUnit":440,"src":"192:56:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5107,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5349,"sourceUnit":113,"src":"250:52:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/oracle/interfaces/StoreInterface.sol","file":"@uma/core/contracts/oracle/interfaces/StoreInterface.sol","id":5108,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5349,"sourceUnit":4034,"src":"306:66:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/oracle/interfaces/OptimisticOracleV2Interface.sol","file":"@uma/core/contracts/oracle/interfaces/OptimisticOracleV2Interface.sol","id":5109,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5349,"sourceUnit":3989,"src":"374:79:19","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5110,"name":"Initializable","nameLocations":["500:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":361,"src":"500:13:19"},"id":5111,"nodeType":"InheritanceSpecifier","src":"500:13:19"},{"baseName":{"id":5112,"name":"Ownable","nameLocations":["515:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"515:7:19"},"id":5113,"nodeType":"InheritanceSpecifier","src":"515:7:19"}],"canonicalName":"DecentralistInterface","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":5348,"linearizedBaseContracts":[5348,112,1108,361],"name":"DecentralistInterface","nameLocation":"475:21:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5117,"libraryName":{"id":5114,"name":"SafeERC20","nameLocations":["536:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":756,"src":"536:9:19"},"nodeType":"UsingForDirective","src":"530:27:19","typeName":{"id":5116,"nodeType":"UserDefinedTypeName","pathNode":{"id":5115,"name":"IERC20","nameLocations":["550:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":439,"src":"550:6:19"},"referencedDeclaration":439,"src":"550:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}}},{"anonymous":false,"eventSelector":"8f95c4957ee34edd4a485a670aa52f5a209c00623e1a6ede185a009a87e605b0","id":5126,"name":"RevisionProposed","nameLocation":"571:16:19","nodeType":"EventDefinition","parameters":{"id":5125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5119,"indexed":true,"mutability":"mutable","name":"revisionId","nameLocation":"614:10:19","nodeType":"VariableDeclaration","scope":5126,"src":"598:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5118,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5121,"indexed":false,"mutability":"mutable","name":"proposedValue","nameLocation":"642:13:19","nodeType":"VariableDeclaration","scope":5126,"src":"635:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5120,"name":"int256","nodeType":"ElementaryTypeName","src":"635:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5124,"indexed":false,"mutability":"mutable","name":"pendingAddresses","nameLocation":"676:16:19","nodeType":"VariableDeclaration","scope":5126,"src":"666:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5122,"name":"address","nodeType":"ElementaryTypeName","src":"666:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5123,"nodeType":"ArrayTypeName","src":"666:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"587:112:19"},"src":"565:135:19"},{"anonymous":false,"eventSelector":"5f1087556d42c4c3af637fe0024e1c4ab4274c137e1e40d1e005992dd9fc8d51","id":5132,"name":"RevisionApproved","nameLocation":"712:16:19","nodeType":"EventDefinition","parameters":{"id":5131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5128,"indexed":true,"mutability":"mutable","name":"revisionId","nameLocation":"745:10:19","nodeType":"VariableDeclaration","scope":5132,"src":"729:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5127,"name":"uint256","nodeType":"ElementaryTypeName","src":"729:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5130,"indexed":false,"mutability":"mutable","name":"proposedValue","nameLocation":"764:13:19","nodeType":"VariableDeclaration","scope":5132,"src":"757:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5129,"name":"int256","nodeType":"ElementaryTypeName","src":"757:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"728:50:19"},"src":"706:73:19"},{"anonymous":false,"eventSelector":"e796aea3ecdb85837e12c602f67420034db2f1f547e02e2af5d5210af31b088d","id":5138,"name":"RevisionRejected","nameLocation":"791:16:19","nodeType":"EventDefinition","parameters":{"id":5137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5134,"indexed":true,"mutability":"mutable","name":"revisionId","nameLocation":"824:10:19","nodeType":"VariableDeclaration","scope":5138,"src":"808:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5133,"name":"uint256","nodeType":"ElementaryTypeName","src":"808:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5136,"indexed":false,"mutability":"mutable","name":"proposedValue","nameLocation":"843:13:19","nodeType":"VariableDeclaration","scope":5138,"src":"836:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5135,"name":"int256","nodeType":"ElementaryTypeName","src":"836:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"807:50:19"},"src":"785:73:19"},{"anonymous":false,"eventSelector":"6446f5d68da210914a3be3112d8175160cfcaab4b3c6a955bbcea6c0c0e94aa5","id":5147,"name":"RevisionExecuted","nameLocation":"870:16:19","nodeType":"EventDefinition","parameters":{"id":5146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5140,"indexed":true,"mutability":"mutable","name":"revisionId","nameLocation":"913:10:19","nodeType":"VariableDeclaration","scope":5147,"src":"897:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5139,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5142,"indexed":false,"mutability":"mutable","name":"proposedValue","nameLocation":"941:13:19","nodeType":"VariableDeclaration","scope":5147,"src":"934:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5141,"name":"int256","nodeType":"ElementaryTypeName","src":"934:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5145,"indexed":false,"mutability":"mutable","name":"revisedAddresses","nameLocation":"975:16:19","nodeType":"VariableDeclaration","scope":5147,"src":"965:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5143,"name":"address","nodeType":"ElementaryTypeName","src":"965:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5144,"nodeType":"ArrayTypeName","src":"965:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"886:112:19"},"src":"864:135:19"},{"anonymous":false,"eventSelector":"067def216f0ef603ed8175482f6240978b15c9dc7efd8e1ac4bd3a743787a5b6","id":5153,"name":"RewardsSet","nameLocation":"1013:10:19","nodeType":"EventDefinition","parameters":{"id":5152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5149,"indexed":false,"mutability":"mutable","name":"additionReward","nameLocation":"1032:14:19","nodeType":"VariableDeclaration","scope":5153,"src":"1024:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5148,"name":"uint256","nodeType":"ElementaryTypeName","src":"1024:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5151,"indexed":false,"mutability":"mutable","name":"removalReward","nameLocation":"1056:13:19","nodeType":"VariableDeclaration","scope":5153,"src":"1048:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5150,"name":"uint256","nodeType":"ElementaryTypeName","src":"1048:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1023:47:19"},"src":"1007:64:19"},{"anonymous":false,"eventSelector":"e5e4fe1ed302905b2067dd5af3ef8c34bc829afc97a52f95dd96d97d1ee4351b","id":5157,"name":"LivenessSet","nameLocation":"1083:11:19","nodeType":"EventDefinition","parameters":{"id":5156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5155,"indexed":false,"mutability":"mutable","name":"liveness","nameLocation":"1102:8:19","nodeType":"VariableDeclaration","scope":5157,"src":"1095:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5154,"name":"uint64","nodeType":"ElementaryTypeName","src":"1095:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1094:17:19"},"src":"1077:35:19"},{"anonymous":false,"eventSelector":"1b44689fb73c0c9cdf591d534287488fc7959fd3647346821063a3e567ec9a99","id":5161,"name":"BondSet","nameLocation":"1124:7:19","nodeType":"EventDefinition","parameters":{"id":5160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5159,"indexed":false,"mutability":"mutable","name":"bondAmount","nameLocation":"1140:10:19","nodeType":"VariableDeclaration","scope":5161,"src":"1132:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1132:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1131:20:19"},"src":"1118:34:19"},{"functionSelector":"7dc0d1d0","id":5167,"implemented":false,"kind":"function","modifiers":[],"name":"oracle","nameLocation":"1169:6:19","nodeType":"FunctionDefinition","parameters":{"id":5162,"nodeType":"ParameterList","parameters":[],"src":"1175:2:19"},"returnParameters":{"id":5166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5167,"src":"1245:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_OptimisticOracleV2Interface_$3988","typeString":"contract OptimisticOracleV2Interface"},"typeName":{"id":5164,"nodeType":"UserDefinedTypeName","pathNode":{"id":5163,"name":"OptimisticOracleV2Interface","nameLocations":["1245:27:19"],"nodeType":"IdentifierPath","referencedDeclaration":3988,"src":"1245:27:19"},"referencedDeclaration":3988,"src":"1245:27:19","typeDescriptions":{"typeIdentifier":"t_contract$_OptimisticOracleV2Interface_$3988","typeString":"contract OptimisticOracleV2Interface"}},"visibility":"internal"}],"src":"1244:29:19"},"scope":5348,"src":"1160:114:19","stateMutability":"view","virtual":true,"visibility":"external"},{"functionSelector":"975057e7","id":5173,"implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"1291:5:19","nodeType":"FunctionDefinition","parameters":{"id":5168,"nodeType":"ParameterList","parameters":[],"src":"1296:2:19"},"returnParameters":{"id":5172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5173,"src":"1330:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_StoreInterface_$4033","typeString":"contract StoreInterface"},"typeName":{"id":5170,"nodeType":"UserDefinedTypeName","pathNode":{"id":5169,"name":"StoreInterface","nameLocations":["1330:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":4033,"src":"1330:14:19"},"referencedDeclaration":4033,"src":"1330:14:19","typeDescriptions":{"typeIdentifier":"t_contract$_StoreInterface_$4033","typeString":"contract StoreInterface"}},"visibility":"internal"}],"src":"1329:16:19"},"scope":5348,"src":"1282:64:19","stateMutability":"view","virtual":true,"visibility":"external"},{"functionSelector":"b9a3c84c","id":5179,"implemented":false,"kind":"function","modifiers":[],"name":"finder","nameLocation":"1363:6:19","nodeType":"FunctionDefinition","parameters":{"id":5174,"nodeType":"ParameterList","parameters":[],"src":"1369:2:19"},"returnParameters":{"id":5178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5179,"src":"1403:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"},"typeName":{"id":5176,"nodeType":"UserDefinedTypeName","pathNode":{"id":5175,"name":"FinderInterface","nameLocations":["1403:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":3622,"src":"1403:15:19"},"referencedDeclaration":3622,"src":"1403:15:19","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"}},"visibility":"internal"}],"src":"1402:17:19"},"scope":5348,"src":"1354:66:19","stateMutability":"view","virtual":true,"visibility":"external"},{"functionSelector":"5cae7fb5","id":5184,"implemented":false,"kind":"function","modifiers":[],"name":"fixedAncillaryData","nameLocation":"1437:18:19","nodeType":"FunctionDefinition","parameters":{"id":5180,"nodeType":"ParameterList","parameters":[],"src":"1455:2:19"},"returnParameters":{"id":5183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5184,"src":"1489:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5181,"name":"bytes","nodeType":"ElementaryTypeName","src":"1489:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1488:14:19"},"scope":5348,"src":"1428:75:19","stateMutability":"view","virtual":true,"visibility":"external"},{"functionSelector":"4a79d50c","id":5189,"implemented":false,"kind":"function","modifiers":[],"name":"title","nameLocation":"1520:5:19","nodeType":"FunctionDefinition","parameters":{"id":5185,"nodeType":"ParameterList","parameters":[],"src":"1525:2:19"},"returnParameters":{"id":5188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5189,"src":"1559:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5186,"name":"string","nodeType":"ElementaryTypeName","src":"1559:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1558:15:19"},"scope":5348,"src":"1511:63:19","stateMutability":"view","virtual":true,"visibility":"external"},{"functionSelector":"80f323a7","id":5194,"implemented":false,"kind":"function","modifiers":[],"name":"bondAmount","nameLocation":"1591:10:19","nodeType":"FunctionDefinition","parameters":{"id":5190,"nodeType":"ParameterList","parameters":[],"src":"1601:2:19"},"returnParameters":{"id":5193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5194,"src":"1635:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1635:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1634:9:19"},"scope":5348,"src":"1582:62:19","stateMutability":"view","virtual":true,"visibility":"external"},{"functionSelector":"fc0c546a","id":5200,"implemented":false,"kind":"function","modifiers":[],"name":"token","nameLocation":"1661:5:19","nodeType":"FunctionDefinition","parameters":{"id":5195,"nodeType":"ParameterList","parameters":[],"src":"1666:2:19"},"returnParameters":{"id":5199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5200,"src":"1700:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"},"typeName":{"id":5197,"nodeType":"UserDefinedTypeName","pathNode":{"id":5196,"name":"IERC20","nameLocations":["1700:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":439,"src":"1700:6:19"},"referencedDeclaration":439,"src":"1700:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$439","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"1699:8:19"},"scope":5348,"src":"1652:56:19","stateMutability":"view","virtual":true,"visibility":"external"},{"functionSelector":"8dee967e","id":5205,"implemented":false,"kind":"function","modifiers":[],"name":"additionReward","nameLocation":"1725:14:19","nodeType":"FunctionDefinition","parameters":{"id":5201,"nodeType":"ParameterList","parameters":[],"src":"1739:2:19"},"returnParameters":{"id":5204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5205,"src":"1773:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5202,"name":"uint256","nodeType":"ElementaryTypeName","src":"1773:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1772:9:19"},"scope":5348,"src":"1716:66:19","stateMutability":"view","virtual":true,"visibility":"external"},{"functionSelector":"c207ec6e","id":5210,"implemented":false,"kind":"function","modifiers":[],"name":"removalReward","nameLocation":"1799:13:19","nodeType":"FunctionDefinition","parameters":{"id":5206,"nodeType":"ParameterList","parameters":[],"src":"1812:2:19"},"returnParameters":{"id":5209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5210,"src":"1846:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1846:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1845:9:19"},"scope":5348,"src":"1790:65:19","stateMutability":"view","virtual":true,"visibility":"external"},{"functionSelector":"6ad0690a","id":5215,"implemented":false,"kind":"function","modifiers":[],"name":"liveness","nameLocation":"1872:8:19","nodeType":"FunctionDefinition","parameters":{"id":5211,"nodeType":"ParameterList","parameters":[],"src":"1880:2:19"},"returnParameters":{"id":5214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5215,"src":"1914:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5212,"name":"uint64","nodeType":"ElementaryTypeName","src":"1914:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1913:8:19"},"scope":5348,"src":"1863:59:19","stateMutability":"view","virtual":true,"visibility":"external"},{"functionSelector":"91152f10","id":5220,"implemented":false,"kind":"function","modifiers":[],"name":"minimumLiveness","nameLocation":"1939:15:19","nodeType":"FunctionDefinition","parameters":{"id":5216,"nodeType":"ParameterList","parameters":[],"src":"1954:2:19"},"returnParameters":{"id":5219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5220,"src":"1988:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5217,"name":"uint64","nodeType":"ElementaryTypeName","src":"1988:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1987:8:19"},"scope":5348,"src":"1930:66:19","stateMutability":"view","virtual":true,"visibility":"external"},{"canonicalName":"DecentralistInterface.Status","id":5226,"members":[{"id":5221,"name":"Invalid","nameLocation":"2027:7:19","nodeType":"EnumValue","src":"2027:7:19"},{"id":5222,"name":"Pending","nameLocation":"2045:7:19","nodeType":"EnumValue","src":"2045:7:19"},{"id":5223,"name":"Approved","nameLocation":"2063:8:19","nodeType":"EnumValue","src":"2063:8:19"},{"id":5224,"name":"Rejected","nameLocation":"2082:8:19","nodeType":"EnumValue","src":"2082:8:19"},{"id":5225,"name":"Executed","nameLocation":"2101:8:19","nodeType":"EnumValue","src":"2101:8:19"}],"name":"Status","nameLocation":"2009:6:19","nodeType":"EnumDefinition","src":"2004:112:19"},{"canonicalName":"DecentralistInterface.Revision","id":5236,"members":[{"constant":false,"id":5228,"mutability":"mutable","name":"proposer","nameLocation":"2159:8:19","nodeType":"VariableDeclaration","scope":5236,"src":"2151:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5227,"name":"address","nodeType":"ElementaryTypeName","src":"2151:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5230,"mutability":"mutable","name":"addressesHash","nameLocation":"2186:13:19","nodeType":"VariableDeclaration","scope":5236,"src":"2178:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2178:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5232,"mutability":"mutable","name":"proposedValue","nameLocation":"2217:13:19","nodeType":"VariableDeclaration","scope":5236,"src":"2210:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5231,"name":"int256","nodeType":"ElementaryTypeName","src":"2210:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5235,"mutability":"mutable","name":"status","nameLocation":"2248:6:19","nodeType":"VariableDeclaration","scope":5236,"src":"2241:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5226","typeString":"enum DecentralistInterface.Status"},"typeName":{"id":5234,"nodeType":"UserDefinedTypeName","pathNode":{"id":5233,"name":"Status","nameLocations":["2241:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":5226,"src":"2241:6:19"},"referencedDeclaration":5226,"src":"2241:6:19","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5226","typeString":"enum DecentralistInterface.Status"}},"visibility":"internal"}],"name":"Revision","nameLocation":"2131:8:19","nodeType":"StructDefinition","scope":5348,"src":"2124:138:19","visibility":"public"},{"functionSelector":"0ef486d1","id":5244,"implemented":false,"kind":"function","modifiers":[],"name":"revisions","nameLocation":"2322:9:19","nodeType":"FunctionDefinition","parameters":{"id":5239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5238,"mutability":"mutable","name":"RevisionId","nameLocation":"2340:10:19","nodeType":"VariableDeclaration","scope":5244,"src":"2332:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5237,"name":"uint256","nodeType":"ElementaryTypeName","src":"2332:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2331:20:19"},"returnParameters":{"id":5243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5244,"src":"2419:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Revision_$5236_memory_ptr","typeString":"struct DecentralistInterface.Revision"},"typeName":{"id":5241,"nodeType":"UserDefinedTypeName","pathNode":{"id":5240,"name":"Revision","nameLocations":["2419:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":5236,"src":"2419:8:19"},"referencedDeclaration":5236,"src":"2419:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Revision_$5236_storage_ptr","typeString":"struct DecentralistInterface.Revision"}},"visibility":"internal"}],"src":"2418:17:19"},"scope":5348,"src":"2313:123:19","stateMutability":"view","virtual":true,"visibility":"external"},{"functionSelector":"6f626eb3","id":5251,"implemented":false,"kind":"function","modifiers":[],"name":"onList","nameLocation":"2504:6:19","nodeType":"FunctionDefinition","parameters":{"id":5247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5251,"src":"2511:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5245,"name":"address","nodeType":"ElementaryTypeName","src":"2511:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2510:9:19"},"returnParameters":{"id":5250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5251,"src":"2551:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5248,"name":"bool","nodeType":"ElementaryTypeName","src":"2551:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2550:6:19"},"scope":5348,"src":"2495:62:19","stateMutability":"view","virtual":true,"visibility":"external"},{"documentation":{"id":5252,"nodeType":"StructuredDocumentation","src":"2565:1109:19","text":" @notice Initializes the contract.\n @param _finder The address of UMA Finder contract. This is set in the DecentralistProxyFactory constructor.\n @param _listCriteria Criteria for what addresses should be included on the list. Can be on-chain text or a link to IPFS.\n @param _title Short title for the list.\n @param _token The address of the token currency used for this contract. Must be on UMA's collateral whitelist.\n @param _bondAmount Additional bond required, beyond the final fee.\n @param _additionReward Reward per address successfully added to the list, paid by the contract to the proposer.\n @param _removalReward Reward per address successfully removed from the list, paid by the contract to the proposer.\n @param _liveness The period, in seconds, in which a proposal can be disputed.\n @param _minimumLiveness The minimum allowable liveness period, in seconds.\n @param _owner Owner of the contract can remove funds from the contract and adjust reward rates. Set to the 0 address to make the contract 'public'."},"functionSelector":"74881462","id":5275,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"3689:10:19","nodeType":"FunctionDefinition","parameters":{"id":5273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5254,"mutability":"mutable","name":"_finder","nameLocation":"3718:7:19","nodeType":"VariableDeclaration","scope":5275,"src":"3710:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5253,"name":"address","nodeType":"ElementaryTypeName","src":"3710:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5256,"mutability":"mutable","name":"_listCriteria","nameLocation":"3749:13:19","nodeType":"VariableDeclaration","scope":5275,"src":"3736:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5255,"name":"bytes","nodeType":"ElementaryTypeName","src":"3736:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5258,"mutability":"mutable","name":"_title","nameLocation":"3787:6:19","nodeType":"VariableDeclaration","scope":5275,"src":"3773:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5257,"name":"string","nodeType":"ElementaryTypeName","src":"3773:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5260,"mutability":"mutable","name":"_token","nameLocation":"3812:6:19","nodeType":"VariableDeclaration","scope":5275,"src":"3804:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5259,"name":"address","nodeType":"ElementaryTypeName","src":"3804:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5262,"mutability":"mutable","name":"_bondAmount","nameLocation":"3837:11:19","nodeType":"VariableDeclaration","scope":5275,"src":"3829:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5261,"name":"uint256","nodeType":"ElementaryTypeName","src":"3829:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5264,"mutability":"mutable","name":"_additionReward","nameLocation":"3867:15:19","nodeType":"VariableDeclaration","scope":5275,"src":"3859:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5263,"name":"uint256","nodeType":"ElementaryTypeName","src":"3859:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5266,"mutability":"mutable","name":"_removalReward","nameLocation":"3901:14:19","nodeType":"VariableDeclaration","scope":5275,"src":"3893:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5265,"name":"uint256","nodeType":"ElementaryTypeName","src":"3893:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5268,"mutability":"mutable","name":"_liveness","nameLocation":"3933:9:19","nodeType":"VariableDeclaration","scope":5275,"src":"3926:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5267,"name":"uint64","nodeType":"ElementaryTypeName","src":"3926:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5270,"mutability":"mutable","name":"_minimumLiveness","nameLocation":"3960:16:19","nodeType":"VariableDeclaration","scope":5275,"src":"3953:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5269,"name":"uint64","nodeType":"ElementaryTypeName","src":"3953:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5272,"mutability":"mutable","name":"_owner","nameLocation":"3995:6:19","nodeType":"VariableDeclaration","scope":5275,"src":"3987:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5271,"name":"address","nodeType":"ElementaryTypeName","src":"3987:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3699:309:19"},"returnParameters":{"id":5274,"nodeType":"ParameterList","parameters":[],"src":"4025:0:19"},"scope":5348,"src":"3680:346:19","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":5276,"nodeType":"StructuredDocumentation","src":"4034:389:19","text":" @notice Proposes addresses to add or remove from the list.\n @param _value Indicates if the proposed revision is adding or removing addresses. 0 = remove, 1e18 = add.\n @param _addresses Array of addresses for the proposed revision.\n @dev Caller must have approved this contract to spend the total bond amount of the contract's token before calling."},"functionSelector":"ec40ad51","id":5284,"implemented":false,"kind":"function","modifiers":[],"name":"proposeRevision","nameLocation":"4438:15:19","nodeType":"FunctionDefinition","parameters":{"id":5282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5278,"mutability":"mutable","name":"_value","nameLocation":"4461:6:19","nodeType":"VariableDeclaration","scope":5284,"src":"4454:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5277,"name":"int256","nodeType":"ElementaryTypeName","src":"4454:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5281,"mutability":"mutable","name":"_addresses","nameLocation":"4488:10:19","nodeType":"VariableDeclaration","scope":5284,"src":"4469:29:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5279,"name":"address","nodeType":"ElementaryTypeName","src":"4469:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5280,"nodeType":"ArrayTypeName","src":"4469:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4453:46:19"},"returnParameters":{"id":5283,"nodeType":"ParameterList","parameters":[],"src":"4534:0:19"},"scope":5348,"src":"4429:106:19","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":5285,"nodeType":"StructuredDocumentation","src":"4543:331:19","text":" @notice Callback function called upon oracle data settlement to update the Revision status to Approved or Rejected.\n @param timestamp Timestamp to identify the existing request.\n @param ancillaryData Ancillary data of the data being requested.\n @param value Value returned from the oracle."},"functionSelector":"04cc1fd5","id":5296,"implemented":false,"kind":"function","modifiers":[],"name":"priceSettled","nameLocation":"4889:12:19","nodeType":"FunctionDefinition","parameters":{"id":5294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5296,"src":"4912:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4912:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5289,"mutability":"mutable","name":"timestamp","nameLocation":"4955:9:19","nodeType":"VariableDeclaration","scope":5296,"src":"4947:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5288,"name":"uint256","nodeType":"ElementaryTypeName","src":"4947:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5291,"mutability":"mutable","name":"ancillaryData","nameLocation":"4988:13:19","nodeType":"VariableDeclaration","scope":5296,"src":"4975:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5290,"name":"bytes","nodeType":"ElementaryTypeName","src":"4975:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5293,"mutability":"mutable","name":"value","nameLocation":"5019:5:19","nodeType":"VariableDeclaration","scope":5296,"src":"5012:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5292,"name":"int256","nodeType":"ElementaryTypeName","src":"5012:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4901:130:19"},"returnParameters":{"id":5295,"nodeType":"ParameterList","parameters":[],"src":"5048:0:19"},"scope":5348,"src":"4880:169:19","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":5297,"nodeType":"StructuredDocumentation","src":"5057:374:19","text":" @notice Executes approved revisions by revising the list and paying out rewards to the proposer.\n @param _revisionId ID of revision to be executed. If Revision submitted does not have status Approved, tx will revert.\n @param _addresses Address array that matches the array logged in the RevisionProposed event for the provided _revisionId."},"functionSelector":"fee53ab6","id":5305,"implemented":false,"kind":"function","modifiers":[],"name":"executeRevision","nameLocation":"5446:15:19","nodeType":"FunctionDefinition","parameters":{"id":5303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5299,"mutability":"mutable","name":"_revisionId","nameLocation":"5470:11:19","nodeType":"VariableDeclaration","scope":5305,"src":"5462:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5298,"name":"uint256","nodeType":"ElementaryTypeName","src":"5462:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5302,"mutability":"mutable","name":"_addresses","nameLocation":"5502:10:19","nodeType":"VariableDeclaration","scope":5305,"src":"5483:29:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5300,"name":"address","nodeType":"ElementaryTypeName","src":"5483:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5301,"nodeType":"ArrayTypeName","src":"5483:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"5461:52:19"},"returnParameters":{"id":5304,"nodeType":"ParameterList","parameters":[],"src":"5539:0:19"},"scope":5348,"src":"5437:103:19","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":5306,"nodeType":"StructuredDocumentation","src":"5548:200:19","text":" @notice Allows owner to withdraw the default tokens from the contract.\n @param recipient The recipient of the tokens.\n @param amount The amount of tokens to to send."},"functionSelector":"f3fef3a3","id":5313,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"5763:8:19","nodeType":"FunctionDefinition","parameters":{"id":5311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5308,"mutability":"mutable","name":"recipient","nameLocation":"5780:9:19","nodeType":"VariableDeclaration","scope":5313,"src":"5772:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5307,"name":"address","nodeType":"ElementaryTypeName","src":"5772:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5310,"mutability":"mutable","name":"amount","nameLocation":"5799:6:19","nodeType":"VariableDeclaration","scope":5313,"src":"5791:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5309,"name":"uint256","nodeType":"ElementaryTypeName","src":"5791:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5771:35:19"},"returnParameters":{"id":5312,"nodeType":"ParameterList","parameters":[],"src":"5823:0:19"},"scope":5348,"src":"5754:70:19","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":5314,"nodeType":"StructuredDocumentation","src":"5832:267:19","text":" @notice Allows owner to rescue tokens sent accidentally to the contract.\n @param recipient The recipient of the tokens.\n @param amount The amount of tokens to to send.\n @param _token The contract address of the token to send."},"functionSelector":"8671d23b","id":5323,"implemented":false,"kind":"function","modifiers":[],"name":"rescue","nameLocation":"6114:6:19","nodeType":"FunctionDefinition","parameters":{"id":5321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5316,"mutability":"mutable","name":"recipient","nameLocation":"6139:9:19","nodeType":"VariableDeclaration","scope":5323,"src":"6131:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5315,"name":"address","nodeType":"ElementaryTypeName","src":"6131:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5318,"mutability":"mutable","name":"amount","nameLocation":"6167:6:19","nodeType":"VariableDeclaration","scope":5323,"src":"6159:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5317,"name":"uint256","nodeType":"ElementaryTypeName","src":"6159:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5320,"mutability":"mutable","name":"_token","nameLocation":"6192:6:19","nodeType":"VariableDeclaration","scope":5323,"src":"6184:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5319,"name":"address","nodeType":"ElementaryTypeName","src":"6184:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6120:85:19"},"returnParameters":{"id":5322,"nodeType":"ParameterList","parameters":[],"src":"6222:0:19"},"scope":5348,"src":"6105:118:19","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":5324,"nodeType":"StructuredDocumentation","src":"6231:262:19","text":" @notice Sets the rewards for successful revisions.\n @param _additionReward Reward to proposer per address successfully added to the list.\n @param _removalReward Reward to proposer per address successfully removed from the list."},"functionSelector":"654e51e7","id":5331,"implemented":false,"kind":"function","modifiers":[],"name":"setRewards","nameLocation":"6508:10:19","nodeType":"FunctionDefinition","parameters":{"id":5329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5326,"mutability":"mutable","name":"_additionReward","nameLocation":"6527:15:19","nodeType":"VariableDeclaration","scope":5331,"src":"6519:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5325,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5328,"mutability":"mutable","name":"_removalReward","nameLocation":"6552:14:19","nodeType":"VariableDeclaration","scope":5331,"src":"6544:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5327,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:49:19"},"returnParameters":{"id":5330,"nodeType":"ParameterList","parameters":[],"src":"6593:0:19"},"scope":5348,"src":"6499:95:19","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":5332,"nodeType":"StructuredDocumentation","src":"6602:164:19","text":" @notice Sets the bond amount for revisions.\n @param _bondAmount Amount of the bond token that will need to be paid for future proposals."},"functionSelector":"259bd920","id":5337,"implemented":false,"kind":"function","modifiers":[],"name":"setBond","nameLocation":"6781:7:19","nodeType":"FunctionDefinition","parameters":{"id":5335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5334,"mutability":"mutable","name":"_bondAmount","nameLocation":"6797:11:19","nodeType":"VariableDeclaration","scope":5337,"src":"6789:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5333,"name":"uint256","nodeType":"ElementaryTypeName","src":"6789:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6788:21:19"},"returnParameters":{"id":5336,"nodeType":"ParameterList","parameters":[],"src":"6826:0:19"},"scope":5348,"src":"6772:55:19","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":5338,"nodeType":"StructuredDocumentation","src":"6835:199:19","text":" @notice Sets the liveness for future revisions. This is the amount of delay before a proposal is approved by\n default.\n @param _liveness Liveness to set in seconds."},"functionSelector":"3c4432f1","id":5343,"implemented":false,"kind":"function","modifiers":[],"name":"setLiveness","nameLocation":"7049:11:19","nodeType":"FunctionDefinition","parameters":{"id":5341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5340,"mutability":"mutable","name":"_liveness","nameLocation":"7068:9:19","nodeType":"VariableDeclaration","scope":5343,"src":"7061:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5339,"name":"uint64","nodeType":"ElementaryTypeName","src":"7061:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"7060:18:19"},"returnParameters":{"id":5342,"nodeType":"ParameterList","parameters":[],"src":"7095:0:19"},"scope":5348,"src":"7040:56:19","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":5344,"nodeType":"StructuredDocumentation","src":"7104:250:19","text":" @notice This pulls in the most up-to-date Optimistic Oracle contract.\n @dev If a new OptimisticOracle is added and this is run between a revision's introduction and execution, the\n proposal will become unexecutable."},"functionSelector":"8a301adc","id":5347,"implemented":false,"kind":"function","modifiers":[],"name":"syncContracts","nameLocation":"7369:13:19","nodeType":"FunctionDefinition","parameters":{"id":5345,"nodeType":"ParameterList","parameters":[],"src":"7382:2:19"},"returnParameters":{"id":5346,"nodeType":"ParameterList","parameters":[],"src":"7399:0:19"},"scope":5348,"src":"7360:40:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":5349,"src":"457:6946:19","usedErrors":[]}],"src":"33:7372:19"},"id":19},"contracts/interfaces/DecentralistProxyFactoryInterface.sol":{"ast":{"absolutePath":"contracts/interfaces/DecentralistProxyFactoryInterface.sol","exportedSymbols":{"AddressWhitelistInterface":[3551],"DecentralistProxyFactoryInterface":[5418],"FinderInterface":[3622]},"id":5419,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5350,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"33:23:20"},{"absolutePath":"@uma/core/contracts/oracle/interfaces/FinderInterface.sol","file":"@uma/core/contracts/oracle/interfaces/FinderInterface.sol","id":5351,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5419,"sourceUnit":3623,"src":"60:67:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol","file":"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol","id":5352,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5419,"sourceUnit":3552,"src":"129:77:20","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"DecentralistProxyFactoryInterface","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":5418,"linearizedBaseContracts":[5418],"name":"DecentralistProxyFactoryInterface","nameLocation":"228:33:20","nodeType":"ContractDefinition","nodes":[{"functionSelector":"91152f10","id":5357,"implemented":false,"kind":"function","modifiers":[],"name":"minimumLiveness","nameLocation":"278:15:20","nodeType":"FunctionDefinition","parameters":{"id":5353,"nodeType":"ParameterList","parameters":[],"src":"293:2:20"},"returnParameters":{"id":5356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5357,"src":"327:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5354,"name":"uint64","nodeType":"ElementaryTypeName","src":"327:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"326:8:20"},"scope":5418,"src":"269:66:20","stateMutability":"view","virtual":true,"visibility":"external"},{"functionSelector":"99e7d056","id":5362,"implemented":false,"kind":"function","modifiers":[],"name":"implementationContract","nameLocation":"352:22:20","nodeType":"FunctionDefinition","parameters":{"id":5358,"nodeType":"ParameterList","parameters":[],"src":"374:2:20"},"returnParameters":{"id":5361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5362,"src":"408:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5359,"name":"address","nodeType":"ElementaryTypeName","src":"408:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"407:9:20"},"scope":5418,"src":"343:74:20","stateMutability":"view","virtual":true,"visibility":"external"},{"functionSelector":"61437f88","id":5368,"implemented":false,"kind":"function","modifiers":[],"name":"allClones","nameLocation":"434:9:20","nodeType":"FunctionDefinition","parameters":{"id":5363,"nodeType":"ParameterList","parameters":[],"src":"443:2:20"},"returnParameters":{"id":5367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5368,"src":"477:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5364,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5365,"nodeType":"ArrayTypeName","src":"477:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"476:18:20"},"scope":5418,"src":"425:70:20","stateMutability":"view","virtual":true,"visibility":"external"},{"functionSelector":"b9a3c84c","id":5374,"implemented":false,"kind":"function","modifiers":[],"name":"finder","nameLocation":"512:6:20","nodeType":"FunctionDefinition","parameters":{"id":5369,"nodeType":"ParameterList","parameters":[],"src":"518:2:20"},"returnParameters":{"id":5373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5374,"src":"552:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"},"typeName":{"id":5371,"nodeType":"UserDefinedTypeName","pathNode":{"id":5370,"name":"FinderInterface","nameLocations":["552:15:20"],"nodeType":"IdentifierPath","referencedDeclaration":3622,"src":"552:15:20"},"referencedDeclaration":3622,"src":"552:15:20","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3622","typeString":"contract FinderInterface"}},"visibility":"internal"}],"src":"551:17:20"},"scope":5418,"src":"503:66:20","stateMutability":"view","virtual":true,"visibility":"external"},{"functionSelector":"e4ee614a","id":5380,"implemented":false,"kind":"function","modifiers":[],"name":"collateralWhitelist","nameLocation":"586:19:20","nodeType":"FunctionDefinition","parameters":{"id":5375,"nodeType":"ParameterList","parameters":[],"src":"605:2:20"},"returnParameters":{"id":5379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5380,"src":"666:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AddressWhitelistInterface_$3551","typeString":"contract AddressWhitelistInterface"},"typeName":{"id":5377,"nodeType":"UserDefinedTypeName","pathNode":{"id":5376,"name":"AddressWhitelistInterface","nameLocations":["666:25:20"],"nodeType":"IdentifierPath","referencedDeclaration":3551,"src":"666:25:20"},"referencedDeclaration":3551,"src":"666:25:20","typeDescriptions":{"typeIdentifier":"t_contract$_AddressWhitelistInterface_$3551","typeString":"contract AddressWhitelistInterface"}},"visibility":"internal"}],"src":"665:27:20"},"scope":5418,"src":"577:116:20","stateMutability":"view","virtual":true,"visibility":"external"},{"anonymous":false,"eventSelector":"cc1e9c890bc4f4943c457abb8d17f97703b9f7144e1f4a69e50c6e4988ef38b7","id":5384,"name":"NewClone","nameLocation":"707:8:20","nodeType":"EventDefinition","parameters":{"id":5383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5382,"indexed":false,"mutability":"mutable","name":"_clone","nameLocation":"724:6:20","nodeType":"VariableDeclaration","scope":5384,"src":"716:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5381,"name":"address","nodeType":"ElementaryTypeName","src":"716:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"715:16:20"},"src":"701:31:20"},{"documentation":{"id":5385,"nodeType":"StructuredDocumentation","src":"740:1002:20","text":" @notice Creates a new decentraList smart contract.\n @param _listCriteria Criteria for what addresses should be included on the list. Can be on-chain text or a link to IPFS.\n @param _title Short title for the list.\n @param _token The address of the token currency used for this contract. Must be on UMA's collateral whitelist.\n @param _bondAmount Additional bond required, beyond the final fee.\n @param _additionReward Reward per address successfully added to the list, paid by the contract to the proposer.\n @param _removalReward Reward per address successfully removed from the list, paid by the contract to the proposer.\n @param _liveness The period, in seconds, in which a proposal can be disputed. Must be greater than 8 hours.\n @param _owner Owner of the contract can remove funds from the contract and adjust bondAmount, rewards and liveness.\n Set to the 0 address to make the contract a non-managed public good."},"functionSelector":"3ca9482d","id":5406,"implemented":false,"kind":"function","modifiers":[],"name":"createNewDecentralist","nameLocation":"1757:21:20","nodeType":"FunctionDefinition","parameters":{"id":5402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5387,"mutability":"mutable","name":"_listCriteria","nameLocation":"1802:13:20","nodeType":"VariableDeclaration","scope":5406,"src":"1789:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5386,"name":"bytes","nodeType":"ElementaryTypeName","src":"1789:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5389,"mutability":"mutable","name":"_title","nameLocation":"1840:6:20","nodeType":"VariableDeclaration","scope":5406,"src":"1826:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5388,"name":"string","nodeType":"ElementaryTypeName","src":"1826:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5391,"mutability":"mutable","name":"_token","nameLocation":"1865:6:20","nodeType":"VariableDeclaration","scope":5406,"src":"1857:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5390,"name":"address","nodeType":"ElementaryTypeName","src":"1857:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5393,"mutability":"mutable","name":"_bondAmount","nameLocation":"1890:11:20","nodeType":"VariableDeclaration","scope":5406,"src":"1882:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5392,"name":"uint256","nodeType":"ElementaryTypeName","src":"1882:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5395,"mutability":"mutable","name":"_additionReward","nameLocation":"1920:15:20","nodeType":"VariableDeclaration","scope":5406,"src":"1912:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5394,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5397,"mutability":"mutable","name":"_removalReward","nameLocation":"1954:14:20","nodeType":"VariableDeclaration","scope":5406,"src":"1946:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5396,"name":"uint256","nodeType":"ElementaryTypeName","src":"1946:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5399,"mutability":"mutable","name":"_liveness","nameLocation":"1986:9:20","nodeType":"VariableDeclaration","scope":5406,"src":"1979:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5398,"name":"uint64","nodeType":"ElementaryTypeName","src":"1979:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5401,"mutability":"mutable","name":"_owner","nameLocation":"2014:6:20","nodeType":"VariableDeclaration","scope":5406,"src":"2006:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5400,"name":"address","nodeType":"ElementaryTypeName","src":"2006:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1778:249:20"},"returnParameters":{"id":5405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"instance","nameLocation":"2061:8:20","nodeType":"VariableDeclaration","scope":5406,"src":"2053:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5403,"name":"address","nodeType":"ElementaryTypeName","src":"2053:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2052:18:20"},"scope":5418,"src":"1748:323:20","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":5407,"nodeType":"StructuredDocumentation","src":"2079:59:20","text":" @notice Returns all instances created."},"functionSelector":"27831ee0","id":5413,"implemented":false,"kind":"function","modifiers":[],"name":"getAllClones","nameLocation":"2153:12:20","nodeType":"FunctionDefinition","parameters":{"id":5408,"nodeType":"ParameterList","parameters":[],"src":"2165:2:20"},"returnParameters":{"id":5412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5413,"src":"2199:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5409,"name":"address","nodeType":"ElementaryTypeName","src":"2199:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5410,"nodeType":"ArrayTypeName","src":"2199:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2198:18:20"},"scope":5418,"src":"2144:73:20","stateMutability":"view","virtual":true,"visibility":"external"},{"documentation":{"id":5414,"nodeType":"StructuredDocumentation","src":"2225:254:20","text":" @notice This pulls in the most up-to-date collateral whitelist.\n @dev If a new OptimisticOracle is added and this function is run between a list revision's proposal and execution,\n the proposal will become unexecutable."},"functionSelector":"2177a32b","id":5417,"implemented":false,"kind":"function","modifiers":[],"name":"syncWhitelist","nameLocation":"2494:13:20","nodeType":"FunctionDefinition","parameters":{"id":5415,"nodeType":"ParameterList","parameters":[],"src":"2507:2:20"},"returnParameters":{"id":5416,"nodeType":"ParameterList","parameters":[],"src":"2524:0:20"},"scope":5418,"src":"2485:40:20","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":5419,"src":"210:2318:20","usedErrors":[]}],"src":"33:2497:20"},"id":20}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/Clones.sol":{"Clones":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c10ccb493210193ee20dedbf9d00a7e922c734b47be4f9b48db0839c118c13464736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C LT 0xCC 0xB4 SWAP4 0x21 ADD SWAP4 0xEE KECCAK256 0xDE 0xDB 0xF9 0xD0 EXP PUSH31 0x922C734B47BE4F9B48DB0839C118C13464736F6C6343000811003300000000 ","sourceMap":"755:3281:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;755:3281:1;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c10ccb493210193ee20dedbf9d00a7e922c734b47be4f9b48db0839c118c13464736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C LT 0xCC 0xB4 SWAP4 0x21 ADD SWAP4 0xEE KECCAK256 0xDE 0xDB 0xF9 0xD0 EXP PUSH31 0x922C734B47BE4F9B48DB0839C118C13464736F6C6343000811003300000000 ","sourceMap":"755:3281:1:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7\",\"dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3798da9e212cd00a7cda94ddb5a9721171a718e89c500d8901f810e0e37fa74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93f9c584e4b29dce1c7520b63d19f34c684f5ea972b5d04323a132059851004\",\"dweb:/ipfs/QmajmiA7BsarS63FMoP5PcBS4mqVGoiJ7xZ3wJVonYNTHC\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205ca1547f9b6f4d20c00bcb3bf01ebe481a0ca0ff3bb3141b6bfeb6b9122f6b0c64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C LOG1 SLOAD PUSH32 0x9B6F4D20C00BCB3BF01EBE481A0CA0FF3BB3141B6BFEB6B9122F6B0C64736F6C PUSH4 0x43000811 STOP CALLER ","sourceMap":"707:3748:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205ca1547f9b6f4d20c00bcb3bf01ebe481a0ca0ff3bb3141b6bfeb6b9122f6b0c64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C LOG1 SLOAD PUSH32 0x9B6F4D20C00BCB3BF01EBE481A0CA0FF3BB3141B6BFEB6B9122F6B0C64736F6C PUSH4 0x43000811 STOP CALLER ","sourceMap":"707:3748:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f40a175b448084ce07d604c08f032b7884c2a87c3236c1505964aa2fda994a2464736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL EXP OR JUMPDEST DIFFICULTY DUP1 DUP5 0xCE SMOD 0xD6 DIV 0xC0 DUP16 SUB 0x2B PUSH25 0x84C2A87C3236C1505964AA2FDA994A2464736F6C6343000811 STOP CALLER ","sourceMap":"194:8964:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f40a175b448084ce07d604c08f032b7884c2a87c3236c1505964aa2fda994a2464736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL EXP OR JUMPDEST DIFFICULTY DUP1 DUP5 0xCE SMOD 0xD6 DIV 0xC0 DUP16 SUB 0x2B PUSH25 0x84C2A87C3236C1505964AA2FDA994A2464736F6C6343000811 STOP CALLER ","sourceMap":"194:8964:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3e74c59a1e495e947b391fd22ff9e3a9325e1dc6f95b675dda12f13154926cf64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xE7 0x4C MSIZE LOG1 0xE4 SWAP6 0xE9 SELFBALANCE 0xB3 SWAP2 REVERT 0x22 SELFDESTRUCT SWAP15 GASPRICE SWAP4 0x25 0xE1 0xDC PUSH16 0x95B675DDA12F13154926CF64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"482:6300:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3e74c59a1e495e947b391fd22ff9e3a9325e1dc6f95b675dda12f13154926cf64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xE7 0x4C MSIZE LOG1 0xE4 SWAP6 0xE9 SELFBALANCE 0xB3 SWAP2 REVERT 0x22 SELFDESTRUCT SWAP15 GASPRICE SWAP4 0x25 0xE1 0xDC PUSH16 0x95B675DDA12F13154926CF64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"482:6300:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedSafeMath.sol":{"SignedSafeMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df9a303903f9c030f30f24af0b7a44d284db6481c2bb871175053512c1847e0564736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF SWAP11 ADDRESS CODECOPY SUB 0xF9 0xC0 ADDRESS RETURN 0xF 0x24 0xAF SIGNEXTEND PUSH27 0x44D284DB6481C2BB871175053512C1847E0564736F6C6343000811 STOP CALLER ","sourceMap":"316:1399:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;316:1399:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df9a303903f9c030f30f24af0b7a44d284db6481c2bb871175053512c1847e0564736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF SWAP11 ADDRESS CODECOPY SUB 0xF9 0xC0 ADDRESS RETURN 0xF 0x24 0xAF SIGNEXTEND PUSH27 0x44D284DB6481C2BB871175053512C1847E0564736F6C6343000811 STOP CALLER ","sourceMap":"316:1399:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SignedSafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":\"SignedSafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce\",\"dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB\"]}},\"version\":1}"}},"@uma/core/contracts/common/implementation/AncillaryData.sol":{"AncillaryData":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203668797d12be792932d1729e06cb1bce676a8c091e4c0e04badc856988bd586864736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH9 0x797D12BE792932D172 SWAP15 MOD 0xCB SHL 0xCE PUSH8 0x6A8C091E4C0E04BA 0xDC DUP6 PUSH10 0x88BD586864736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"663:6562:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;663:6562:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203668797d12be792932d1729e06cb1bce676a8c091e4c0e04badc856988bd586864736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH9 0x797D12BE792932D172 SWAP15 MOD 0xCB SHL 0xCE PUSH8 0x6A8C091E4C0E04BA 0xDC DUP6 PUSH10 0x88BD586864736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"663:6562:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for encoding and decoding ancillary data for DVM price requests.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"We assume that on-chain ancillary data can be formatted directly from bytes to utf8 encoding via web3.utils.hexToUtf8, and that clients will parse the utf8-encoded ancillary data as a comma-delimitted key-value dictionary. Therefore, this library provides internal methods that aid appending to ancillary data from Solidity smart contracts. More details on UMA's ancillary data guidelines below: https://docs.google.com/document/d/1zhKKjgY1BupBGPPrY_WOJvui0B6DMcd-xDR8-9-SPDw/edit\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/common/implementation/AncillaryData.sol\":\"AncillaryData\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@uma/core/contracts/common/implementation/AncillaryData.sol\":{\"keccak256\":\"0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a\",\"dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2\"]}},\"version\":1}"}},"@uma/core/contracts/common/implementation/FixedPoint.sol":{"FixedPoint":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b94ffb831cbdb7edbebffdca054155dda34bb48902a353bca0a1c15c04cc3d0e64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0x4F 0xFB DUP4 SHR 0xBD 0xB7 0xED 0xBE 0xBF REVERT 0xCA SDIV COINBASE SSTORE 0xDD LOG3 0x4B 0xB4 DUP10 MUL LOG3 MSTORE8 0xBC LOG0 LOG1 0xC1 0x5C DIV 0xCC RETURNDATASIZE 0xE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"252:28526:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;252:28526:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b94ffb831cbdb7edbebffdca054155dda34bb48902a353bca0a1c15c04cc3d0e64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0x4F 0xFB DUP4 SHR 0xBD 0xB7 0xED 0xBE 0xBF REVERT 0xCA SDIV COINBASE SSTORE 0xDD LOG3 0x4B 0xB4 DUP10 MUL LOG3 MSTORE8 0xBC LOG0 LOG1 0xC1 0x5C DIV 0xCC RETURNDATASIZE 0xE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"252:28526:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for fixed point arithmetic on uints\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/common/implementation/FixedPoint.sol\":\"FixedPoint\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce\",\"dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB\"]},\"@uma/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663\",\"dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT\"]}},\"version\":1}"}},"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol":{"AddressWhitelistInterface":{"abi":[{"inputs":[{"internalType":"address","name":"newElement","type":"address"}],"name":"addToWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getWhitelist","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newElement","type":"address"}],"name":"isOnWhitelist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newElement","type":"address"}],"name":"removeFromWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addToWhitelist(address)":"e43252d7","getWhitelist()":"d01f63f5","isOnWhitelist(address)":"3a3ab672","removeFromWhitelist(address)":"8ab1d681"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newElement\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWhitelist\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newElement\",\"type\":\"address\"}],\"name\":\"isOnWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newElement\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol\":\"AddressWhitelistInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol\":{\"keccak256\":\"0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533\",\"dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei\"]}},\"version\":1}"}},"@uma/core/contracts/oracle/implementation/Constants.sol":{"OptimisticOracleConstraints":{"abi":[{"inputs":[],"name":"ancillaryBytesLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6088610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063c371dda7146038575b600080fd5b604061200081565b60405190815260200160405180910390f3fea2646970667358221220ba8466043de59826f7abd2791e34be49ec7d521a9c9d999baeb6c2afae1ec0f664736f6c63430008110033","opcodes":"PUSH1 0x88 PUSH2 0x38 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC371DDA7 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 PUSH2 0x2000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA DUP5 PUSH7 0x43DE59826F7AB 0xD2 PUSH26 0x1E34BE49EC7D521A9C9D999BAEB6C2AFAE1EC0F664736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1164:531:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1164:531:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ancillaryBytesLimit_3601":{"entryPoint":null,"id":3601,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:201:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"123:76:21","statements":[{"nodeType":"YulAssignment","src":"133:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"145:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"156:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"141:3:21"},"nodeType":"YulFunctionCall","src":"141:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"133:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"175:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"186:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"168:6:21"},"nodeType":"YulFunctionCall","src":"168:25:21"},"nodeType":"YulExpressionStatement","src":"168:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"92:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"103:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"114:4:21","type":""}],"src":"14:185:21"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063c371dda7146038575b600080fd5b604061200081565b60405190815260200160405180910390f3fea2646970667358221220ba8466043de59826f7abd2791e34be49ec7d521a9c9d999baeb6c2afae1ec0f664736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC371DDA7 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 PUSH2 0x2000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA DUP5 PUSH7 0x43DE59826F7AB 0xD2 PUSH26 0x1E34BE49EC7D521A9C9D999BAEB6C2AFAE1EC0F664736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1164:531:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;1642:50;;1688:4;1642:50;;;;;168:25:21;;;156:2;141:18;1642:50:13;;;;;;"},"methodIdentifiers":{"ancillaryBytesLimit()":"c371dda7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ancillaryBytesLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Commonly re-used values for contracts associated with the OptimisticOracle.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/oracle/implementation/Constants.sol\":\"OptimisticOracleConstraints\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@uma/core/contracts/oracle/implementation/Constants.sol\":{\"keccak256\":\"0xda68bfe488310f86be9423666bbb1025a7dfa8494df73914da91abb8ff6cb774\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7dbf823c0a519d9db56b26abaaf75cbff73c2094583cdf50f7025c0ed23f8072\",\"dweb:/ipfs/Qmey1e83re5NPbyijqbLUJJm5z5fdtcqpzVaxu75988XD1\"]}},\"version\":1}"},"OracleInterfaces":{"abi":[{"inputs":[],"name":"Bridge","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ChildMessenger","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CollateralWhitelist","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FinancialContractsAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GenericHandler","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"IdentifierWhitelist","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OptimisticOracle","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OptimisticOracleV2","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"Oracle","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OracleHub","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OracleSpoke","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"Registry","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SkinnyOptimisticOracle","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"Store","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"61036361003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100f45760003560e01c80634f4a180b116100965780637608ea2f116100705780637608ea2f146102915780637db9743b146102b85780638adca47f146102df578063f24a534e1461030657600080fd5b80634f4a180b1461021c578063598dd097146102435780635fa2ef101461026a57600080fd5b80632a71e5b3116100d25780632a71e5b31461018057806342e90c33146101a75780634596ac9b146101ce578063473e7ccd146101f557600080fd5b8063079b6c63146100f95780631a0fbfb3146101325780631a4dbd1c14610159575b600080fd5b6101207f47656e6572696348616e646c657200000000000000000000000000000000000081565b60405190815260200160405180910390f35b6101207f4368696c644d657373656e67657200000000000000000000000000000000000081565b6101207f4f7074696d69737469634f7261636c650000000000000000000000000000000081565b6101207f46696e616e6369616c436f6e74726163747341646d696e00000000000000000081565b6101207f53746f726500000000000000000000000000000000000000000000000000000081565b6101207f536b696e6e794f7074696d69737469634f7261636c650000000000000000000081565b6101207f4f7074696d69737469634f7261636c655632000000000000000000000000000081565b6101207f4964656e74696669657257686974656c6973740000000000000000000000000081565b6101207f436f6c6c61746572616c57686974656c6973740000000000000000000000000081565b6101207f427269646765000000000000000000000000000000000000000000000000000081565b6101207f4f7261636c65487562000000000000000000000000000000000000000000000081565b6101207f526567697374727900000000000000000000000000000000000000000000000081565b6101207f4f7261636c6553706f6b6500000000000000000000000000000000000000000081565b6101207f4f7261636c6500000000000000000000000000000000000000000000000000008156fea26469706673582212200c311b78bece46cb0566e3f5ab3633f5cf28cbdd4750a2816d47cb62c37f298b64736f6c63430008110033","opcodes":"PUSH2 0x363 PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F4A180B GT PUSH2 0x96 JUMPI DUP1 PUSH4 0x7608EA2F GT PUSH2 0x70 JUMPI DUP1 PUSH4 0x7608EA2F EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x7DB9743B EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x8ADCA47F EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xF24A534E EQ PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F4A180B EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x598DD097 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x5FA2EF10 EQ PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2A71E5B3 GT PUSH2 0xD2 JUMPI DUP1 PUSH4 0x2A71E5B3 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x42E90C33 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x4596AC9B EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x473E7CCD EQ PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x79B6C63 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x1A0FBFB3 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x1A4DBD1C EQ PUSH2 0x159 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x120 PUSH32 0x47656E6572696348616E646C6572000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH32 0x4368696C644D657373656E676572000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x4F7074696D69737469634F7261636C6500000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x46696E616E6369616C436F6E74726163747341646D696E000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x53746F7265000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x536B696E6E794F7074696D69737469634F7261636C6500000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x4F7074696D69737469634F7261636C6556320000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x4964656E74696669657257686974656C69737400000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x436F6C6C61746572616C57686974656C69737400000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x4272696467650000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x4F7261636C654875620000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x5265676973747279000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x4F7261636C6553706F6B65000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x4F7261636C650000000000000000000000000000000000000000000000000000 DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC BALANCE SHL PUSH25 0xBECE46CB0566E3F5AB3633F5CF28CBDD4750A2816D47CB62C3 PUSH32 0x298B64736F6C6343000811003300000000000000000000000000000000000000 ","sourceMap":"170:898:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;170:898:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@Bridge_3581":{"entryPoint":null,"id":3581,"parameterSlots":0,"returnSlots":0},"@ChildMessenger_3590":{"entryPoint":null,"id":3590,"parameterSlots":0,"returnSlots":0},"@CollateralWhitelist_3572":{"entryPoint":null,"id":3572,"parameterSlots":0,"returnSlots":0},"@FinancialContractsAdmin_3566":{"entryPoint":null,"id":3566,"parameterSlots":0,"returnSlots":0},"@GenericHandler_3584":{"entryPoint":null,"id":3584,"parameterSlots":0,"returnSlots":0},"@IdentifierWhitelist_3560":{"entryPoint":null,"id":3560,"parameterSlots":0,"returnSlots":0},"@OptimisticOracleV2_3578":{"entryPoint":null,"id":3578,"parameterSlots":0,"returnSlots":0},"@OptimisticOracle_3575":{"entryPoint":null,"id":3575,"parameterSlots":0,"returnSlots":0},"@OracleHub_3593":{"entryPoint":null,"id":3593,"parameterSlots":0,"returnSlots":0},"@OracleSpoke_3596":{"entryPoint":null,"id":3596,"parameterSlots":0,"returnSlots":0},"@Oracle_3557":{"entryPoint":null,"id":3557,"parameterSlots":0,"returnSlots":0},"@Registry_3569":{"entryPoint":null,"id":3569,"parameterSlots":0,"returnSlots":0},"@SkinnyOptimisticOracle_3587":{"entryPoint":null,"id":3587,"parameterSlots":0,"returnSlots":0},"@Store_3563":{"entryPoint":null,"id":3563,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:201:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"123:76:21","statements":[{"nodeType":"YulAssignment","src":"133:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"145:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"156:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"141:3:21"},"nodeType":"YulFunctionCall","src":"141:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"133:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"175:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"186:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"168:6:21"},"nodeType":"YulFunctionCall","src":"168:25:21"},"nodeType":"YulExpressionStatement","src":"168:25:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"92:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"103:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"114:4:21","type":""}],"src":"14:185:21"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600436106100f45760003560e01c80634f4a180b116100965780637608ea2f116100705780637608ea2f146102915780637db9743b146102b85780638adca47f146102df578063f24a534e1461030657600080fd5b80634f4a180b1461021c578063598dd097146102435780635fa2ef101461026a57600080fd5b80632a71e5b3116100d25780632a71e5b31461018057806342e90c33146101a75780634596ac9b146101ce578063473e7ccd146101f557600080fd5b8063079b6c63146100f95780631a0fbfb3146101325780631a4dbd1c14610159575b600080fd5b6101207f47656e6572696348616e646c657200000000000000000000000000000000000081565b60405190815260200160405180910390f35b6101207f4368696c644d657373656e67657200000000000000000000000000000000000081565b6101207f4f7074696d69737469634f7261636c650000000000000000000000000000000081565b6101207f46696e616e6369616c436f6e74726163747341646d696e00000000000000000081565b6101207f53746f726500000000000000000000000000000000000000000000000000000081565b6101207f536b696e6e794f7074696d69737469634f7261636c650000000000000000000081565b6101207f4f7074696d69737469634f7261636c655632000000000000000000000000000081565b6101207f4964656e74696669657257686974656c6973740000000000000000000000000081565b6101207f436f6c6c61746572616c57686974656c6973740000000000000000000000000081565b6101207f427269646765000000000000000000000000000000000000000000000000000081565b6101207f4f7261636c65487562000000000000000000000000000000000000000000000081565b6101207f526567697374727900000000000000000000000000000000000000000000000081565b6101207f4f7261636c6553706f6b6500000000000000000000000000000000000000000081565b6101207f4f7261636c6500000000000000000000000000000000000000000000000000008156fea26469706673582212200c311b78bece46cb0566e3f5ab3633f5cf28cbdd4750a2816d47cb62c37f298b64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F4A180B GT PUSH2 0x96 JUMPI DUP1 PUSH4 0x7608EA2F GT PUSH2 0x70 JUMPI DUP1 PUSH4 0x7608EA2F EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x7DB9743B EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x8ADCA47F EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xF24A534E EQ PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F4A180B EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x598DD097 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x5FA2EF10 EQ PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2A71E5B3 GT PUSH2 0xD2 JUMPI DUP1 PUSH4 0x2A71E5B3 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x42E90C33 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x4596AC9B EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x473E7CCD EQ PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x79B6C63 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x1A0FBFB3 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x1A4DBD1C EQ PUSH2 0x159 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x120 PUSH32 0x47656E6572696348616E646C6572000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH32 0x4368696C644D657373656E676572000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x4F7074696D69737469634F7261636C6500000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x46696E616E6369616C436F6E74726163747341646D696E000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x53746F7265000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x536B696E6E794F7074696D69737469634F7261636C6500000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x4F7074696D69737469634F7261636C6556320000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x4964656E74696669657257686974656C69737400000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x436F6C6C61746572616C57686974656C69737400000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x4272696467650000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x4F7261636C654875620000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x5265676973747279000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x4F7261636C6553706F6B65000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x120 PUSH32 0x4F7261636C650000000000000000000000000000000000000000000000000000 DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC BALANCE SHL PUSH25 0xBECE46CB0566E3F5AB3633F5CF28CBDD4750A2816D47CB62C3 PUSH32 0x298B64736F6C6343000811003300000000000000000000000000000000000000 ","sourceMap":"170:898:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;756:57;;;;;;;;168:25:21;;;156:2;141:18;756:57:13;;;;;;;898;;;;;571:61;;;;;366:75;;;;;321:39;;;;;819:73;;;;;638:65;;;;;248:67;;;;;498;;;;;709:41;;;;;961:47;;;;;447:45;;;;;1014:51;;;;;201:41;;;;"},"methodIdentifiers":{"Bridge()":"5fa2ef10","ChildMessenger()":"1a0fbfb3","CollateralWhitelist()":"598dd097","FinancialContractsAdmin()":"2a71e5b3","GenericHandler()":"079b6c63","IdentifierWhitelist()":"4f4a180b","OptimisticOracle()":"1a4dbd1c","OptimisticOracleV2()":"473e7ccd","Oracle()":"f24a534e","OracleHub()":"7608ea2f","OracleSpoke()":"8adca47f","Registry()":"7db9743b","SkinnyOptimisticOracle()":"4596ac9b","Store()":"42e90c33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Bridge\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ChildMessenger\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CollateralWhitelist\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FinancialContractsAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GenericHandler\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IdentifierWhitelist\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OptimisticOracle\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OptimisticOracleV2\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Oracle\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OracleHub\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OracleSpoke\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Registry\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SkinnyOptimisticOracle\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Store\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Stores common interface names used throughout the DVM by registration in the Finder.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/oracle/implementation/Constants.sol\":\"OracleInterfaces\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@uma/core/contracts/oracle/implementation/Constants.sol\":{\"keccak256\":\"0xda68bfe488310f86be9423666bbb1025a7dfa8494df73914da91abb8ff6cb774\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7dbf823c0a519d9db56b26abaaf75cbff73c2094583cdf50f7025c0ed23f8072\",\"dweb:/ipfs/Qmey1e83re5NPbyijqbLUJJm5z5fdtcqpzVaxu75988XD1\"]}},\"version\":1}"}},"@uma/core/contracts/oracle/interfaces/FinderInterface.sol":{"FinderInterface":{"abi":[{"inputs":[{"internalType":"bytes32","name":"interfaceName","type":"bytes32"},{"internalType":"address","name":"implementationAddress","type":"address"}],"name":"changeImplementationAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"interfaceName","type":"bytes32"}],"name":"getImplementationAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"changeImplementationAddress(bytes32,address)":"31f9665e","getImplementationAddress(bytes32)":"aafd5e40"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"name\":\"changeImplementationAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceName\",\"type\":\"bytes32\"}],\"name\":\"getImplementationAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Examples are the Oracle or Store interfaces.\",\"kind\":\"dev\",\"methods\":{\"changeImplementationAddress(bytes32,address)\":{\"params\":{\"implementationAddress\":\"address of the deployed contract that implements the interface.\",\"interfaceName\":\"bytes32 encoding of the interface name that is either changed or registered.\"}},\"getImplementationAddress(bytes32)\":{\"params\":{\"interfaceName\":\"queried interface.\"},\"returns\":{\"_0\":\"implementationAddress address of the deployed contract that implements the interface.\"}}},\"title\":\"Provides addresses of the live contracts implementing certain interfaces.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeImplementationAddress(bytes32,address)\":{\"notice\":\"Updates the address of the contract that implements `interfaceName`.\"},\"getImplementationAddress(bytes32)\":{\"notice\":\"Gets the address of the contract that implements the given `interfaceName`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/oracle/interfaces/FinderInterface.sol\":\"FinderInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@uma/core/contracts/oracle/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]}},\"version\":1}"}},"@uma/core/contracts/oracle/interfaces/OptimisticOracleV2Interface.sol":{"OptimisticOracleV2Interface":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"requester","type":"address"},{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":true,"internalType":"address","name":"disputer","type":"address"},{"indexed":false,"internalType":"bytes32","name":"identifier","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"indexed":false,"internalType":"int256","name":"proposedPrice","type":"int256"}],"name":"DisputePrice","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"requester","type":"address"},{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"bytes32","name":"identifier","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"indexed":false,"internalType":"int256","name":"proposedPrice","type":"int256"},{"indexed":false,"internalType":"uint256","name":"expirationTimestamp","type":"uint256"},{"indexed":false,"internalType":"address","name":"currency","type":"address"}],"name":"ProposePrice","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"requester","type":"address"},{"indexed":false,"internalType":"bytes32","name":"identifier","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"indexed":false,"internalType":"address","name":"currency","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"finalFee","type":"uint256"}],"name":"RequestPrice","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"requester","type":"address"},{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":true,"internalType":"address","name":"disputer","type":"address"},{"indexed":false,"internalType":"bytes32","name":"identifier","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"indexed":false,"internalType":"int256","name":"price","type":"int256"},{"indexed":false,"internalType":"uint256","name":"payout","type":"uint256"}],"name":"Settle","type":"event"},{"inputs":[],"name":"ancillaryBytesLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultLiveness","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"}],"name":"disputePrice","outputs":[{"internalType":"uint256","name":"totalBond","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"disputer","type":"address"},{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"}],"name":"disputePriceFor","outputs":[{"internalType":"uint256","name":"totalBond","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"finder","outputs":[{"internalType":"contract FinderInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"}],"name":"getRequest","outputs":[{"components":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"address","name":"disputer","type":"address"},{"internalType":"contract IERC20","name":"currency","type":"address"},{"internalType":"bool","name":"settled","type":"bool"},{"components":[{"internalType":"bool","name":"eventBased","type":"bool"},{"internalType":"bool","name":"refundOnDispute","type":"bool"},{"internalType":"bool","name":"callbackOnPriceProposed","type":"bool"},{"internalType":"bool","name":"callbackOnPriceDisputed","type":"bool"},{"internalType":"bool","name":"callbackOnPriceSettled","type":"bool"},{"internalType":"uint256","name":"bond","type":"uint256"},{"internalType":"uint256","name":"customLiveness","type":"uint256"}],"internalType":"struct OptimisticOracleV2Interface.RequestSettings","name":"requestSettings","type":"tuple"},{"internalType":"int256","name":"proposedPrice","type":"int256"},{"internalType":"int256","name":"resolvedPrice","type":"int256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"finalFee","type":"uint256"}],"internalType":"struct OptimisticOracleV2Interface.Request","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"}],"name":"getState","outputs":[{"internalType":"enum OptimisticOracleV2Interface.State","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"}],"name":"hasPrice","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"internalType":"int256","name":"proposedPrice","type":"int256"}],"name":"proposePrice","outputs":[{"internalType":"uint256","name":"totalBond","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"internalType":"int256","name":"proposedPrice","type":"int256"}],"name":"proposePriceFor","outputs":[{"internalType":"uint256","name":"totalBond","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"internalType":"contract IERC20","name":"currency","type":"address"},{"internalType":"uint256","name":"reward","type":"uint256"}],"name":"requestPrice","outputs":[{"internalType":"uint256","name":"totalBond","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"requests","outputs":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"address","name":"disputer","type":"address"},{"internalType":"contract IERC20","name":"currency","type":"address"},{"internalType":"bool","name":"settled","type":"bool"},{"components":[{"internalType":"bool","name":"eventBased","type":"bool"},{"internalType":"bool","name":"refundOnDispute","type":"bool"},{"internalType":"bool","name":"callbackOnPriceProposed","type":"bool"},{"internalType":"bool","name":"callbackOnPriceDisputed","type":"bool"},{"internalType":"bool","name":"callbackOnPriceSettled","type":"bool"},{"internalType":"uint256","name":"bond","type":"uint256"},{"internalType":"uint256","name":"customLiveness","type":"uint256"}],"internalType":"struct OptimisticOracleV2Interface.RequestSettings","name":"requestSettings","type":"tuple"},{"internalType":"int256","name":"proposedPrice","type":"int256"},{"internalType":"int256","name":"resolvedPrice","type":"int256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"finalFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"internalType":"uint256","name":"bond","type":"uint256"}],"name":"setBond","outputs":[{"internalType":"uint256","name":"totalBond","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"internalType":"bool","name":"callbackOnPriceProposed","type":"bool"},{"internalType":"bool","name":"callbackOnPriceDisputed","type":"bool"},{"internalType":"bool","name":"callbackOnPriceSettled","type":"bool"}],"name":"setCallbacks","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"internalType":"uint256","name":"customLiveness","type":"uint256"}],"name":"setCustomLiveness","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"}],"name":"setEventBased","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"}],"name":"setRefundOnDispute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"}],"name":"settle","outputs":[{"internalType":"uint256","name":"payout","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"}],"name":"settleAndGetPrice","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"internalType":"address","name":"requester","type":"address"}],"name":"stampAncillaryData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"ancillaryBytesLimit()":"c371dda7","defaultLiveness()":"fe4e1983","disputePrice(address,bytes32,uint256,bytes)":"fba7f1e3","disputePriceFor(address,address,bytes32,uint256,bytes)":"76c7823f","finder()":"b9a3c84c","getCurrentTime()":"29cb924d","getRequest(address,bytes32,uint256,bytes)":"a9904f9b","getState(address,bytes32,uint256,bytes)":"ba4b930c","hasPrice(address,bytes32,uint256,bytes)":"bc58ccaa","proposePrice(address,bytes32,uint256,bytes,int256)":"b8b4f908","proposePriceFor(address,address,bytes32,uint256,bytes,int256)":"7c82288f","requestPrice(bytes32,uint256,bytes,address,uint256)":"11df92f1","requests(bytes32)":"9d866985","setBond(bytes32,uint256,bytes,uint256)":"ad5a755a","setCallbacks(bytes32,uint256,bytes,bool,bool,bool)":"f327b075","setCustomLiveness(bytes32,uint256,bytes,uint256)":"473c45fe","setEventBased(bytes32,uint256,bytes)":"120698af","setRefundOnDispute(bytes32,uint256,bytes)":"91f58dcb","settle(address,bytes32,uint256,bytes)":"5e9a79a9","settleAndGetPrice(bytes32,uint256,bytes)":"53b59239","stampAncillaryData(bytes,address)":"af5d2f39"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"}],\"name\":\"DisputePrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expirationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"ProposePrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"}],\"name\":\"RequestPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"Settle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ancillaryBytesLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultLiveness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"disputePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"disputePriceFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finder\",\"outputs\":[{\"internalType\":\"contract FinderInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"getRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"eventBased\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refundOnDispute\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceProposed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceDisputed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceSettled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"internalType\":\"struct OptimisticOracleV2Interface.RequestSettings\",\"name\":\"requestSettings\",\"type\":\"tuple\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"resolvedPrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"}],\"internalType\":\"struct OptimisticOracleV2Interface.Request\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"getState\",\"outputs\":[{\"internalType\":\"enum OptimisticOracleV2Interface.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"hasPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"}],\"name\":\"proposePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"}],\"name\":\"proposePriceFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"requestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"requests\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"eventBased\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refundOnDispute\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceProposed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceDisputed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceSettled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"internalType\":\"struct OptimisticOracleV2Interface.RequestSettings\",\"name\":\"requestSettings\",\"type\":\"tuple\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"resolvedPrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"}],\"name\":\"setBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceProposed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceDisputed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceSettled\",\"type\":\"bool\"}],\"name\":\"setCallbacks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"name\":\"setCustomLiveness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"setEventBased\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"setRefundOnDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"settleAndGetPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"stampAncillaryData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.\",\"kind\":\"dev\",\"methods\":{\"disputePrice(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the disputer's wallet as a bond. The bond will be returned to the disputer once settled if the dispute was valid (the proposal was incorrect).\"}},\"disputePriceFor(address,address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"disputer\":\"address to set as the disputer.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the caller's wallet as a bond. The bond will be returned to the disputer once settled if the dispute was value (the proposal was incorrect).\"}},\"getRequest(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"_0\":\"the Request data structure.\"}},\"getState(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"_0\":\"the State enum value.\"}},\"hasPrice(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"_0\":\"true if price has resolved or settled, false otherwise.\"}},\"proposePrice(address,bytes32,uint256,bytes,int256)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"proposedPrice\":\"price being proposed.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the proposer's wallet as a bond. The bond will be returned to the proposer once settled if the proposal is correct.\"}},\"proposePriceFor(address,address,bytes32,uint256,bytes,int256)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"proposedPrice\":\"price being proposed.\",\"proposer\":\"address to set as the proposer.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the caller's wallet as a bond. The bond will be returned to the proposer once settled if the proposal is correct.\"}},\"requestPrice(bytes32,uint256,bytes,address,uint256)\":{\"params\":{\"ancillaryData\":\"ancillary data representing additional args being passed with the price request.\",\"currency\":\"ERC20 token used for payment of rewards and fees. Must be approved for use with the DVM.\",\"identifier\":\"price identifier being requested.\",\"reward\":\"reward offered to a successful proposer. Will be pulled from the caller. Note: this can be 0,               which could make sense if the contract requests and proposes the value in the same call or               provides its own reward system.\",\"timestamp\":\"timestamp of the price being requested.\"},\"returns\":{\"totalBond\":\"default bond (final fee) + final fee that the proposer and disputer will be required to pay. This can be changed with a subsequent call to setBond().\"}},\"setBond(bytes32,uint256,bytes,uint256)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"bond\":\"custom bond amount to set.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"new bond + final fee that the proposer and disputer will be required to pay. This can be changed again with a subsequent call to setBond().\"}},\"setCallbacks(bytes32,uint256,bytes,bool,bool,bool)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"callbackOnPriceDisputed\":\"whether to enable the callback onPriceDisputed.\",\"callbackOnPriceProposed\":\"whether to enable the callback onPriceProposed.\",\"callbackOnPriceSettled\":\"whether to enable the callback onPriceSettled.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"}},\"setCustomLiveness(bytes32,uint256,bytes,uint256)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"customLiveness\":\"new custom liveness.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"}},\"setEventBased(bytes32,uint256,bytes)\":{\"details\":\"Calling this method has a few impacts on the request: 1. The timestamp at which the request is evaluated is the time of the proposal, not the timestamp associated    with the request. 2. The proposer cannot propose the \\\"too early\\\" value (TOO_EARLY_RESPONSE). This is to ensure that a proposer who    prematurely proposes a response loses their bond. 3. RefundoOnDispute is automatically set, meaning disputes trigger the reward to be automatically refunded to    the requesting contract.\",\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"}},\"setRefundOnDispute(bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"}},\"settle(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"payout\":\"the amount that the \\\"winner\\\" (proposer or disputer) receives on settlement. This amount includes the returned bonds as well as additional rewards.\"}},\"settleAndGetPrice(bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"_0\":\"resolved price.\"}}},\"title\":\"Financial contract facing Oracle interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"disputePrice(address,bytes32,uint256,bytes)\":{\"notice\":\"Disputes a price value for an existing price request with an active proposal.\"},\"disputePriceFor(address,address,bytes32,uint256,bytes)\":{\"notice\":\"Disputes a price request with an active proposal on another address' behalf. Note: this address will receive any rewards that come from this dispute. However, any bonds are pulled from the caller.\"},\"getRequest(address,bytes32,uint256,bytes)\":{\"notice\":\"Gets the current data structure containing all information about a price request.\"},\"getState(address,bytes32,uint256,bytes)\":{\"notice\":\"Returns the state of a price request.\"},\"hasPrice(address,bytes32,uint256,bytes)\":{\"notice\":\"Checks if a given request has resolved or been settled (i.e the optimistic oracle has a price).\"},\"proposePrice(address,bytes32,uint256,bytes,int256)\":{\"notice\":\"Proposes a price value for an existing price request.\"},\"proposePriceFor(address,address,bytes32,uint256,bytes,int256)\":{\"notice\":\"Proposes a price value on another address' behalf. Note: this address will receive any rewards that come from this proposal. However, any bonds are pulled from the caller.\"},\"requestPrice(bytes32,uint256,bytes,address,uint256)\":{\"notice\":\"Requests a new price.\"},\"setBond(bytes32,uint256,bytes,uint256)\":{\"notice\":\"Set the proposal bond associated with a price request.\"},\"setCallbacks(bytes32,uint256,bytes,bool,bool,bool)\":{\"notice\":\"Sets which callbacks should be enabled for the request.\"},\"setCustomLiveness(bytes32,uint256,bytes,uint256)\":{\"notice\":\"Sets a custom liveness value for the request. Liveness is the amount of time a proposal must wait before being auto-resolved.\"},\"setEventBased(bytes32,uint256,bytes)\":{\"notice\":\"Sets the request to be an \\\"event-based\\\" request.\"},\"setRefundOnDispute(bytes32,uint256,bytes)\":{\"notice\":\"Sets the request to refund the reward if the proposal is disputed. This can help to \\\"hedge\\\" the caller in the event of a dispute-caused delay. Note: in the event of a dispute, the winner still receives the other's bond, so there is still profit to be made even if the reward is refunded.\"},\"settle(address,bytes32,uint256,bytes)\":{\"notice\":\"Attempts to settle an outstanding price request. Will revert if it isn't settleable.\"},\"settleAndGetPrice(bytes32,uint256,bytes)\":{\"notice\":\"Retrieves a price that was previously requested by a caller. Reverts if the request is not settled or settleable. Note: this method is not view so that this call may actually settle the price request if it hasn't been settled.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/oracle/interfaces/OptimisticOracleV2Interface.sol\":\"OptimisticOracleV2Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@uma/core/contracts/oracle/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"@uma/core/contracts/oracle/interfaces/OptimisticOracleV2Interface.sol\":{\"keccak256\":\"0xbfd9778b3e7c86e149cc140eda5e7210ef4a604cde576abaaa46c1289c5e334f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0f52a8f51cce3444937d477426077785bb68b22de41f39a6e4d58a6dc1c7ede5\",\"dweb:/ipfs/QmdNMPxBjhvcEoKNKdzLB8pA2uhqrZWHo8vcrhWeC9r6ro\"]}},\"version\":1}"}},"@uma/core/contracts/oracle/interfaces/StoreInterface.sol":{"StoreInterface":{"abi":[{"inputs":[{"internalType":"address","name":"currency","type":"address"}],"name":"computeFinalFee","outputs":[{"components":[{"internalType":"uint256","name":"rawValue","type":"uint256"}],"internalType":"struct FixedPoint.Unsigned","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"components":[{"internalType":"uint256","name":"rawValue","type":"uint256"}],"internalType":"struct FixedPoint.Unsigned","name":"pfc","type":"tuple"}],"name":"computeRegularFee","outputs":[{"components":[{"internalType":"uint256","name":"rawValue","type":"uint256"}],"internalType":"struct FixedPoint.Unsigned","name":"regularFee","type":"tuple"},{"components":[{"internalType":"uint256","name":"rawValue","type":"uint256"}],"internalType":"struct FixedPoint.Unsigned","name":"latePenalty","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"payOracleFees","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"erc20Address","type":"address"},{"components":[{"internalType":"uint256","name":"rawValue","type":"uint256"}],"internalType":"struct FixedPoint.Unsigned","name":"amount","type":"tuple"}],"name":"payOracleFeesErc20","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"computeFinalFee(address)":"5b97aadd","computeRegularFee(uint256,uint256,(uint256))":"74201feb","payOracleFees()":"cd3a9b24","payOracleFeesErc20(address,(uint256))":"8659d232"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"computeFinalFee\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"pfc\",\"type\":\"tuple\"}],\"name\":\"computeRegularFee\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"regularFee\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"latePenalty\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payOracleFees\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"amount\",\"type\":\"tuple\"}],\"name\":\"payOracleFeesErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"computeFinalFee(address)\":{\"params\":{\"currency\":\"token used to pay the final fee.\"},\"returns\":{\"_0\":\"finalFee amount due.\"}},\"computeRegularFee(uint256,uint256,(uint256))\":{\"params\":{\"endTime\":\"end time until which the fee is paid.\",\"pfc\":\"\\\"profit from corruption\\\", or the maximum amount of margin currency that a token sponsor could extract from the contract through corrupting the price feed in their favor.\",\"startTime\":\"defines the beginning time from which the fee is paid.\"},\"returns\":{\"latePenalty\":\"for paying the fee after the deadline.\",\"regularFee\":\"amount owed for the duration from start to end time for the given pfc.\"}},\"payOracleFees()\":{\"details\":\"To be used by contracts whose margin currency is ETH.\"},\"payOracleFeesErc20(address,(uint256))\":{\"details\":\"To be used if the margin currency is an ERC20 token rather than ETH.\",\"params\":{\"amount\":\"number of tokens to transfer. An approval for at least this amount must exist.\",\"erc20Address\":\"address of the ERC20 token used to pay the fee.\"}}},\"title\":\"Interface that allows financial contracts to pay oracle fees for their use of the system.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"computeFinalFee(address)\":{\"notice\":\"Computes the final oracle fees that a contract should pay at settlement.\"},\"computeRegularFee(uint256,uint256,(uint256))\":{\"notice\":\"Computes the regular oracle fees that a contract should pay for a period.\"},\"payOracleFees()\":{\"notice\":\"Pays Oracle fees in ETH to the store.\"},\"payOracleFeesErc20(address,(uint256))\":{\"notice\":\"Pays oracle fees in the margin currency, erc20Address, to the store.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/oracle/interfaces/StoreInterface.sol\":\"StoreInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce\",\"dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB\"]},\"@uma/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663\",\"dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT\"]},\"@uma/core/contracts/oracle/interfaces/StoreInterface.sol\":{\"keccak256\":\"0xbb73671684309c91ad5ef3da1474051d03f2e7d5882bed7f5c4317e5d4c768df\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://32386544d3119fd0187a8c4e8b01c739f508ab863faa04345cabc2544081f9e8\",\"dweb:/ipfs/QmYszDURs1x75rsejZkGt9zCkASXnJtufbNsL3XHe2eJPQ\"]}},\"version\":1}"}},"contracts/Decentralist.sol":{"Decentralist":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"bondAmount","type":"uint256"}],"name":"BondSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"liveness","type":"uint64"}],"name":"LivenessSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"revisionId","type":"uint256"},{"indexed":false,"internalType":"enum Decentralist.RevisionType","name":"revisionType","type":"uint8"}],"name":"RevisionApproved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"revisionId","type":"uint256"},{"indexed":false,"internalType":"enum Decentralist.RevisionType","name":"revisionType","type":"uint8"},{"indexed":false,"internalType":"address[]","name":"revisedAddresses","type":"address[]"}],"name":"RevisionExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"revisionId","type":"uint256"},{"indexed":false,"internalType":"enum Decentralist.RevisionType","name":"revisionType","type":"uint8"},{"indexed":false,"internalType":"address[]","name":"proposedAddresses","type":"address[]"}],"name":"RevisionProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"revisionId","type":"uint256"},{"indexed":false,"internalType":"enum Decentralist.RevisionType","name":"revisionType","type":"uint8"}],"name":"RevisionRejected","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"additionReward","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"removalReward","type":"uint256"}],"name":"RewardsSet","type":"event"},{"inputs":[],"name":"additionReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bondAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_revisionId","type":"uint256"},{"internalType":"address[]","name":"_addresses","type":"address[]"}],"name":"executeRevision","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"finder","outputs":[{"internalType":"contract FinderInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fixedAncillaryData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_finder","type":"address"},{"internalType":"bytes","name":"_listCriteria","type":"bytes"},{"internalType":"string","name":"_title","type":"string"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_bondAmount","type":"uint256"},{"internalType":"uint256","name":"_additionReward","type":"uint256"},{"internalType":"uint256","name":"_removalReward","type":"uint256"},{"internalType":"uint64","name":"_liveness","type":"uint64"},{"internalType":"uint64","name":"_minimumLiveness","type":"uint64"},{"internalType":"address","name":"_owner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liveness","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minimumLiveness","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"onList","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oracle","outputs":[{"internalType":"contract OptimisticOracleV2Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"internalType":"int256","name":"value","type":"int256"}],"name":"priceSettled","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum Decentralist.RevisionType","name":"_revisionType","type":"uint8"},{"internalType":"address[]","name":"_addresses","type":"address[]"}],"name":"proposeRevision","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"removalReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"_token","type":"address"}],"name":"rescue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"revisions","outputs":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"bytes32","name":"addressesHash","type":"bytes32"},{"internalType":"enum Decentralist.RevisionType","name":"revisionType","type":"uint8"},{"internalType":"enum Decentralist.Status","name":"status","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_bondAmount","type":"uint256"}],"name":"setBond","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_liveness","type":"uint64"}],"name":"setLiveness","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_additionReward","type":"uint256"},{"internalType":"uint256","name":"_removalReward","type":"uint256"}],"name":"setRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"store","outputs":[{"internalType":"contract StoreInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"syncContracts","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"title","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_msgSender_1098":{"entryPoint":null,"id":1098,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":31,"id":111,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061001a3361001f565b61007a565b600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b612c91806200008a6000396000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c80638671d23b116100ee578063af359fa211610097578063f2fde38b11610071578063f2fde38b146103d6578063f3fef3a3146103e9578063fc0c546a146103fc578063fee53ab61461040f57600080fd5b8063af359fa2146103a7578063b9a3c84c146103ba578063c207ec6e146103cd57600080fd5b80638dee967e116100c85780638dee967e1461036b57806391152f1014610374578063975057e71461039457600080fd5b80638671d23b146103395780638a301adc1461034c5780638da5cb5b1461035457600080fd5b8063654e51e71161015b578063715018a611610135578063715018a6146102dc57806374881462146102e45780637dc0d1d0146102f757806380f323a71461032257600080fd5b8063654e51e7146102695780636ad0690a1461027c5780636f626eb3146102a957600080fd5b80633c4432f11161018c5780633c4432f1146102395780634a79d50c1461024c5780635cae7fb51461026157600080fd5b806304cc1fd5146101b35780630ef486d1146101c8578063259bd92014610226575b600080fd5b6101c66101c136600461214f565b610422565b005b61020d6101d63660046121a7565b600e602052600090815260409020805460018201546002909201546001600160a01b03909116919060ff8082169161010090041684565b60405161021d94939291906121ea565b60405180910390f35b6101c66102343660046121a7565b6105bc565b6101c661024736600461224a565b6106c0565b6102546107ec565b60405161021d91906122bc565b61025461087a565b6101c66102773660046122cf565b610887565b600a546102909067ffffffffffffffff1681565b60405167ffffffffffffffff909116815260200161021d565b6102cc6102b7366004612311565b600f6020526000908152604090205460ff1681565b604051901515815260200161021d565b6101c66108d6565b6101c66102f236600461232e565b6108ea565b60015461030a906001600160a01b031681565b6040516001600160a01b03909116815260200161021d565b61032b60065481565b60405190815260200161021d565b6101c6610347366004612404565b610d01565b6101c6610d22565b6000546201000090046001600160a01b031661030a565b61032b60085481565b600a546102909068010000000000000000900467ffffffffffffffff1681565b60025461030a906001600160a01b031681565b6101c66103b5366004612492565b610e6f565b60035461030a906001600160a01b031681565b61032b60095481565b6101c66103e4366004612311565b611436565b6101c66103f73660046124eb565b6114c6565b60075461030a906001600160a01b031681565b6101c661041d366004612517565b6114e9565b6001546001600160a01b031633146104a75760405162461bcd60e51b815260206004820152602260248201527f6f6e6c79206f7261636c652063616e2063616c6c20746869732066756e63746960448201527f6f6e00000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600082846040516020016104bc92919061254a565b60408051601f1981840301815291815281516020928301206000818152600d909352912054909150670de0b6b3a763ffff198301610556576000818152600e602052604090819020600201805461020061ff0019821617909155905182917fe7dfc76d7cf4f1781646dbd1e7e5057b56a0145663bf2bc18d35b27cb3a65b3f916105499160ff169061256c565b60405180910390a26105b4565b6000818152600e602052604090819020600201805461030061ff0019821617909155905182917f02050decabc268ccd3e064662a50780070b8d1ab87047ec88bc8e2c29fe29cda916105ab9160ff169061256c565b60405180910390a25b505050505050565b6105c46119a0565b600254600754604051635b97aadd60e01b81526001600160a01b039182166004820152911690635b97aadd90602401602060405180830381865afa158015610610573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106349190612580565b518110156106845760405162461bcd60e51b815260206004820152601960248201527f626f6e64206d757374206265203e3d2066696e616c2066656500000000000000604482015260640161049e565b60068190556040518181527f1b44689fb73c0c9cdf591d534287488fc7959fd3647346821063a3e567ec9a99906020015b60405180910390a150565b6106c86119a0565b600a5467ffffffffffffffff68010000000000000000909104811690821610156107405760405162461bcd60e51b815260206004820152602360248201527f6c6976656e657373206d757374206265203e3d206d696e696d756d4c6976656e60448201526265737360e81b606482015260840161049e565b62093a808167ffffffffffffffff161061079c5760405162461bcd60e51b815260206004820152601e60248201527f6c6976656e657373206d757374206265203c207468616e2031207765656b0000604482015260640161049e565b600a805467ffffffffffffffff191667ffffffffffffffff83169081179091556040519081527fe5e4fe1ed302905b2067dd5af3ef8c34bc829afc97a52f95dd96d97d1ee4351b906020016106b5565b600580546107f9906125c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610825906125c2565b80156108725780601f1061084757610100808354040283529160200191610872565b820191906000526020600020905b81548152906001019060200180831161085557829003601f168201915b505050505081565b600480546107f9906125c2565b61088f6119a0565b6008829055600981905560408051838152602081018390527f067def216f0ef603ed8175482f6240978b15c9dc7efd8e1ac4bd3a743787a5b6910160405180910390a15050565b6108de6119a0565b6108e86000611a01565b565b600054610100900460ff161580801561090a5750600054600160ff909116105b806109245750303b158015610924575060005460ff166001145b6109965760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161049e565b6000805460ff1916600117905580156109b9576000805461ff0019166101001790555b600380546001600160a01b0319166001600160a01b038d161790556109dc610d22565b600780546001600160a01b0319166001600160a01b038a8116918217909255600254604051635b97aadd60e01b8152600481019290925290911690635b97aadd90602401602060405180830381865afa158015610a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a619190612580565b51600c55600254600754604051635b97aadd60e01b81526001600160a01b039182166004820152911690635b97aadd90602401602060405180830381865afa158015610ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad59190612580565b51871015610b255760405162461bcd60e51b815260206004820152601960248201527f626f6e64206d757374206265203e3d2066696e616c2066656500000000000000604482015260640161049e565b8267ffffffffffffffff168467ffffffffffffffff161015610b955760405162461bcd60e51b815260206004820152602360248201527f6c6976656e657373206d757374206265203e3d206d696e696d756d4c6976656e60448201526265737360e81b606482015260840161049e565b63bb7448008467ffffffffffffffff1610610bf25760405162461bcd60e51b815260206004820152601d60248201527f6c6976656e657373206d757374206265203c2035323030207765656b73000000604482015260640161049e565b89604051602001610c0391906125fc565b60405160208183030381529060405260049081610c2091906126fa565b506005610c2d8a826126fa565b50600780546001600160a01b038a166001600160a01b0319909116179055600687905560088690556009859055600a805467ffffffffffffffff85811668010000000000000000027fffffffffffffffffffffffffffffffff0000000000000000000000000000000090921690871617179055610ca982611a01565b6001600b558015610cf4576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b610d096119a0565b610d1d6001600160a01b0382168484611a72565b505050565b6003546040516302abf57960e61b81527f4f7074696d69737469634f7261636c655632000000000000000000000000000060048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa158015610d8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dae91906127ba565b600180546001600160a01b0319166001600160a01b039283161790556003546040516302abf57960e61b81527f53746f7265000000000000000000000000000000000000000000000000000000600482015291169063aafd5e4090602401602060405180830381865afa158015610e29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4d91906127ba565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60648110610ee45760405162461bcd60e51b8152602060048201526024808201527f616464726573736573206172726179206c656e677468206d757374206265203c60448201527f2031303000000000000000000000000000000000000000000000000000000000606482015260840161049e565b60408051808201909152601a81527f446f20616c6c2050726f706f736564204164647265737365732000000000000060208201526000846001811115610f2c57610f2c6121c0565b03610f545780604051602001610f4291906127d7565b60405160208183030381529060405290505b806004610f62600b54611b1b565b604051602001610f7493929190612818565b60408051601f198184030181529082905291504290600090610f9c908490849060200161254a565b60405160208183030381529060405280519060200120905060008585604051602001610fc9929190612928565b60408051601f198184030181529181528151602092830120600b80546000878152600d8652848120829055908152600e90945282842080546001600160a01b03191633179055805484528284206001908101839055905484529190922060020180549293508992909160ff1990911690838181111561104a5761104a6121c0565b0217905550600b546000908152600e6020526040808220600201805461ff00191661010017905560015460075491517f11df92f10000000000000000000000000000000000000000000000000000000081526001600160a01b03918216936311df92f1936110d6936c111150d1539514904b531254d5609a1b938a938c9392909216919060040161296a565b6020604051808303816000875af11580156110f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111991906129a6565b50600180546040517ff327b0750000000000000000000000000000000000000000000000000000000081526001600160a01b039091169163f327b0759161117d916c111150d1539514904b531254d5609a1b9188918a9160009182916004016129bf565b600060405180830381600087803b15801561119757600080fd5b505af11580156111ab573d6000803e3d6000fd5b5050600154600a546040517f473c45fe0000000000000000000000000000000000000000000000000000000081526001600160a01b03909216935063473c45fe925061121a916c111150d1539514904b531254d5609a1b9188918a9167ffffffffffffffff16906004016129fe565b600060405180830381600087803b15801561123457600080fd5b505af1158015611248573d6000803e3d6000fd5b50506001546006546040517fad5a755a000000000000000000000000000000000000000000000000000000008152600094506001600160a01b03909216925063ad5a755a916112af916c111150d1539514904b531254d5609a1b9189918b91600401612a38565b6020604051808303816000875af11580156112ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f291906129a6565b60075490915061130d906001600160a01b0316333084611c7b565b60015460075461132a916001600160a01b03918216911683611cd2565b6001546040517f7c82288f0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690637c82288f9061139590339030906c111150d1539514904b531254d5609a1b908a908c90670de0b6b3a764000090600401612a68565b6020604051808303816000875af11580156113b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d891906129a6565b50600b547f8479c2bee15eda418c90b95fa659dac53de3029ccab55c13c32641a566b4fd9289898960405161140f93929190612ab3565b60405180910390a2600b805490600061142783612b2b565b91905055505050505050505050565b61143e6119a0565b6001600160a01b0381166114ba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161049e565b6114c381611a01565b50565b6114ce6119a0565b6007546114e5906001600160a01b03168383611a72565b5050565b60026000848152600e6020526040902060020154610100900460ff166004811115611516576115166121c0565b146115635760405162461bcd60e51b815260206004820152601a60248201527f7265766973696f6e4964206973206e6f7420617070726f766564000000000000604482015260640161049e565b8181604051602001611576929190612928565b60408051601f1981840301815291815281516020928301206000868152600e909352912060010154146116115760405162461bcd60e51b815260206004820152602f60248201527f68617368206f662061646472657373657320213d207265766973696f6e49642760448201527f7320616464726573736573486173680000000000000000000000000000000000606482015260840161049e565b6000838152600e60205260408120600201805461040061ff00198216179091558190819060ff166001811115611649576116496121c0565b0361165b575050600954600090611691565b60016000868152600e602052604090206002015460ff166001811115611683576116836121c0565b036116915750506008546001905b6000808467ffffffffffffffff8111156116ad576116ad6120ac565b6040519080825280602002602001820160405280156116d6578160200160208202803683370190505b50905060005b858110156117fb57841515600f60008989858181106116fd576116fd612b44565b90506020020160208101906117129190612311565b6001600160a01b0316815260208101919091526040016000205460ff161515146117e95784600f600089898581811061174d5761174d612b44565b90506020020160208101906117629190612311565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905586868281811061179c5761179c612b44565b90506020020160208101906117b19190612311565b8282815181106117c3576117c3612b44565b6001600160a01b0390921660209283029190910190910152826117e581612b2b565b9350505b806117f381612b2b565b9150506116dc565b5060006118088385612b5a565b90508015611945576007546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015611858573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187c91906129a6565b101561191c576000888152600e6020526040908190205460075491516370a0823160e01b8152306004820152611917926001600160a01b039283169216906370a0823190602401602060405180830381865afa1580156118e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190491906129a6565b6007546001600160a01b03169190611a72565b611945565b6000888152600e6020526040902054600754611945916001600160a01b03918216911683611a72565b6000888152600e60205260409081902060020154905189917f80f45b4d1139e5fb60a132f4ca38836c7c42309e0a67a42d1a58450daf29253e9161198e9160ff16908690612b71565b60405180910390a25050505050505050565b6000546001600160a01b03620100009091041633146108e85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049e565b600080546001600160a01b03838116620100008181027fffffffffffffffffffff0000000000000000000000000000000000000000ffff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6040516001600160a01b038316602482015260448101829052610d1d9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611e20565b606081600003611b5e57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115611b885780611b7281612b2b565b9150611b819050600a83612bcf565b9150611b62565b60008167ffffffffffffffff811115611ba357611ba36120ac565b6040519080825280601f01601f191660200182016040528015611bcd576020820181803683370190505b509050815b8515611c7257611be3600182612bf1565b90506000611bf2600a88612bcf565b611bfd90600a612b5a565b611c079088612bf1565b611c12906030612c04565b905060008160f81b905080848481518110611c2f57611c2f612b44565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611c69600a89612bcf565b97505050611bd2565b50949350505050565b6040516001600160a01b0380851660248301528316604482015260648101829052611ccc9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611ab7565b50505050565b801580611d6557506040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611d3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6391906129a6565b155b611dd75760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161049e565b6040516001600160a01b038316602482015260448101829052610d1d9084907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611ab7565b6000611e75826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611f059092919063ffffffff16565b805190915015610d1d5780806020019051810190611e939190612c1d565b610d1d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161049e565b6060611f148484600085611f1c565b949350505050565b606082471015611f945760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161049e565b600080866001600160a01b03168587604051611fb09190612c3f565b60006040518083038185875af1925050503d8060008114611fed576040519150601f19603f3d011682016040523d82523d6000602084013e611ff2565b606091505b50915091506120038783838761200e565b979650505050505050565b6060831561207d578251600003612076576001600160a01b0385163b6120765760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161049e565b5081611f14565b611f1483838151156120925781518083602001fd5b8060405162461bcd60e51b815260040161049e91906122bc565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126120d357600080fd5b813567ffffffffffffffff808211156120ee576120ee6120ac565b604051601f8301601f19908116603f01168101908282118183101715612116576121166120ac565b8160405283815286602085880101111561212f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561216557600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561218a57600080fd5b612196878288016120c2565b949793965093946060013593505050565b6000602082840312156121b957600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600281106121e6576121e66121c0565b9052565b6001600160a01b0385168152602081018490526080810161220e60408301856121d6565b6005831061221e5761221e6121c0565b82606083015295945050505050565b803567ffffffffffffffff8116811461224557600080fd5b919050565b60006020828403121561225c57600080fd5b6122658261222d565b9392505050565b60005b8381101561228757818101518382015260200161226f565b50506000910152565b600081518084526122a881602086016020860161226c565b601f01601f19169290920160200192915050565b6020815260006122656020830184612290565b600080604083850312156122e257600080fd5b50508035926020909101359150565b6001600160a01b03811681146114c357600080fd5b8035612245816122f1565b60006020828403121561232357600080fd5b8135612265816122f1565b6000806000806000806000806000806101408b8d03121561234e57600080fd5b6123578b612306565b995060208b013567ffffffffffffffff8082111561237457600080fd5b6123808e838f016120c2565b9a5060408d013591508082111561239657600080fd5b506123a38d828e016120c2565b9850506123b260608c01612306565b965060808b0135955060a08b0135945060c08b013593506123d560e08c0161222d565b92506123e46101008c0161222d565b91506123f36101208c01612306565b90509295989b9194979a5092959850565b60008060006060848603121561241957600080fd5b8335612424816122f1565b925060208401359150604084013561243b816122f1565b809150509250925092565b60008083601f84011261245857600080fd5b50813567ffffffffffffffff81111561247057600080fd5b6020830191508360208260051b850101111561248b57600080fd5b9250929050565b6000806000604084860312156124a757600080fd5b8335600281106124b657600080fd5b9250602084013567ffffffffffffffff8111156124d257600080fd5b6124de86828701612446565b9497909650939450505050565b600080604083850312156124fe57600080fd5b8235612509816122f1565b946020939093013593505050565b60008060006040848603121561252c57600080fd5b83359250602084013567ffffffffffffffff8111156124d257600080fd5b6000835161255c81846020880161226c565b9190910191825250602001919050565b6020810161257a82846121d6565b92915050565b60006020828403121561259257600080fd5b6040516020810181811067ffffffffffffffff821117156125b5576125b56120ac565b6040529151825250919050565b600181811c908216806125d657607f821691505b6020821081036125f657634e487b7160e01b600052602260045260246000fd5b50919050565b7f6d65657420746865204c6973742043726974657269612061742074686520746981527f6d65206f662074686520707269636520726571756573743f204c69737420437260208201527f6974657269613a2000000000000000000000000000000000000000000000000060408201526000825161268081604885016020870161226c565b7f2e20446563656e7472612d4c697374205265766973696f6e204944203d2000006048939091019283015250606601919050565b601f821115610d1d57600081815260208120601f850160051c810160208610156126db5750805b601f850160051c820191505b818110156105b4578281556001016126e7565b815167ffffffffffffffff811115612714576127146120ac565b6127288161272284546125c2565b846126b4565b602080601f83116001811461275d57600084156127455750858301515b600019600386901b1c1916600185901b1785556105b4565b600085815260208120601f198616915b8281101561278c5788860151825594840194600190910190840161276d565b50858210156127aa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156127cc57600080fd5b8151612265816122f1565b600082516127e981846020870161226c565b7f6661696c20746f20000000000000000000000000000000000000000000000000920191825250600801919050565b60008451602061282b8285838a0161226c565b81840191506000865461283d816125c2565b60018281168015612855576001811461286a57612896565b60ff1984168752821515830287019450612896565b8a6000528560002060005b8481101561288e57815489820152908301908701612875565b505082870194505b50505050855192506128ab838284890161226c565b7f2e20466f7220646972656374696f6e7320746f2066696e64207468652050726f92019182527f706f736564204164647265737365732c2073656520496d706c656d656e746174908201527f696f6e2073656374696f6e206f6620554d49502d3136392e0000000000000000604082015260580195945050505050565b60008184825b8581101561295f578135612941816122f1565b6001600160a01b03168352602092830192919091019060010161292e565b509095945050505050565b85815284602082015260a06040820152600061298960a0830186612290565b6001600160a01b0394909416606083015250608001529392505050565b6000602082840312156129b857600080fd5b5051919050565b86815285602082015260c0604082015260006129de60c0830187612290565b9415156060830152509115156080830152151560a0909101529392505050565b848152836020820152608060408201526000612a1d6080830185612290565b905067ffffffffffffffff8316606083015295945050505050565b848152836020820152608060408201526000612a576080830185612290565b905082606083015295945050505050565b60006001600160a01b03808916835280881660208401525085604083015284606083015260c06080830152612aa060c0830185612290565b90508260a0830152979650505050505050565b600060408201612ac383876121d6565b60206040818501528185835260608501905086925060005b86811015612b09578335612aee816122f1565b6001600160a01b031682529282019290820190600101612adb565b50979650505050505050565b634e487b7160e01b600052601160045260246000fd5b600060018201612b3d57612b3d612b15565b5060010190565b634e487b7160e01b600052603260045260246000fd5b808202811582820484141761257a5761257a612b15565b600060408201612b8183866121d6565b6020604081850152818551808452606086019150828701935060005b81811015612bc25784516001600160a01b031683529383019391830191600101612b9d565b5090979650505050505050565b600082612bec57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561257a5761257a612b15565b60ff818116838216019081111561257a5761257a612b15565b600060208284031215612c2f57600080fd5b8151801515811461226557600080fd5b60008251612c5181846020870161226c565b919091019291505056fea26469706673582212204e5517719301b7b4c2152a69bc645d91bcbdb026c90647638e0faa0925b08d7d64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x7A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH3 0x10000 DUP2 DUP2 MUL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT DUP6 AND OR DUP6 SSTORE PUSH1 0x40 MLOAD SWAP4 DIV SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2C91 DUP1 PUSH3 0x8A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1AE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8671D23B GT PUSH2 0xEE JUMPI DUP1 PUSH4 0xAF359FA2 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xFEE53AB6 EQ PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAF359FA2 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0xB9A3C84C EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xC207EC6E EQ PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DEE967E GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x8DEE967E EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x91152F10 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x975057E7 EQ PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8671D23B EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x8A301ADC EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x654E51E7 GT PUSH2 0x15B JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x135 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x74881462 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x80F323A7 EQ PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x654E51E7 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x6AD0690A EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x6F626EB3 EQ PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C4432F1 GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x3C4432F1 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x4A79D50C EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x5CAE7FB5 EQ PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4CC1FD5 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xEF486D1 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x259BD920 EQ PUSH2 0x226 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C6 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x214F JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20D PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A7 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A7 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x224A JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x7EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x22BC JUMP JUMPDEST PUSH2 0x254 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x22CF JUMP JUMPDEST PUSH2 0x887 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x290 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21D JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21D JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x8D6 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x232E JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x30A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21D JUMP JUMPDEST PUSH2 0x32B PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21D JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x2404 JUMP JUMPDEST PUSH2 0xD01 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x30A JUMP JUMPDEST PUSH2 0x32B PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x290 SWAP1 PUSH9 0x10000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x30A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x3B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0xE6F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x30A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x32B PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2311 JUMP JUMPDEST PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x3F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x24EB JUMP JUMPDEST PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x30A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x2517 JUMP JUMPDEST PUSH2 0x14E9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206F7261636C652063616E2063616C6C20746869732066756E637469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BC SWAP3 SWAP2 SWAP1 PUSH2 0x254A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH8 0xDE0B6B3A763FFFF NOT DUP4 ADD PUSH2 0x556 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x200 PUSH2 0xFF00 NOT DUP3 AND OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH32 0xE7DFC76D7CF4F1781646DBD1E7E5057B56A0145663BF2BC18D35B27CB3A65B3F SWAP2 PUSH2 0x549 SWAP2 PUSH1 0xFF AND SWAP1 PUSH2 0x256C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x300 PUSH2 0xFF00 NOT DUP3 AND OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH32 0x2050DECABC268CCD3E064662A50780070B8D1AB87047EC88BC8E2C29FE29CDA SWAP2 PUSH2 0x5AB SWAP2 PUSH1 0xFF AND SWAP1 PUSH2 0x256C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5C4 PUSH2 0x19A0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5B97AADD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x5B97AADD SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x610 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x634 SWAP2 SWAP1 PUSH2 0x2580 JUMP JUMPDEST MLOAD DUP2 LT ISZERO PUSH2 0x684 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626F6E64206D757374206265203E3D2066696E616C2066656500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x1B44689FB73C0C9CDF591D534287488FC7959FD3647346821063A3E567EC9A99 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x6C8 PUSH2 0x19A0 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH9 0x10000000000000000 SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6976656E657373206D757374206265203E3D206D696E696D756D4C6976656E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49E JUMP JUMPDEST PUSH3 0x93A80 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6976656E657373206D757374206265203C207468616E2031207765656B0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xE5E4FE1ED302905B2067DD5AF3EF8C34BC829AFC97A52F95DD96D97D1EE4351B SWAP1 PUSH1 0x20 ADD PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x7F9 SWAP1 PUSH2 0x25C2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x825 SWAP1 PUSH2 0x25C2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x872 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x847 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x872 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x855 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x7F9 SWAP1 PUSH2 0x25C2 JUMP JUMPDEST PUSH2 0x88F PUSH2 0x19A0 JUMP JUMPDEST PUSH1 0x8 DUP3 SWAP1 SSTORE PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x67DEF216F0EF603ED8175482F6240978B15C9DC7EFD8E1AC4BD3A743787A5B6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x8DE PUSH2 0x19A0 JUMP JUMPDEST PUSH2 0x8E8 PUSH1 0x0 PUSH2 0x1A01 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x90A JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x924 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x924 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x996 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND OR SWAP1 SSTORE PUSH2 0x9DC PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5B97AADD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x5B97AADD SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA3D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA61 SWAP2 SWAP1 PUSH2 0x2580 JUMP JUMPDEST MLOAD PUSH1 0xC SSTORE PUSH1 0x2 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5B97AADD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x5B97AADD SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x2580 JUMP JUMPDEST MLOAD DUP8 LT ISZERO PUSH2 0xB25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626F6E64206D757374206265203E3D2066696E616C2066656500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49E JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0xB95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6976656E657373206D757374206265203E3D206D696E696D756D4C6976656E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49E JUMP JUMPDEST PUSH4 0xBB744800 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0xBF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6976656E657373206D757374206265203C2035323030207765656B73000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49E JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC03 SWAP2 SWAP1 PUSH2 0x25FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x4 SWAP1 DUP2 PUSH2 0xC20 SWAP2 SWAP1 PUSH2 0x26FA JUMP JUMPDEST POP PUSH1 0x5 PUSH2 0xC2D DUP11 DUP3 PUSH2 0x26FA JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x6 DUP8 SWAP1 SSTORE PUSH1 0x8 DUP7 SWAP1 SSTORE PUSH1 0x9 DUP6 SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH9 0x10000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 SWAP1 SWAP3 AND SWAP1 DUP8 AND OR OR SWAP1 SSTORE PUSH2 0xCA9 DUP3 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB SSTORE DUP1 ISZERO PUSH2 0xCF4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD09 PUSH2 0x19A0 JUMP JUMPDEST PUSH2 0xD1D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP5 DUP5 PUSH2 0x1A72 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2ABF579 PUSH1 0xE6 SHL DUP2 MSTORE PUSH32 0x4F7074696D69737469634F7261636C6556320000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAAFD5E40 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDAE SWAP2 SWAP1 PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2ABF579 PUSH1 0xE6 SHL DUP2 MSTORE PUSH32 0x53746F7265000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0xAAFD5E40 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE4D SWAP2 SWAP1 PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x64 DUP2 LT PUSH2 0xEE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x616464726573736573206172726179206C656E677468206D757374206265203C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2031303000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH32 0x446F20616C6C2050726F706F7365642041646472657373657320000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF2C JUMPI PUSH2 0xF2C PUSH2 0x21C0 JUMP JUMPDEST SUB PUSH2 0xF54 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF42 SWAP2 SWAP1 PUSH2 0x27D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP JUMPDEST DUP1 PUSH1 0x4 PUSH2 0xF62 PUSH1 0xB SLOAD PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF74 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2818 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE SWAP2 POP TIMESTAMP SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xF9C SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH1 0x20 ADD PUSH2 0x254A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFC9 SWAP3 SWAP2 SWAP1 PUSH2 0x2928 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0xB DUP1 SLOAD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xD DUP7 MSTORE DUP5 DUP2 KECCAK256 DUP3 SWAP1 SSTORE SWAP1 DUP2 MSTORE PUSH1 0xE SWAP1 SWAP5 MSTORE DUP3 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE DUP1 SLOAD DUP5 MSTORE DUP3 DUP5 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 SLOAD DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP10 SWAP3 SWAP1 SWAP2 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP1 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0x104A JUMPI PUSH2 0x104A PUSH2 0x21C0 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x7 SLOAD SWAP2 MLOAD PUSH32 0x11DF92F100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 PUSH4 0x11DF92F1 SWAP4 PUSH2 0x10D6 SWAP4 PUSH13 0x111150D1539514904B531254D5 PUSH1 0x9A SHL SWAP4 DUP11 SWAP4 DUP13 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x296A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1119 SWAP2 SWAP1 PUSH2 0x29A6 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xF327B07500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xF327B075 SWAP2 PUSH2 0x117D SWAP2 PUSH13 0x111150D1539514904B531254D5 PUSH1 0x9A SHL SWAP2 DUP9 SWAP2 DUP11 SWAP2 PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x4 ADD PUSH2 0x29BF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH32 0x473C45FE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP PUSH4 0x473C45FE SWAP3 POP PUSH2 0x121A SWAP2 PUSH13 0x111150D1539514904B531254D5 PUSH1 0x9A SHL SWAP2 DUP9 SWAP2 DUP11 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x4 ADD PUSH2 0x29FE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1248 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0xAD5A755A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 POP PUSH4 0xAD5A755A SWAP2 PUSH2 0x12AF SWAP2 PUSH13 0x111150D1539514904B531254D5 PUSH1 0x9A SHL SWAP2 DUP10 SWAP2 DUP12 SWAP2 PUSH1 0x4 ADD PUSH2 0x2A38 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12F2 SWAP2 SWAP1 PUSH2 0x29A6 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0x130D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x1C7B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x7 SLOAD PUSH2 0x132A SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x7C82288F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x7C82288F SWAP1 PUSH2 0x1395 SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH13 0x111150D1539514904B531254D5 PUSH1 0x9A SHL SWAP1 DUP11 SWAP1 DUP13 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH1 0x4 ADD PUSH2 0x2A68 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D8 SWAP2 SWAP1 PUSH2 0x29A6 JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH32 0x8479C2BEE15EDA418C90B95FA659DAC53DE3029CCAB55C13C32641A566B4FD92 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x140F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0xB DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1427 DUP4 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x143E PUSH2 0x19A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x14BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49E JUMP JUMPDEST PUSH2 0x14C3 DUP2 PUSH2 0x1A01 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x14CE PUSH2 0x19A0 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x14E5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 PUSH2 0x1A72 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1516 JUMPI PUSH2 0x1516 PUSH2 0x21C0 JUMP JUMPDEST EQ PUSH2 0x1563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7265766973696F6E4964206973206E6F7420617070726F766564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49E JUMP JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1576 SWAP3 SWAP2 SWAP1 PUSH2 0x2928 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xE SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD EQ PUSH2 0x1611 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x68617368206F662061646472657373657320213D207265766973696F6E496427 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7320616464726573736573486173680000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x400 PUSH2 0xFF00 NOT DUP3 AND OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1649 JUMPI PUSH2 0x1649 PUSH2 0x21C0 JUMP JUMPDEST SUB PUSH2 0x165B JUMPI POP POP PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1683 JUMPI PUSH2 0x1683 PUSH2 0x21C0 JUMP JUMPDEST SUB PUSH2 0x1691 JUMPI POP POP PUSH1 0x8 SLOAD PUSH1 0x1 SWAP1 JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16AD JUMPI PUSH2 0x16AD PUSH2 0x20AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16D6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x17FB JUMPI DUP5 ISZERO ISZERO PUSH1 0xF PUSH1 0x0 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x16FD JUMPI PUSH2 0x16FD PUSH2 0x2B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1712 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x17E9 JUMPI DUP5 PUSH1 0xF PUSH1 0x0 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x174D JUMPI PUSH2 0x174D PUSH2 0x2B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1762 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0x179C JUMPI PUSH2 0x179C PUSH2 0x2B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x17B1 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x17C3 JUMPI PUSH2 0x17C3 PUSH2 0x2B44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP3 PUSH2 0x17E5 DUP2 PUSH2 0x2B2B JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0x17F3 DUP2 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16DC JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1808 DUP4 DUP6 PUSH2 0x2B5A JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1945 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1858 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x187C SWAP2 SWAP1 PUSH2 0x29A6 JUMP JUMPDEST LT ISZERO PUSH2 0x191C JUMPI PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD PUSH1 0x7 SLOAD SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x1917 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1904 SWAP2 SWAP1 PUSH2 0x29A6 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1A72 JUMP JUMPDEST PUSH2 0x1945 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x7 SLOAD PUSH2 0x1945 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1A72 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 MLOAD DUP10 SWAP2 PUSH32 0x80F45B4D1139E5FB60A132F4CA38836C7C42309E0A67A42D1A58450DAF29253E SWAP2 PUSH2 0x198E SWAP2 PUSH1 0xFF AND SWAP1 DUP7 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH3 0x10000 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x8E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH3 0x10000 DUP2 DUP2 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF DUP6 AND OR DUP6 SSTORE PUSH1 0x40 MLOAD SWAP4 DIV SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xD1D SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1E20 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x1B5E JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1B88 JUMPI DUP1 PUSH2 0x1B72 DUP2 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B81 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x2BCF JUMP JUMPDEST SWAP2 POP PUSH2 0x1B62 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BA3 JUMPI PUSH2 0x1BA3 PUSH2 0x20AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1BCD JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 JUMPDEST DUP6 ISZERO PUSH2 0x1C72 JUMPI PUSH2 0x1BE3 PUSH1 0x1 DUP3 PUSH2 0x2BF1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1BF2 PUSH1 0xA DUP9 PUSH2 0x2BCF JUMP JUMPDEST PUSH2 0x1BFD SWAP1 PUSH1 0xA PUSH2 0x2B5A JUMP JUMPDEST PUSH2 0x1C07 SWAP1 DUP9 PUSH2 0x2BF1 JUMP JUMPDEST PUSH2 0x1C12 SWAP1 PUSH1 0x30 PUSH2 0x2C04 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1C2F JUMPI PUSH2 0x1C2F PUSH2 0x2B44 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1C69 PUSH1 0xA DUP10 PUSH2 0x2BCF JUMP JUMPDEST SWAP8 POP POP POP PUSH2 0x1BD2 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1CCC SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD PUSH2 0x1AB7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x1D65 JUMPI POP PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D63 SWAP2 SWAP1 PUSH2 0x29A6 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1DD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xD1D SWAP1 DUP5 SWAP1 PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD PUSH2 0x1AB7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E75 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F05 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xD1D JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1E93 SWAP2 SWAP1 PUSH2 0x2C1D JUMP JUMPDEST PUSH2 0xD1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1F14 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1F1C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1F94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1FB0 SWAP2 SWAP1 PUSH2 0x2C3F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1FED JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FF2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2003 DUP8 DUP4 DUP4 DUP8 PUSH2 0x200E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x207D JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x2076 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x2076 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49E JUMP JUMPDEST POP DUP2 PUSH2 0x1F14 JUMP JUMPDEST PUSH2 0x1F14 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x2092 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x22BC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x20EE JUMPI PUSH2 0x20EE PUSH2 0x20AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2116 JUMPI PUSH2 0x2116 PUSH2 0x20AC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x212F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x218A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2196 DUP8 DUP3 DUP9 ADD PUSH2 0x20C2 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x21E6 JUMPI PUSH2 0x21E6 PUSH2 0x21C0 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x220E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x21D6 JUMP JUMPDEST PUSH1 0x5 DUP4 LT PUSH2 0x221E JUMPI PUSH2 0x221E PUSH2 0x21C0 JUMP JUMPDEST DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x225C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2265 DUP3 PUSH2 0x222D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2287 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x226F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x22A8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x226C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2265 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x14C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2245 DUP2 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2265 DUP2 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH2 0x234E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2357 DUP12 PUSH2 0x2306 JUMP JUMPDEST SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2380 DUP15 DUP4 DUP16 ADD PUSH2 0x20C2 JUMP JUMPDEST SWAP11 POP PUSH1 0x40 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A3 DUP14 DUP3 DUP15 ADD PUSH2 0x20C2 JUMP JUMPDEST SWAP9 POP POP PUSH2 0x23B2 PUSH1 0x60 DUP13 ADD PUSH2 0x2306 JUMP JUMPDEST SWAP7 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP6 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP4 POP PUSH2 0x23D5 PUSH1 0xE0 DUP13 ADD PUSH2 0x222D JUMP JUMPDEST SWAP3 POP PUSH2 0x23E4 PUSH2 0x100 DUP13 ADD PUSH2 0x222D JUMP JUMPDEST SWAP2 POP PUSH2 0x23F3 PUSH2 0x120 DUP13 ADD PUSH2 0x2306 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2424 DUP2 PUSH2 0x22F1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x243B DUP2 PUSH2 0x22F1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x248B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x24B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24DE DUP7 DUP3 DUP8 ADD PUSH2 0x2446 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2509 DUP2 PUSH2 0x22F1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x252C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x255C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x226C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x20 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x257A DUP3 DUP5 PUSH2 0x21D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x25B5 JUMPI PUSH2 0x25B5 PUSH2 0x20AC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x25D6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x25F6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D65657420746865204C69737420437269746572696120617420746865207469 DUP2 MSTORE PUSH32 0x6D65206F662074686520707269636520726571756573743F204C697374204372 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6974657269613A20000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x2680 DUP2 PUSH1 0x48 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x226C JUMP JUMPDEST PUSH32 0x2E20446563656E7472612D4C697374205265766973696F6E204944203D200000 PUSH1 0x48 SWAP4 SWAP1 SWAP2 ADD SWAP3 DUP4 ADD MSTORE POP PUSH1 0x66 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xD1D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x26DB JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5B4 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x26E7 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2714 JUMPI PUSH2 0x2714 PUSH2 0x20AC JUMP JUMPDEST PUSH2 0x2728 DUP2 PUSH2 0x2722 DUP5 SLOAD PUSH2 0x25C2 JUMP JUMPDEST DUP5 PUSH2 0x26B4 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x275D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2745 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x278C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x276D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x27AA JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2265 DUP2 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x27E9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x226C JUMP JUMPDEST PUSH32 0x6661696C20746F20000000000000000000000000000000000000000000000000 SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x8 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 PUSH2 0x282B DUP3 DUP6 DUP4 DUP11 ADD PUSH2 0x226C JUMP JUMPDEST DUP2 DUP5 ADD SWAP2 POP PUSH1 0x0 DUP7 SLOAD PUSH2 0x283D DUP2 PUSH2 0x25C2 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x2855 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x286A JUMPI PUSH2 0x2896 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x2896 JUMP JUMPDEST DUP11 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x288E JUMPI DUP2 SLOAD DUP10 DUP3 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP8 ADD PUSH2 0x2875 JUMP JUMPDEST POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP6 MLOAD SWAP3 POP PUSH2 0x28AB DUP4 DUP3 DUP5 DUP10 ADD PUSH2 0x226C JUMP JUMPDEST PUSH32 0x2E20466F7220646972656374696F6E7320746F2066696E64207468652050726F SWAP3 ADD SWAP2 DUP3 MSTORE PUSH32 0x706F736564204164647265737365732C2073656520496D706C656D656E746174 SWAP1 DUP3 ADD MSTORE PUSH32 0x696F6E2073656374696F6E206F6620554D49502D3136392E0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x58 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP3 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x295F JUMPI DUP2 CALLDATALOAD PUSH2 0x2941 DUP2 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x292E JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2989 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP7 DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x29DE PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x2290 JUMP JUMPDEST SWAP5 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE POP SWAP2 ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2A1D PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2290 JUMP JUMPDEST SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2A57 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2290 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP4 MSTORE DUP1 DUP9 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP6 PUSH1 0x40 DUP4 ADD MSTORE DUP5 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xC0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2AA0 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x2290 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD PUSH2 0x2AC3 DUP4 DUP8 PUSH2 0x21D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP6 ADD MSTORE DUP2 DUP6 DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 POP DUP7 SWAP3 POP PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2B09 JUMPI DUP4 CALLDATALOAD PUSH2 0x2AEE DUP2 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2ADB JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2B3D JUMPI PUSH2 0x2B3D PUSH2 0x2B15 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x257A JUMPI PUSH2 0x257A PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD PUSH2 0x2B81 DUP4 DUP7 PUSH2 0x21D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP2 POP DUP3 DUP8 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2BC2 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2B9D JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2BEC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x257A JUMPI PUSH2 0x257A PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x257A JUMPI PUSH2 0x257A PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2C51 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x226C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E SSTORE OR PUSH18 0x9301B7B4C2152A69BC645D91BCBDB026C906 SELFBALANCE PUSH4 0x8E0FAA09 0x25 0xB0 DUP14 PUSH30 0x64736F6C6343000811003300000000000000000000000000000000000000 ","sourceMap":"664:14828:17:-:0;;;;;;;;;;;;-1:-1:-1;936:32:0;719:10:7;936:18:0;:32::i;:::-;664:14828:17;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;2525:6;2541:17;;;-1:-1:-1;;;;;;2541:17:0;;;;;2573:40;;2525:6;;;;;;;2541:17;;2525:6;;2573:40;;;2496:124;2433:187;:::o;664:14828:17:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_callOptionalReturn_755":{"entryPoint":7712,"id":755,"parameterSlots":2,"returnSlots":0},"@_checkOwner_54":{"entryPoint":6560,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_1098":{"entryPoint":null,"id":1098,"parameterSlots":0,"returnSlots":1},"@_revert_1085":{"entryPoint":null,"id":1085,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":6657,"id":111,"parameterSlots":1,"returnSlots":0},"@additionReward_4120":{"entryPoint":null,"id":4120,"parameterSlots":0,"returnSlots":0},"@bondAmount_4115":{"entryPoint":null,"id":4115,"parameterSlots":0,"returnSlots":0},"@executeRevision_4775":{"entryPoint":5353,"id":4775,"parameterSlots":3,"returnSlots":0},"@finder_4109":{"entryPoint":null,"id":4109,"parameterSlots":0,"returnSlots":0},"@fixedAncillaryData_4111":{"entryPoint":2170,"id":4111,"parameterSlots":0,"returnSlots":0},"@functionCallWithValue_910":{"entryPoint":7964,"id":910,"parameterSlots":4,"returnSlots":1},"@functionCall_846":{"entryPoint":7941,"id":846,"parameterSlots":3,"returnSlots":1},"@initialize_4301":{"entryPoint":2282,"id":4301,"parameterSlots":10,"returnSlots":0},"@isContract_774":{"entryPoint":null,"id":774,"parameterSlots":1,"returnSlots":1},"@liveness_4124":{"entryPoint":null,"id":4124,"parameterSlots":0,"returnSlots":0},"@minimumLiveness_4126":{"entryPoint":null,"id":4126,"parameterSlots":0,"returnSlots":0},"@onList_4172":{"entryPoint":null,"id":4172,"parameterSlots":0,"returnSlots":0},"@oracle_4103":{"entryPoint":null,"id":4103,"parameterSlots":0,"returnSlots":0},"@owner_40":{"entryPoint":null,"id":40,"parameterSlots":0,"returnSlots":1},"@priceSettled_4577":{"entryPoint":1058,"id":4577,"parameterSlots":4,"returnSlots":0},"@proposeRevision_4499":{"entryPoint":3695,"id":4499,"parameterSlots":3,"returnSlots":0},"@removalReward_4122":{"entryPoint":null,"id":4122,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_68":{"entryPoint":2262,"id":68,"parameterSlots":0,"returnSlots":0},"@rescue_4814":{"entryPoint":3329,"id":4814,"parameterSlots":3,"returnSlots":0},"@revisions_4168":{"entryPoint":null,"id":4168,"parameterSlots":0,"returnSlots":0},"@safeApprove_577":{"entryPoint":7378,"id":577,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_533":{"entryPoint":7291,"id":533,"parameterSlots":4,"returnSlots":0},"@safeTransfer_507":{"entryPoint":6770,"id":507,"parameterSlots":3,"returnSlots":0},"@setBond_4869":{"entryPoint":1468,"id":4869,"parameterSlots":1,"returnSlots":0},"@setLiveness_4900":{"entryPoint":1728,"id":4900,"parameterSlots":1,"returnSlots":0},"@setRewards_4838":{"entryPoint":2183,"id":4838,"parameterSlots":2,"returnSlots":0},"@store_4106":{"entryPoint":null,"id":4106,"parameterSlots":0,"returnSlots":0},"@syncContracts_4925":{"entryPoint":3362,"id":4925,"parameterSlots":0,"returnSlots":0},"@title_4113":{"entryPoint":2028,"id":4113,"parameterSlots":0,"returnSlots":0},"@toUtf8BytesUint_1774":{"entryPoint":6939,"id":1774,"parameterSlots":1,"returnSlots":1},"@token_4118":{"entryPoint":null,"id":4118,"parameterSlots":0,"returnSlots":0},"@transferOwnership_91":{"entryPoint":5174,"id":91,"parameterSlots":1,"returnSlots":0},"@verifyCallResultFromTarget_1041":{"entryPoint":8206,"id":1041,"parameterSlots":4,"returnSlots":1},"@withdraw_4793":{"entryPoint":5318,"id":4793,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":8966,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_address_dyn_calldata":{"entryPoint":9286,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bytes":{"entryPoint":8386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8977,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":10170,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes_memory_ptrt_string_memory_ptrt_addresst_uint256t_uint256t_uint256t_uint64t_uint64t_address":{"entryPoint":9006,"id":null,"parameterSlots":2,"returnSlots":10},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":9451,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_address":{"entryPoint":9220,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":11293,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_uint256t_bytes_memory_ptrt_int256":{"entryPoint":8527,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_enum$_RevisionType_$4142t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":9362,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_struct$_Unsigned_$1911_memory_ptr_fromMemory":{"entryPoint":9600,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":8615,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":10662,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":9495,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":8911,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint64":{"entryPoint":8778,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint64":{"entryPoint":8749,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_enum_RevisionType":{"entryPoint":8662,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":8848,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10536,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11327,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_storage_t_bytes_memory_ptr_t_stringliteral_5a20166ea5c33b0f9b3fada118af4cd1ef04e3d947091a133e81dfe6e694e718__to_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10264,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr_t_stringliteral_047da255ce7159ed6ea6f856209867e957706bcd0e0dc74eaefbf996e670b8d8__to_t_bytes_memory_ptr_t_bytes8__nonPadded_inplace_fromStack_reversed":{"entryPoint":10199,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":9546,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_36e34da2609200b224ffe992330cd12047395e79cf84eab35610f71f5a93146d_t_bytes_memory_ptr_t_stringliteral_4ec96ac91c07cd49086380698a088473608ec0c63287fc444eb606330cd9ecca__to_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes30__nonPadded_inplace_fromStack_reversed":{"entryPoint":9724,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_bytes32_t_uint256_t_bytes_memory_ptr_t_int256__to_t_address_t_address_t_bytes32_t_uint256_t_bytes_memory_ptr_t_int256__fromStack_reversed":{"entryPoint":10856,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32_t_enum$_RevisionType_$4142_t_enum$_Status_$4148__to_t_address_t_bytes32_t_uint8_t_uint8__fromStack_reversed":{"entryPoint":8682,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_bytes_memory_ptr_t_bool_t_bool_t_bool__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_bool_t_bool_t_bool__fromStack_reversed":{"entryPoint":10687,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_bytes_memory_ptr_t_contract$_IERC20_$439_t_rational_0_by_1__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_address_t_uint256__fromStack_reversed":{"entryPoint":10602,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":10808,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint64__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":10750,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_FinderInterface_$3622__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$439__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_OptimisticOracleV2Interface_$3988__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_StoreInterface_$4033__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_RevisionType_$4142__to_t_uint8__fromStack_reversed":{"entryPoint":9580,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_RevisionType_$4142_t_array$_t_address_$dyn_calldata_ptr__to_t_uint8_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10931,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_enum$_RevisionType_$4142_t_array$_t_address_$dyn_memory_ptr__to_t_uint8_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":11121,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8892,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d075603a1671628c3e8a050324d6f35e6442672815a752252f84ad5249c9515__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_125dbae9684ccfc3c2f4c48a6488e7ec8ba5d4e141f94ac8e2819dadd3c071b1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_20de572be7a72693017907a48071b9a28c6697a396e1ff16cc2cb4c4947aaf75__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4bd8befa97d8e5bb2f31c0d006a597f1b9f8a94909e1a13c46b5fbe426615cab__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9b17c2a48ebae0023b062a31d39c1484bce50d2e042bc517d8fa71a29b7ae876__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bc85443d2dadaa51fb6c0191ee754fd345bd245be5525b0cd8d4d9df1755026b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dc1d0486d33821ede5d3b758f625d3ef0e5234b7b67b0141c6dff2128f35de56__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f3081d0d2e97ae829db742cd828461af7ab934373cdf728548dad1bc0eadb759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint8":{"entryPoint":11268,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":11215,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":11098,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11249,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":9908,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":9978,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":8812,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":9666,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":11051,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":11029,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":8640,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":11076,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8364,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":8945,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:32481:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"66:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:21"},"nodeType":"YulFunctionCall","src":"56:88:21"},"nodeType":"YulExpressionStatement","src":"56:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"160:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"163:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"153:6:21"},"nodeType":"YulFunctionCall","src":"153:15:21"},"nodeType":"YulExpressionStatement","src":"153:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"184:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"187:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"177:6:21"},"nodeType":"YulFunctionCall","src":"177:15:21"},"nodeType":"YulExpressionStatement","src":"177:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:184:21"},{"body":{"nodeType":"YulBlock","src":"255:666:21","statements":[{"body":{"nodeType":"YulBlock","src":"304:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"313:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"316:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"306:6:21"},"nodeType":"YulFunctionCall","src":"306:12:21"},"nodeType":"YulExpressionStatement","src":"306:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"283:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"291:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"279:3:21"},"nodeType":"YulFunctionCall","src":"279:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"298:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:21"},"nodeType":"YulFunctionCall","src":"275:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"268:6:21"},"nodeType":"YulFunctionCall","src":"268:35:21"},"nodeType":"YulIf","src":"265:55:21"},{"nodeType":"YulVariableDeclaration","src":"329:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"352:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"339:12:21"},"nodeType":"YulFunctionCall","src":"339:20:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"333:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"368:28:21","value":{"kind":"number","nodeType":"YulLiteral","src":"378:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"372:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"419:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"421:16:21"},"nodeType":"YulFunctionCall","src":"421:18:21"},"nodeType":"YulExpressionStatement","src":"421:18:21"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"411:2:21"},{"name":"_2","nodeType":"YulIdentifier","src":"415:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"408:2:21"},"nodeType":"YulFunctionCall","src":"408:10:21"},"nodeType":"YulIf","src":"405:36:21"},{"nodeType":"YulVariableDeclaration","src":"450:17:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"460:3:21"},"nodeType":"YulFunctionCall","src":"460:7:21"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"454:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"476:23:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"496:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"490:5:21"},"nodeType":"YulFunctionCall","src":"490:9:21"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"480:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"508:71:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"530:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"554:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"558:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"550:3:21"},"nodeType":"YulFunctionCall","src":"550:13:21"},{"name":"_3","nodeType":"YulIdentifier","src":"565:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"546:3:21"},"nodeType":"YulFunctionCall","src":"546:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"570:2:21","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"542:3:21"},"nodeType":"YulFunctionCall","src":"542:31:21"},{"name":"_3","nodeType":"YulIdentifier","src":"575:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"538:3:21"},"nodeType":"YulFunctionCall","src":"538:40:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"526:3:21"},"nodeType":"YulFunctionCall","src":"526:53:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"512:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"638:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"640:16:21"},"nodeType":"YulFunctionCall","src":"640:18:21"},"nodeType":"YulExpressionStatement","src":"640:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"597:10:21"},{"name":"_2","nodeType":"YulIdentifier","src":"609:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"594:2:21"},"nodeType":"YulFunctionCall","src":"594:18:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"617:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"629:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"614:2:21"},"nodeType":"YulFunctionCall","src":"614:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"591:2:21"},"nodeType":"YulFunctionCall","src":"591:46:21"},"nodeType":"YulIf","src":"588:72:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"676:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"680:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"669:6:21"},"nodeType":"YulFunctionCall","src":"669:22:21"},"nodeType":"YulExpressionStatement","src":"669:22:21"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"707:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"715:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"700:6:21"},"nodeType":"YulFunctionCall","src":"700:18:21"},"nodeType":"YulExpressionStatement","src":"700:18:21"},{"body":{"nodeType":"YulBlock","src":"766:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"775:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"778:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"768:6:21"},"nodeType":"YulFunctionCall","src":"768:12:21"},"nodeType":"YulExpressionStatement","src":"768:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"741:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"749:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"737:3:21"},"nodeType":"YulFunctionCall","src":"737:15:21"},{"kind":"number","nodeType":"YulLiteral","src":"754:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:21"},"nodeType":"YulFunctionCall","src":"733:26:21"},{"name":"end","nodeType":"YulIdentifier","src":"761:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"730:2:21"},"nodeType":"YulFunctionCall","src":"730:35:21"},"nodeType":"YulIf","src":"727:55:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"808:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"816:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:21"},"nodeType":"YulFunctionCall","src":"804:17:21"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"827:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"835:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"823:3:21"},"nodeType":"YulFunctionCall","src":"823:17:21"},{"name":"_1","nodeType":"YulIdentifier","src":"842:2:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"791:12:21"},"nodeType":"YulFunctionCall","src":"791:54:21"},"nodeType":"YulExpressionStatement","src":"791:54:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"869:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"877:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"865:3:21"},"nodeType":"YulFunctionCall","src":"865:15:21"},{"kind":"number","nodeType":"YulLiteral","src":"882:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"861:3:21"},"nodeType":"YulFunctionCall","src":"861:26:21"},{"kind":"number","nodeType":"YulLiteral","src":"889:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"854:6:21"},"nodeType":"YulFunctionCall","src":"854:37:21"},"nodeType":"YulExpressionStatement","src":"854:37:21"},{"nodeType":"YulAssignment","src":"900:15:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"909:6:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"900:5:21"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"229:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"237:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"245:5:21","type":""}],"src":"203:718:21"},{"body":{"nodeType":"YulBlock","src":"1055:395:21","statements":[{"body":{"nodeType":"YulBlock","src":"1102:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1111:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1114:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1104:6:21"},"nodeType":"YulFunctionCall","src":"1104:12:21"},"nodeType":"YulExpressionStatement","src":"1104:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1076:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1085:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1072:3:21"},"nodeType":"YulFunctionCall","src":"1072:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1097:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1068:3:21"},"nodeType":"YulFunctionCall","src":"1068:33:21"},"nodeType":"YulIf","src":"1065:53:21"},{"nodeType":"YulAssignment","src":"1127:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1150:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1137:12:21"},"nodeType":"YulFunctionCall","src":"1137:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1127:6:21"}]},{"nodeType":"YulAssignment","src":"1169:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1196:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1207:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1192:3:21"},"nodeType":"YulFunctionCall","src":"1192:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1179:12:21"},"nodeType":"YulFunctionCall","src":"1179:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1169:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1220:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1251:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1262:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1247:3:21"},"nodeType":"YulFunctionCall","src":"1247:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1234:12:21"},"nodeType":"YulFunctionCall","src":"1234:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1224:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1309:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1318:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1321:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1311:6:21"},"nodeType":"YulFunctionCall","src":"1311:12:21"},"nodeType":"YulExpressionStatement","src":"1311:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1281:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1289:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1278:2:21"},"nodeType":"YulFunctionCall","src":"1278:30:21"},"nodeType":"YulIf","src":"1275:50:21"},{"nodeType":"YulAssignment","src":"1334:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1365:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1376:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1361:3:21"},"nodeType":"YulFunctionCall","src":"1361:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1385:7:21"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"1344:16:21"},"nodeType":"YulFunctionCall","src":"1344:49:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1334:6:21"}]},{"nodeType":"YulAssignment","src":"1402:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1429:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1440:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1425:3:21"},"nodeType":"YulFunctionCall","src":"1425:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1412:12:21"},"nodeType":"YulFunctionCall","src":"1412:32:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1402:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_bytes_memory_ptrt_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"997:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1008:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1020:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1028:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1036:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1044:6:21","type":""}],"src":"926:524:21"},{"body":{"nodeType":"YulBlock","src":"1525:110:21","statements":[{"body":{"nodeType":"YulBlock","src":"1571:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1580:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1583:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1573:6:21"},"nodeType":"YulFunctionCall","src":"1573:12:21"},"nodeType":"YulExpressionStatement","src":"1573:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1546:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1555:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1542:3:21"},"nodeType":"YulFunctionCall","src":"1542:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1567:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1538:3:21"},"nodeType":"YulFunctionCall","src":"1538:32:21"},"nodeType":"YulIf","src":"1535:52:21"},{"nodeType":"YulAssignment","src":"1596:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1619:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1606:12:21"},"nodeType":"YulFunctionCall","src":"1606:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1596:6:21"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1491:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1502:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1514:6:21","type":""}],"src":"1455:180:21"},{"body":{"nodeType":"YulBlock","src":"1672:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1689:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1692:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1682:6:21"},"nodeType":"YulFunctionCall","src":"1682:88:21"},"nodeType":"YulExpressionStatement","src":"1682:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1786:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1789:4:21","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1779:6:21"},"nodeType":"YulFunctionCall","src":"1779:15:21"},"nodeType":"YulExpressionStatement","src":"1779:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1810:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1813:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1803:6:21"},"nodeType":"YulFunctionCall","src":"1803:15:21"},"nodeType":"YulExpressionStatement","src":"1803:15:21"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"1640:184:21"},{"body":{"nodeType":"YulBlock","src":"1883:89:21","statements":[{"body":{"nodeType":"YulBlock","src":"1917:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"1919:16:21"},"nodeType":"YulFunctionCall","src":"1919:18:21"},"nodeType":"YulExpressionStatement","src":"1919:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1906:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1913:1:21","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1903:2:21"},"nodeType":"YulFunctionCall","src":"1903:12:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1896:6:21"},"nodeType":"YulFunctionCall","src":"1896:20:21"},"nodeType":"YulIf","src":"1893:46:21"},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1955:3:21"},{"name":"value","nodeType":"YulIdentifier","src":"1960:5:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1948:6:21"},"nodeType":"YulFunctionCall","src":"1948:18:21"},"nodeType":"YulExpressionStatement","src":"1948:18:21"}]},"name":"abi_encode_enum_RevisionType","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1867:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1874:3:21","type":""}],"src":"1829:143:21"},{"body":{"nodeType":"YulBlock","src":"2186:333:21","statements":[{"nodeType":"YulAssignment","src":"2196:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2219:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2204:3:21"},"nodeType":"YulFunctionCall","src":"2204:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2196:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2239:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2254:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2262:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2250:3:21"},"nodeType":"YulFunctionCall","src":"2250:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2232:6:21"},"nodeType":"YulFunctionCall","src":"2232:74:21"},"nodeType":"YulExpressionStatement","src":"2232:74:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2326:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2337:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2322:3:21"},"nodeType":"YulFunctionCall","src":"2322:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"2342:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2315:6:21"},"nodeType":"YulFunctionCall","src":"2315:34:21"},"nodeType":"YulExpressionStatement","src":"2315:34:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2387:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2399:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2410:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2395:3:21"},"nodeType":"YulFunctionCall","src":"2395:18:21"}],"functionName":{"name":"abi_encode_enum_RevisionType","nodeType":"YulIdentifier","src":"2358:28:21"},"nodeType":"YulFunctionCall","src":"2358:56:21"},"nodeType":"YulExpressionStatement","src":"2358:56:21"},{"body":{"nodeType":"YulBlock","src":"2448:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"2450:16:21"},"nodeType":"YulFunctionCall","src":"2450:18:21"},"nodeType":"YulExpressionStatement","src":"2450:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"2436:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2444:1:21","type":"","value":"5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2433:2:21"},"nodeType":"YulFunctionCall","src":"2433:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2426:6:21"},"nodeType":"YulFunctionCall","src":"2426:21:21"},"nodeType":"YulIf","src":"2423:47:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2490:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2501:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2486:3:21"},"nodeType":"YulFunctionCall","src":"2486:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"2506:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2479:6:21"},"nodeType":"YulFunctionCall","src":"2479:34:21"},"nodeType":"YulExpressionStatement","src":"2479:34:21"}]},"name":"abi_encode_tuple_t_address_t_bytes32_t_enum$_RevisionType_$4142_t_enum$_Status_$4148__to_t_address_t_bytes32_t_uint8_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2131:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2142:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2150:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2158:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2166:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2177:4:21","type":""}],"src":"1977:542:21"},{"body":{"nodeType":"YulBlock","src":"2572:123:21","statements":[{"nodeType":"YulAssignment","src":"2582:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2604:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2591:12:21"},"nodeType":"YulFunctionCall","src":"2591:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2582:5:21"}]},{"body":{"nodeType":"YulBlock","src":"2673:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2682:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2685:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2675:6:21"},"nodeType":"YulFunctionCall","src":"2675:12:21"},"nodeType":"YulExpressionStatement","src":"2675:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2633:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2644:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2651:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2640:3:21"},"nodeType":"YulFunctionCall","src":"2640:30:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2630:2:21"},"nodeType":"YulFunctionCall","src":"2630:41:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2623:6:21"},"nodeType":"YulFunctionCall","src":"2623:49:21"},"nodeType":"YulIf","src":"2620:69:21"}]},"name":"abi_decode_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2551:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2562:5:21","type":""}],"src":"2524:171:21"},{"body":{"nodeType":"YulBlock","src":"2769:115:21","statements":[{"body":{"nodeType":"YulBlock","src":"2815:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2824:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2827:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2817:6:21"},"nodeType":"YulFunctionCall","src":"2817:12:21"},"nodeType":"YulExpressionStatement","src":"2817:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2790:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2799:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2786:3:21"},"nodeType":"YulFunctionCall","src":"2786:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2811:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2782:3:21"},"nodeType":"YulFunctionCall","src":"2782:32:21"},"nodeType":"YulIf","src":"2779:52:21"},{"nodeType":"YulAssignment","src":"2840:38:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2868:9:21"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"2850:17:21"},"nodeType":"YulFunctionCall","src":"2850:28:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2840:6:21"}]}]},"name":"abi_decode_tuple_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2735:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2746:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2758:6:21","type":""}],"src":"2700:184:21"},{"body":{"nodeType":"YulBlock","src":"2955:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2965:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2974:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2969:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3034:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3059:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"3064:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3055:3:21"},"nodeType":"YulFunctionCall","src":"3055:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3078:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"3083:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3074:3:21"},"nodeType":"YulFunctionCall","src":"3074:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3068:5:21"},"nodeType":"YulFunctionCall","src":"3068:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3048:6:21"},"nodeType":"YulFunctionCall","src":"3048:39:21"},"nodeType":"YulExpressionStatement","src":"3048:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2995:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"2998:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2992:2:21"},"nodeType":"YulFunctionCall","src":"2992:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3006:19:21","statements":[{"nodeType":"YulAssignment","src":"3008:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3017:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"3020:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:21"},"nodeType":"YulFunctionCall","src":"3013:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3008:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"2988:3:21","statements":[]},"src":"2984:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3117:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"3122:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3113:3:21"},"nodeType":"YulFunctionCall","src":"3113:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"3131:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3106:6:21"},"nodeType":"YulFunctionCall","src":"3106:27:21"},"nodeType":"YulExpressionStatement","src":"3106:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2933:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2938:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"2943:6:21","type":""}],"src":"2889:250:21"},{"body":{"nodeType":"YulBlock","src":"3194:221:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3204:26:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3224:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3218:5:21"},"nodeType":"YulFunctionCall","src":"3218:12:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3208:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3246:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"3251:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3239:6:21"},"nodeType":"YulFunctionCall","src":"3239:19:21"},"nodeType":"YulExpressionStatement","src":"3239:19:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3306:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3313:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3302:3:21"},"nodeType":"YulFunctionCall","src":"3302:16:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3324:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3329:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3320:3:21"},"nodeType":"YulFunctionCall","src":"3320:14:21"},{"name":"length","nodeType":"YulIdentifier","src":"3336:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"3267:34:21"},"nodeType":"YulFunctionCall","src":"3267:76:21"},"nodeType":"YulExpressionStatement","src":"3267:76:21"},{"nodeType":"YulAssignment","src":"3352:57:21","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3367:3:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3380:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3388:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3376:3:21"},"nodeType":"YulFunctionCall","src":"3376:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3397:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3393:3:21"},"nodeType":"YulFunctionCall","src":"3393:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3372:3:21"},"nodeType":"YulFunctionCall","src":"3372:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3363:3:21"},"nodeType":"YulFunctionCall","src":"3363:39:21"},{"kind":"number","nodeType":"YulLiteral","src":"3404:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3359:3:21"},"nodeType":"YulFunctionCall","src":"3359:50:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3352:3:21"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3171:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3178:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3186:3:21","type":""}],"src":"3144:271:21"},{"body":{"nodeType":"YulBlock","src":"3541:99:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3558:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3569:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3551:6:21"},"nodeType":"YulFunctionCall","src":"3551:21:21"},"nodeType":"YulExpressionStatement","src":"3551:21:21"},{"nodeType":"YulAssignment","src":"3581:53:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3607:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3619:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3630:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3615:3:21"},"nodeType":"YulFunctionCall","src":"3615:18:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3589:17:21"},"nodeType":"YulFunctionCall","src":"3589:45:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3581:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3510:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3521:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3532:4:21","type":""}],"src":"3420:220:21"},{"body":{"nodeType":"YulBlock","src":"3764:99:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3781:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3792:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3774:6:21"},"nodeType":"YulFunctionCall","src":"3774:21:21"},"nodeType":"YulExpressionStatement","src":"3774:21:21"},{"nodeType":"YulAssignment","src":"3804:53:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3830:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3842:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3853:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3838:3:21"},"nodeType":"YulFunctionCall","src":"3838:18:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3812:17:21"},"nodeType":"YulFunctionCall","src":"3812:45:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3804:4:21"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3733:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3744:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3755:4:21","type":""}],"src":"3645:218:21"},{"body":{"nodeType":"YulBlock","src":"3955:161:21","statements":[{"body":{"nodeType":"YulBlock","src":"4001:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4013:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4003:6:21"},"nodeType":"YulFunctionCall","src":"4003:12:21"},"nodeType":"YulExpressionStatement","src":"4003:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3976:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3985:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3972:3:21"},"nodeType":"YulFunctionCall","src":"3972:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3997:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3968:3:21"},"nodeType":"YulFunctionCall","src":"3968:32:21"},"nodeType":"YulIf","src":"3965:52:21"},{"nodeType":"YulAssignment","src":"4026:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4049:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4036:12:21"},"nodeType":"YulFunctionCall","src":"4036:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4026:6:21"}]},{"nodeType":"YulAssignment","src":"4068:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4095:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4106:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4091:3:21"},"nodeType":"YulFunctionCall","src":"4091:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4078:12:21"},"nodeType":"YulFunctionCall","src":"4078:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4068:6:21"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3913:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3924:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3936:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3944:6:21","type":""}],"src":"3868:248:21"},{"body":{"nodeType":"YulBlock","src":"4220:101:21","statements":[{"nodeType":"YulAssignment","src":"4230:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4242:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4253:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4238:3:21"},"nodeType":"YulFunctionCall","src":"4238:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4230:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4272:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4287:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4295:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4283:3:21"},"nodeType":"YulFunctionCall","src":"4283:31:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4265:6:21"},"nodeType":"YulFunctionCall","src":"4265:50:21"},"nodeType":"YulExpressionStatement","src":"4265:50:21"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4189:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4200:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4211:4:21","type":""}],"src":"4121:200:21"},{"body":{"nodeType":"YulBlock","src":"4371:109:21","statements":[{"body":{"nodeType":"YulBlock","src":"4458:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4467:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4470:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4460:6:21"},"nodeType":"YulFunctionCall","src":"4460:12:21"},"nodeType":"YulExpressionStatement","src":"4460:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4394:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4405:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4412:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:21"},"nodeType":"YulFunctionCall","src":"4401:54:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4391:2:21"},"nodeType":"YulFunctionCall","src":"4391:65:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4384:6:21"},"nodeType":"YulFunctionCall","src":"4384:73:21"},"nodeType":"YulIf","src":"4381:93:21"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4360:5:21","type":""}],"src":"4326:154:21"},{"body":{"nodeType":"YulBlock","src":"4534:85:21","statements":[{"nodeType":"YulAssignment","src":"4544:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4566:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4553:12:21"},"nodeType":"YulFunctionCall","src":"4553:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4544:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4607:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4582:24:21"},"nodeType":"YulFunctionCall","src":"4582:31:21"},"nodeType":"YulExpressionStatement","src":"4582:31:21"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4513:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4524:5:21","type":""}],"src":"4485:134:21"},{"body":{"nodeType":"YulBlock","src":"4694:177:21","statements":[{"body":{"nodeType":"YulBlock","src":"4740:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4749:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4752:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4742:6:21"},"nodeType":"YulFunctionCall","src":"4742:12:21"},"nodeType":"YulExpressionStatement","src":"4742:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4715:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4724:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4711:3:21"},"nodeType":"YulFunctionCall","src":"4711:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4736:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4707:3:21"},"nodeType":"YulFunctionCall","src":"4707:32:21"},"nodeType":"YulIf","src":"4704:52:21"},{"nodeType":"YulVariableDeclaration","src":"4765:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4791:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4778:12:21"},"nodeType":"YulFunctionCall","src":"4778:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4769:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4835:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4810:24:21"},"nodeType":"YulFunctionCall","src":"4810:31:21"},"nodeType":"YulExpressionStatement","src":"4810:31:21"},{"nodeType":"YulAssignment","src":"4850:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"4860:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4850:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4660:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4671:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4683:6:21","type":""}],"src":"4624:247:21"},{"body":{"nodeType":"YulBlock","src":"4971:92:21","statements":[{"nodeType":"YulAssignment","src":"4981:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4993:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5004:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4989:3:21"},"nodeType":"YulFunctionCall","src":"4989:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4981:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5023:9:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5048:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5041:6:21"},"nodeType":"YulFunctionCall","src":"5041:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5034:6:21"},"nodeType":"YulFunctionCall","src":"5034:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5016:6:21"},"nodeType":"YulFunctionCall","src":"5016:41:21"},"nodeType":"YulExpressionStatement","src":"5016:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4940:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4951:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4962:4:21","type":""}],"src":"4876:187:21"},{"body":{"nodeType":"YulBlock","src":"5308:877:21","statements":[{"body":{"nodeType":"YulBlock","src":"5355:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5364:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5367:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5357:6:21"},"nodeType":"YulFunctionCall","src":"5357:12:21"},"nodeType":"YulExpressionStatement","src":"5357:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5329:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5338:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5325:3:21"},"nodeType":"YulFunctionCall","src":"5325:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5350:3:21","type":"","value":"320"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5321:3:21"},"nodeType":"YulFunctionCall","src":"5321:33:21"},"nodeType":"YulIf","src":"5318:53:21"},{"nodeType":"YulAssignment","src":"5380:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5409:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5390:18:21"},"nodeType":"YulFunctionCall","src":"5390:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5380:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"5428:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5459:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5470:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5455:3:21"},"nodeType":"YulFunctionCall","src":"5455:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5442:12:21"},"nodeType":"YulFunctionCall","src":"5442:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5432:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5483:28:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5493:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5487:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5538:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5547:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5550:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5540:6:21"},"nodeType":"YulFunctionCall","src":"5540:12:21"},"nodeType":"YulExpressionStatement","src":"5540:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5526:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"5534:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5523:2:21"},"nodeType":"YulFunctionCall","src":"5523:14:21"},"nodeType":"YulIf","src":"5520:34:21"},{"nodeType":"YulAssignment","src":"5563:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5594:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5605:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5590:3:21"},"nodeType":"YulFunctionCall","src":"5590:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5614:7:21"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"5573:16:21"},"nodeType":"YulFunctionCall","src":"5573:49:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5563:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"5631:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5664:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5675:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5660:3:21"},"nodeType":"YulFunctionCall","src":"5660:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5647:12:21"},"nodeType":"YulFunctionCall","src":"5647:32:21"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5635:8:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5708:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5717:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5720:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5710:6:21"},"nodeType":"YulFunctionCall","src":"5710:12:21"},"nodeType":"YulExpressionStatement","src":"5710:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"5694:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"5704:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5691:2:21"},"nodeType":"YulFunctionCall","src":"5691:16:21"},"nodeType":"YulIf","src":"5688:36:21"},{"nodeType":"YulAssignment","src":"5733:61:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5764:9:21"},{"name":"offset_1","nodeType":"YulIdentifier","src":"5775:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5760:3:21"},"nodeType":"YulFunctionCall","src":"5760:24:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5786:7:21"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"5743:16:21"},"nodeType":"YulFunctionCall","src":"5743:51:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5733:6:21"}]},{"nodeType":"YulAssignment","src":"5803:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5836:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5847:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5832:3:21"},"nodeType":"YulFunctionCall","src":"5832:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5813:18:21"},"nodeType":"YulFunctionCall","src":"5813:38:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5803:6:21"}]},{"nodeType":"YulAssignment","src":"5860:43:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5887:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5898:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5883:3:21"},"nodeType":"YulFunctionCall","src":"5883:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5870:12:21"},"nodeType":"YulFunctionCall","src":"5870:33:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5860:6:21"}]},{"nodeType":"YulAssignment","src":"5912:43:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5939:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5950:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5935:3:21"},"nodeType":"YulFunctionCall","src":"5935:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5922:12:21"},"nodeType":"YulFunctionCall","src":"5922:33:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"5912:6:21"}]},{"nodeType":"YulAssignment","src":"5964:43:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5991:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6002:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5987:3:21"},"nodeType":"YulFunctionCall","src":"5987:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5974:12:21"},"nodeType":"YulFunctionCall","src":"5974:33:21"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"5964:6:21"}]},{"nodeType":"YulAssignment","src":"6016:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6048:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6059:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6044:3:21"},"nodeType":"YulFunctionCall","src":"6044:19:21"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"6026:17:21"},"nodeType":"YulFunctionCall","src":"6026:38:21"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"6016:6:21"}]},{"nodeType":"YulAssignment","src":"6073:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6105:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6116:3:21","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6101:3:21"},"nodeType":"YulFunctionCall","src":"6101:19:21"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"6083:17:21"},"nodeType":"YulFunctionCall","src":"6083:38:21"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"6073:6:21"}]},{"nodeType":"YulAssignment","src":"6130:49:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6163:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6174:3:21","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6159:3:21"},"nodeType":"YulFunctionCall","src":"6159:19:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6140:18:21"},"nodeType":"YulFunctionCall","src":"6140:39:21"},"variableNames":[{"name":"value9","nodeType":"YulIdentifier","src":"6130:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptrt_string_memory_ptrt_addresst_uint256t_uint256t_uint256t_uint64t_uint64t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5202:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5213:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5225:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5233:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5241:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5249:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5257:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5265:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"5273:6:21","type":""},{"name":"value7","nodeType":"YulTypedName","src":"5281:6:21","type":""},{"name":"value8","nodeType":"YulTypedName","src":"5289:6:21","type":""},{"name":"value9","nodeType":"YulTypedName","src":"5297:6:21","type":""}],"src":"5068:1117:21"},{"body":{"nodeType":"YulBlock","src":"6327:125:21","statements":[{"nodeType":"YulAssignment","src":"6337:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6349:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6360:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6345:3:21"},"nodeType":"YulFunctionCall","src":"6345:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6337:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6379:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6394:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6402:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6390:3:21"},"nodeType":"YulFunctionCall","src":"6390:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6372:6:21"},"nodeType":"YulFunctionCall","src":"6372:74:21"},"nodeType":"YulExpressionStatement","src":"6372:74:21"}]},"name":"abi_encode_tuple_t_contract$_OptimisticOracleV2Interface_$3988__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6296:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6307:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6318:4:21","type":""}],"src":"6190:262:21"},{"body":{"nodeType":"YulBlock","src":"6558:76:21","statements":[{"nodeType":"YulAssignment","src":"6568:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6580:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6591:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6576:3:21"},"nodeType":"YulFunctionCall","src":"6576:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6568:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6610:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"6621:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6603:6:21"},"nodeType":"YulFunctionCall","src":"6603:25:21"},"nodeType":"YulExpressionStatement","src":"6603:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6527:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6538:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6549:4:21","type":""}],"src":"6457:177:21"},{"body":{"nodeType":"YulBlock","src":"6743:352:21","statements":[{"body":{"nodeType":"YulBlock","src":"6789:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6798:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6801:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6791:6:21"},"nodeType":"YulFunctionCall","src":"6791:12:21"},"nodeType":"YulExpressionStatement","src":"6791:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6764:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"6773:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6760:3:21"},"nodeType":"YulFunctionCall","src":"6760:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"6785:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6756:3:21"},"nodeType":"YulFunctionCall","src":"6756:32:21"},"nodeType":"YulIf","src":"6753:52:21"},{"nodeType":"YulVariableDeclaration","src":"6814:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6840:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6827:12:21"},"nodeType":"YulFunctionCall","src":"6827:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6818:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6884:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6859:24:21"},"nodeType":"YulFunctionCall","src":"6859:31:21"},"nodeType":"YulExpressionStatement","src":"6859:31:21"},{"nodeType":"YulAssignment","src":"6899:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"6909:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6899:6:21"}]},{"nodeType":"YulAssignment","src":"6923:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6950:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6961:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6946:3:21"},"nodeType":"YulFunctionCall","src":"6946:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6933:12:21"},"nodeType":"YulFunctionCall","src":"6933:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6923:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"6974:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7006:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7017:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7002:3:21"},"nodeType":"YulFunctionCall","src":"7002:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6989:12:21"},"nodeType":"YulFunctionCall","src":"6989:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"6978:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"7055:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7030:24:21"},"nodeType":"YulFunctionCall","src":"7030:33:21"},"nodeType":"YulExpressionStatement","src":"7030:33:21"},{"nodeType":"YulAssignment","src":"7072:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"7082:7:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7072:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6693:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6704:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6716:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6724:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6732:6:21","type":""}],"src":"6639:456:21"},{"body":{"nodeType":"YulBlock","src":"7201:125:21","statements":[{"nodeType":"YulAssignment","src":"7211:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7223:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7234:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7219:3:21"},"nodeType":"YulFunctionCall","src":"7219:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7211:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7253:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7268:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7276:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7264:3:21"},"nodeType":"YulFunctionCall","src":"7264:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7246:6:21"},"nodeType":"YulFunctionCall","src":"7246:74:21"},"nodeType":"YulExpressionStatement","src":"7246:74:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7170:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7181:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7192:4:21","type":""}],"src":"7100:226:21"},{"body":{"nodeType":"YulBlock","src":"7455:125:21","statements":[{"nodeType":"YulAssignment","src":"7465:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7477:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7488:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7473:3:21"},"nodeType":"YulFunctionCall","src":"7473:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7465:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7507:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7522:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7530:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7518:3:21"},"nodeType":"YulFunctionCall","src":"7518:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7500:6:21"},"nodeType":"YulFunctionCall","src":"7500:74:21"},"nodeType":"YulExpressionStatement","src":"7500:74:21"}]},"name":"abi_encode_tuple_t_contract$_StoreInterface_$4033__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7424:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7435:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7446:4:21","type":""}],"src":"7331:249:21"},{"body":{"nodeType":"YulBlock","src":"7669:283:21","statements":[{"body":{"nodeType":"YulBlock","src":"7718:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7727:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7730:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7720:6:21"},"nodeType":"YulFunctionCall","src":"7720:12:21"},"nodeType":"YulExpressionStatement","src":"7720:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7697:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7705:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7693:3:21"},"nodeType":"YulFunctionCall","src":"7693:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"7712:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7689:3:21"},"nodeType":"YulFunctionCall","src":"7689:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7682:6:21"},"nodeType":"YulFunctionCall","src":"7682:35:21"},"nodeType":"YulIf","src":"7679:55:21"},{"nodeType":"YulAssignment","src":"7743:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7766:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7753:12:21"},"nodeType":"YulFunctionCall","src":"7753:20:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7743:6:21"}]},{"body":{"nodeType":"YulBlock","src":"7816:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7825:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7828:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7818:6:21"},"nodeType":"YulFunctionCall","src":"7818:12:21"},"nodeType":"YulExpressionStatement","src":"7818:12:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7788:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7796:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7785:2:21"},"nodeType":"YulFunctionCall","src":"7785:30:21"},"nodeType":"YulIf","src":"7782:50:21"},{"nodeType":"YulAssignment","src":"7841:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7857:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7865:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7853:3:21"},"nodeType":"YulFunctionCall","src":"7853:17:21"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"7841:8:21"}]},{"body":{"nodeType":"YulBlock","src":"7930:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7939:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7942:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7932:6:21"},"nodeType":"YulFunctionCall","src":"7932:12:21"},"nodeType":"YulExpressionStatement","src":"7932:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7893:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7905:1:21","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"7908:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7901:3:21"},"nodeType":"YulFunctionCall","src":"7901:14:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7889:3:21"},"nodeType":"YulFunctionCall","src":"7889:27:21"},{"kind":"number","nodeType":"YulLiteral","src":"7918:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7885:3:21"},"nodeType":"YulFunctionCall","src":"7885:38:21"},{"name":"end","nodeType":"YulIdentifier","src":"7925:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7882:2:21"},"nodeType":"YulFunctionCall","src":"7882:47:21"},"nodeType":"YulIf","src":"7879:67:21"}]},"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7632:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"7640:3:21","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"7648:8:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"7658:6:21","type":""}],"src":"7585:367:21"},{"body":{"nodeType":"YulBlock","src":"8096:459:21","statements":[{"body":{"nodeType":"YulBlock","src":"8142:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8151:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8154:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8144:6:21"},"nodeType":"YulFunctionCall","src":"8144:12:21"},"nodeType":"YulExpressionStatement","src":"8144:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8117:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"8126:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8113:3:21"},"nodeType":"YulFunctionCall","src":"8113:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"8138:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8109:3:21"},"nodeType":"YulFunctionCall","src":"8109:32:21"},"nodeType":"YulIf","src":"8106:52:21"},{"nodeType":"YulVariableDeclaration","src":"8167:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8193:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8180:12:21"},"nodeType":"YulFunctionCall","src":"8180:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8171:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"8236:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8245:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8248:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8238:6:21"},"nodeType":"YulFunctionCall","src":"8238:12:21"},"nodeType":"YulExpressionStatement","src":"8238:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8225:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"8232:1:21","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8222:2:21"},"nodeType":"YulFunctionCall","src":"8222:12:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8215:6:21"},"nodeType":"YulFunctionCall","src":"8215:20:21"},"nodeType":"YulIf","src":"8212:40:21"},{"nodeType":"YulAssignment","src":"8261:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"8271:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8261:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"8285:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8316:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8327:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8312:3:21"},"nodeType":"YulFunctionCall","src":"8312:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8299:12:21"},"nodeType":"YulFunctionCall","src":"8299:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8289:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"8374:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8383:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8386:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8376:6:21"},"nodeType":"YulFunctionCall","src":"8376:12:21"},"nodeType":"YulExpressionStatement","src":"8376:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8346:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8354:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8343:2:21"},"nodeType":"YulFunctionCall","src":"8343:30:21"},"nodeType":"YulIf","src":"8340:50:21"},{"nodeType":"YulVariableDeclaration","src":"8399:96:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8467:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8478:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8463:3:21"},"nodeType":"YulFunctionCall","src":"8463:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8487:7:21"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"8425:37:21"},"nodeType":"YulFunctionCall","src":"8425:70:21"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"8403:8:21","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"8413:8:21","type":""}]},{"nodeType":"YulAssignment","src":"8504:18:21","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"8514:8:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8504:6:21"}]},{"nodeType":"YulAssignment","src":"8531:18:21","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"8541:8:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8531:6:21"}]}]},"name":"abi_decode_tuple_t_enum$_RevisionType_$4142t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8046:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8057:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8069:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8077:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8085:6:21","type":""}],"src":"7957:598:21"},{"body":{"nodeType":"YulBlock","src":"8685:125:21","statements":[{"nodeType":"YulAssignment","src":"8695:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8707:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8718:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8703:3:21"},"nodeType":"YulFunctionCall","src":"8703:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8695:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8737:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8752:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8760:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8748:3:21"},"nodeType":"YulFunctionCall","src":"8748:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8730:6:21"},"nodeType":"YulFunctionCall","src":"8730:74:21"},"nodeType":"YulExpressionStatement","src":"8730:74:21"}]},"name":"abi_encode_tuple_t_contract$_FinderInterface_$3622__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8654:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8665:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8676:4:21","type":""}],"src":"8560:250:21"},{"body":{"nodeType":"YulBlock","src":"8902:228:21","statements":[{"body":{"nodeType":"YulBlock","src":"8948:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8957:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8960:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8950:6:21"},"nodeType":"YulFunctionCall","src":"8950:12:21"},"nodeType":"YulExpressionStatement","src":"8950:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8923:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"8932:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8919:3:21"},"nodeType":"YulFunctionCall","src":"8919:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"8944:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8915:3:21"},"nodeType":"YulFunctionCall","src":"8915:32:21"},"nodeType":"YulIf","src":"8912:52:21"},{"nodeType":"YulVariableDeclaration","src":"8973:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8999:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8986:12:21"},"nodeType":"YulFunctionCall","src":"8986:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8977:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9043:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9018:24:21"},"nodeType":"YulFunctionCall","src":"9018:31:21"},"nodeType":"YulExpressionStatement","src":"9018:31:21"},{"nodeType":"YulAssignment","src":"9058:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"9068:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9058:6:21"}]},{"nodeType":"YulAssignment","src":"9082:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9109:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9120:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9105:3:21"},"nodeType":"YulFunctionCall","src":"9105:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9092:12:21"},"nodeType":"YulFunctionCall","src":"9092:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9082:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8860:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8871:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8883:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8891:6:21","type":""}],"src":"8815:315:21"},{"body":{"nodeType":"YulBlock","src":"9250:125:21","statements":[{"nodeType":"YulAssignment","src":"9260:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9272:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9283:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9268:3:21"},"nodeType":"YulFunctionCall","src":"9268:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9260:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9302:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9317:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9325:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9313:3:21"},"nodeType":"YulFunctionCall","src":"9313:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9295:6:21"},"nodeType":"YulFunctionCall","src":"9295:74:21"},"nodeType":"YulExpressionStatement","src":"9295:74:21"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$439__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9219:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9230:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9241:4:21","type":""}],"src":"9135:240:21"},{"body":{"nodeType":"YulBlock","src":"9502:383:21","statements":[{"body":{"nodeType":"YulBlock","src":"9548:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9557:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9560:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9550:6:21"},"nodeType":"YulFunctionCall","src":"9550:12:21"},"nodeType":"YulExpressionStatement","src":"9550:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9523:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9532:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9519:3:21"},"nodeType":"YulFunctionCall","src":"9519:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"9544:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9515:3:21"},"nodeType":"YulFunctionCall","src":"9515:32:21"},"nodeType":"YulIf","src":"9512:52:21"},{"nodeType":"YulAssignment","src":"9573:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9596:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9583:12:21"},"nodeType":"YulFunctionCall","src":"9583:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9573:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"9615:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9646:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9657:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9642:3:21"},"nodeType":"YulFunctionCall","src":"9642:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9629:12:21"},"nodeType":"YulFunctionCall","src":"9629:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9619:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"9704:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9713:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9716:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9706:6:21"},"nodeType":"YulFunctionCall","src":"9706:12:21"},"nodeType":"YulExpressionStatement","src":"9706:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9676:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9684:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9673:2:21"},"nodeType":"YulFunctionCall","src":"9673:30:21"},"nodeType":"YulIf","src":"9670:50:21"},{"nodeType":"YulVariableDeclaration","src":"9729:96:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9797:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9808:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9793:3:21"},"nodeType":"YulFunctionCall","src":"9793:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9817:7:21"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"9755:37:21"},"nodeType":"YulFunctionCall","src":"9755:70:21"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"9733:8:21","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"9743:8:21","type":""}]},{"nodeType":"YulAssignment","src":"9834:18:21","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"9844:8:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9834:6:21"}]},{"nodeType":"YulAssignment","src":"9861:18:21","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"9871:8:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9861:6:21"}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9452:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9463:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9475:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9483:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9491:6:21","type":""}],"src":"9380:505:21"},{"body":{"nodeType":"YulBlock","src":"10064:224:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10081:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10092:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10074:6:21"},"nodeType":"YulFunctionCall","src":"10074:21:21"},"nodeType":"YulExpressionStatement","src":"10074:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10115:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10126:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10111:3:21"},"nodeType":"YulFunctionCall","src":"10111:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"10131:2:21","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10104:6:21"},"nodeType":"YulFunctionCall","src":"10104:30:21"},"nodeType":"YulExpressionStatement","src":"10104:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10154:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10165:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10150:3:21"},"nodeType":"YulFunctionCall","src":"10150:18:21"},{"hexValue":"6f6e6c79206f7261636c652063616e2063616c6c20746869732066756e637469","kind":"string","nodeType":"YulLiteral","src":"10170:34:21","type":"","value":"only oracle can call this functi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10143:6:21"},"nodeType":"YulFunctionCall","src":"10143:62:21"},"nodeType":"YulExpressionStatement","src":"10143:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10225:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10236:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10221:3:21"},"nodeType":"YulFunctionCall","src":"10221:18:21"},{"hexValue":"6f6e","kind":"string","nodeType":"YulLiteral","src":"10241:4:21","type":"","value":"on"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10214:6:21"},"nodeType":"YulFunctionCall","src":"10214:32:21"},"nodeType":"YulExpressionStatement","src":"10214:32:21"},{"nodeType":"YulAssignment","src":"10255:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10267:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10278:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10263:3:21"},"nodeType":"YulFunctionCall","src":"10263:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10255:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_20de572be7a72693017907a48071b9a28c6697a396e1ff16cc2cb4c4947aaf75__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10041:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10055:4:21","type":""}],"src":"9890:398:21"},{"body":{"nodeType":"YulBlock","src":"10458:218:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10468:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10488:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10482:5:21"},"nodeType":"YulFunctionCall","src":"10482:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10472:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10543:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10551:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10539:3:21"},"nodeType":"YulFunctionCall","src":"10539:17:21"},{"name":"pos","nodeType":"YulIdentifier","src":"10558:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"10563:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10504:34:21"},"nodeType":"YulFunctionCall","src":"10504:66:21"},"nodeType":"YulExpressionStatement","src":"10504:66:21"},{"nodeType":"YulVariableDeclaration","src":"10579:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10596:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"10601:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10592:3:21"},"nodeType":"YulFunctionCall","src":"10592:16:21"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"10583:5:21","type":""}]},{"expression":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"10624:5:21"},{"name":"value1","nodeType":"YulIdentifier","src":"10631:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10617:6:21"},"nodeType":"YulFunctionCall","src":"10617:21:21"},"nodeType":"YulExpressionStatement","src":"10617:21:21"},{"nodeType":"YulAssignment","src":"10647:23:21","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"10658:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"10665:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10654:3:21"},"nodeType":"YulFunctionCall","src":"10654:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10647:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10426:3:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10431:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10439:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10450:3:21","type":""}],"src":"10293:383:21"},{"body":{"nodeType":"YulBlock","src":"10797:98:21","statements":[{"nodeType":"YulAssignment","src":"10807:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10819:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10830:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10815:3:21"},"nodeType":"YulFunctionCall","src":"10815:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10807:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10871:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10879:9:21"}],"functionName":{"name":"abi_encode_enum_RevisionType","nodeType":"YulIdentifier","src":"10842:28:21"},"nodeType":"YulFunctionCall","src":"10842:47:21"},"nodeType":"YulExpressionStatement","src":"10842:47:21"}]},"name":"abi_encode_tuple_t_enum$_RevisionType_$4142__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10766:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10777:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10788:4:21","type":""}],"src":"10681:214:21"},{"body":{"nodeType":"YulBlock","src":"11007:336:21","statements":[{"body":{"nodeType":"YulBlock","src":"11053:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11062:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11065:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11055:6:21"},"nodeType":"YulFunctionCall","src":"11055:12:21"},"nodeType":"YulExpressionStatement","src":"11055:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11028:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11037:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11024:3:21"},"nodeType":"YulFunctionCall","src":"11024:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"11049:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11020:3:21"},"nodeType":"YulFunctionCall","src":"11020:32:21"},"nodeType":"YulIf","src":"11017:52:21"},{"nodeType":"YulVariableDeclaration","src":"11078:23:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11098:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11092:5:21"},"nodeType":"YulFunctionCall","src":"11092:9:21"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"11082:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11110:33:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11132:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11140:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11128:3:21"},"nodeType":"YulFunctionCall","src":"11128:15:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"11114:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"11218:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11220:16:21"},"nodeType":"YulFunctionCall","src":"11220:18:21"},"nodeType":"YulExpressionStatement","src":"11220:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11161:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"11173:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11158:2:21"},"nodeType":"YulFunctionCall","src":"11158:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11197:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"11209:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11194:2:21"},"nodeType":"YulFunctionCall","src":"11194:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11155:2:21"},"nodeType":"YulFunctionCall","src":"11155:62:21"},"nodeType":"YulIf","src":"11152:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11256:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11260:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11249:6:21"},"nodeType":"YulFunctionCall","src":"11249:22:21"},"nodeType":"YulExpressionStatement","src":"11249:22:21"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11287:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11301:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11295:5:21"},"nodeType":"YulFunctionCall","src":"11295:16:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11280:6:21"},"nodeType":"YulFunctionCall","src":"11280:32:21"},"nodeType":"YulExpressionStatement","src":"11280:32:21"},{"nodeType":"YulAssignment","src":"11321:16:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"11331:6:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11321:6:21"}]}]},"name":"abi_decode_tuple_t_struct$_Unsigned_$1911_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10973:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10984:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10996:6:21","type":""}],"src":"10900:443:21"},{"body":{"nodeType":"YulBlock","src":"11522:175:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11539:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11550:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11532:6:21"},"nodeType":"YulFunctionCall","src":"11532:21:21"},"nodeType":"YulExpressionStatement","src":"11532:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11573:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11584:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11569:3:21"},"nodeType":"YulFunctionCall","src":"11569:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"11589:2:21","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11562:6:21"},"nodeType":"YulFunctionCall","src":"11562:30:21"},"nodeType":"YulExpressionStatement","src":"11562:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11612:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11623:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11608:3:21"},"nodeType":"YulFunctionCall","src":"11608:18:21"},{"hexValue":"626f6e64206d757374206265203e3d2066696e616c20666565","kind":"string","nodeType":"YulLiteral","src":"11628:27:21","type":"","value":"bond must be >= final fee"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11601:6:21"},"nodeType":"YulFunctionCall","src":"11601:55:21"},"nodeType":"YulExpressionStatement","src":"11601:55:21"},{"nodeType":"YulAssignment","src":"11665:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11677:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11688:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11673:3:21"},"nodeType":"YulFunctionCall","src":"11673:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11665:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_125dbae9684ccfc3c2f4c48a6488e7ec8ba5d4e141f94ac8e2819dadd3c071b1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11499:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11513:4:21","type":""}],"src":"11348:349:21"},{"body":{"nodeType":"YulBlock","src":"11876:225:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11893:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11904:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11886:6:21"},"nodeType":"YulFunctionCall","src":"11886:21:21"},"nodeType":"YulExpressionStatement","src":"11886:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11927:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11938:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11923:3:21"},"nodeType":"YulFunctionCall","src":"11923:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"11943:2:21","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11916:6:21"},"nodeType":"YulFunctionCall","src":"11916:30:21"},"nodeType":"YulExpressionStatement","src":"11916:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11966:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11977:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11962:3:21"},"nodeType":"YulFunctionCall","src":"11962:18:21"},{"hexValue":"6c6976656e657373206d757374206265203e3d206d696e696d756d4c6976656e","kind":"string","nodeType":"YulLiteral","src":"11982:34:21","type":"","value":"liveness must be >= minimumLiven"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11955:6:21"},"nodeType":"YulFunctionCall","src":"11955:62:21"},"nodeType":"YulExpressionStatement","src":"11955:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12037:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12048:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12033:3:21"},"nodeType":"YulFunctionCall","src":"12033:18:21"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"12053:5:21","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12026:6:21"},"nodeType":"YulFunctionCall","src":"12026:33:21"},"nodeType":"YulExpressionStatement","src":"12026:33:21"},{"nodeType":"YulAssignment","src":"12068:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12080:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12091:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12076:3:21"},"nodeType":"YulFunctionCall","src":"12076:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12068:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f3081d0d2e97ae829db742cd828461af7ab934373cdf728548dad1bc0eadb759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11853:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11867:4:21","type":""}],"src":"11702:399:21"},{"body":{"nodeType":"YulBlock","src":"12280:180:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12297:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12308:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12290:6:21"},"nodeType":"YulFunctionCall","src":"12290:21:21"},"nodeType":"YulExpressionStatement","src":"12290:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12331:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12342:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12327:3:21"},"nodeType":"YulFunctionCall","src":"12327:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"12347:2:21","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12320:6:21"},"nodeType":"YulFunctionCall","src":"12320:30:21"},"nodeType":"YulExpressionStatement","src":"12320:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12370:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12381:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12366:3:21"},"nodeType":"YulFunctionCall","src":"12366:18:21"},{"hexValue":"6c6976656e657373206d757374206265203c207468616e2031207765656b","kind":"string","nodeType":"YulLiteral","src":"12386:32:21","type":"","value":"liveness must be < than 1 week"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12359:6:21"},"nodeType":"YulFunctionCall","src":"12359:60:21"},"nodeType":"YulExpressionStatement","src":"12359:60:21"},{"nodeType":"YulAssignment","src":"12428:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12440:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12451:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12436:3:21"},"nodeType":"YulFunctionCall","src":"12436:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12428:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9b17c2a48ebae0023b062a31d39c1484bce50d2e042bc517d8fa71a29b7ae876__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12257:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12271:4:21","type":""}],"src":"12106:354:21"},{"body":{"nodeType":"YulBlock","src":"12520:382:21","statements":[{"nodeType":"YulAssignment","src":"12530:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12544:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"12547:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12540:3:21"},"nodeType":"YulFunctionCall","src":"12540:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12530:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"12561:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12591:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"12597:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12587:3:21"},"nodeType":"YulFunctionCall","src":"12587:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12565:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"12638:31:21","statements":[{"nodeType":"YulAssignment","src":"12640:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12654:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12662:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12650:3:21"},"nodeType":"YulFunctionCall","src":"12650:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12640:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12618:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12611:6:21"},"nodeType":"YulFunctionCall","src":"12611:26:21"},"nodeType":"YulIf","src":"12608:61:21"},{"body":{"nodeType":"YulBlock","src":"12728:168:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12749:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12752:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12742:6:21"},"nodeType":"YulFunctionCall","src":"12742:88:21"},"nodeType":"YulExpressionStatement","src":"12742:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12850:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12853:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12843:6:21"},"nodeType":"YulFunctionCall","src":"12843:15:21"},"nodeType":"YulExpressionStatement","src":"12843:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12878:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12881:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12871:6:21"},"nodeType":"YulFunctionCall","src":"12871:15:21"},"nodeType":"YulExpressionStatement","src":"12871:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12684:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12707:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12715:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12704:2:21"},"nodeType":"YulFunctionCall","src":"12704:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12681:2:21"},"nodeType":"YulFunctionCall","src":"12681:38:21"},"nodeType":"YulIf","src":"12678:218:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12500:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12509:6:21","type":""}],"src":"12465:437:21"},{"body":{"nodeType":"YulBlock","src":"13036:119:21","statements":[{"nodeType":"YulAssignment","src":"13046:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13058:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13069:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13054:3:21"},"nodeType":"YulFunctionCall","src":"13054:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13046:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13088:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"13099:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13081:6:21"},"nodeType":"YulFunctionCall","src":"13081:25:21"},"nodeType":"YulExpressionStatement","src":"13081:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13126:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13137:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13122:3:21"},"nodeType":"YulFunctionCall","src":"13122:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"13142:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13115:6:21"},"nodeType":"YulFunctionCall","src":"13115:34:21"},"nodeType":"YulExpressionStatement","src":"13115:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12997:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13008:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13016:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13027:4:21","type":""}],"src":"12907:248:21"},{"body":{"nodeType":"YulBlock","src":"13334:236:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13351:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13362:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13344:6:21"},"nodeType":"YulFunctionCall","src":"13344:21:21"},"nodeType":"YulExpressionStatement","src":"13344:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13385:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13396:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13381:3:21"},"nodeType":"YulFunctionCall","src":"13381:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"13401:2:21","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13374:6:21"},"nodeType":"YulFunctionCall","src":"13374:30:21"},"nodeType":"YulExpressionStatement","src":"13374:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13424:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13435:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13420:3:21"},"nodeType":"YulFunctionCall","src":"13420:18:21"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"13440:34:21","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13413:6:21"},"nodeType":"YulFunctionCall","src":"13413:62:21"},"nodeType":"YulExpressionStatement","src":"13413:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13495:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13506:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13491:3:21"},"nodeType":"YulFunctionCall","src":"13491:18:21"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"13511:16:21","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13484:6:21"},"nodeType":"YulFunctionCall","src":"13484:44:21"},"nodeType":"YulExpressionStatement","src":"13484:44:21"},{"nodeType":"YulAssignment","src":"13537:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13549:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13560:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13545:3:21"},"nodeType":"YulFunctionCall","src":"13545:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13537:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13311:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13325:4:21","type":""}],"src":"13160:410:21"},{"body":{"nodeType":"YulBlock","src":"13749:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13766:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13777:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13759:6:21"},"nodeType":"YulFunctionCall","src":"13759:21:21"},"nodeType":"YulExpressionStatement","src":"13759:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13800:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13811:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13796:3:21"},"nodeType":"YulFunctionCall","src":"13796:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"13816:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13789:6:21"},"nodeType":"YulFunctionCall","src":"13789:30:21"},"nodeType":"YulExpressionStatement","src":"13789:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13839:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13850:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13835:3:21"},"nodeType":"YulFunctionCall","src":"13835:18:21"},{"hexValue":"6c6976656e657373206d757374206265203c2035323030207765656b73","kind":"string","nodeType":"YulLiteral","src":"13855:31:21","type":"","value":"liveness must be < 5200 weeks"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13828:6:21"},"nodeType":"YulFunctionCall","src":"13828:59:21"},"nodeType":"YulExpressionStatement","src":"13828:59:21"},{"nodeType":"YulAssignment","src":"13896:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13908:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13919:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13904:3:21"},"nodeType":"YulFunctionCall","src":"13904:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13896:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_dc1d0486d33821ede5d3b758f625d3ef0e5234b7b67b0141c6dff2128f35de56__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13726:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13740:4:21","type":""}],"src":"13575:353:21"},{"body":{"nodeType":"YulBlock","src":"14261:412:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14278:3:21"},{"hexValue":"6d65657420746865204c69737420437269746572696120617420746865207469","kind":"string","nodeType":"YulLiteral","src":"14283:34:21","type":"","value":"meet the List Criteria at the ti"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14271:6:21"},"nodeType":"YulFunctionCall","src":"14271:47:21"},"nodeType":"YulExpressionStatement","src":"14271:47:21"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14338:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14343:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14334:3:21"},"nodeType":"YulFunctionCall","src":"14334:12:21"},{"hexValue":"6d65206f662074686520707269636520726571756573743f204c697374204372","kind":"string","nodeType":"YulLiteral","src":"14348:34:21","type":"","value":"me of the price request? List Cr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14327:6:21"},"nodeType":"YulFunctionCall","src":"14327:56:21"},"nodeType":"YulExpressionStatement","src":"14327:56:21"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14403:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14408:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14399:3:21"},"nodeType":"YulFunctionCall","src":"14399:12:21"},{"hexValue":"6974657269613a20","kind":"string","nodeType":"YulLiteral","src":"14413:10:21","type":"","value":"iteria: "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14392:6:21"},"nodeType":"YulFunctionCall","src":"14392:32:21"},"nodeType":"YulExpressionStatement","src":"14392:32:21"},{"nodeType":"YulVariableDeclaration","src":"14433:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14453:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14447:5:21"},"nodeType":"YulFunctionCall","src":"14447:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14437:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14508:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14516:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14504:3:21"},"nodeType":"YulFunctionCall","src":"14504:15:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14525:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14530:2:21","type":"","value":"72"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14521:3:21"},"nodeType":"YulFunctionCall","src":"14521:12:21"},{"name":"length","nodeType":"YulIdentifier","src":"14535:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"14469:34:21"},"nodeType":"YulFunctionCall","src":"14469:73:21"},"nodeType":"YulExpressionStatement","src":"14469:73:21"},{"nodeType":"YulVariableDeclaration","src":"14551:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14565:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"14570:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14561:3:21"},"nodeType":"YulFunctionCall","src":"14561:16:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14555:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"14597:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"14601:2:21","type":"","value":"72"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14593:3:21"},"nodeType":"YulFunctionCall","src":"14593:11:21"},{"hexValue":"2e20446563656e7472612d4c697374205265766973696f6e204944203d20","kind":"string","nodeType":"YulLiteral","src":"14606:32:21","type":"","value":". Decentra-List Revision ID = "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14586:6:21"},"nodeType":"YulFunctionCall","src":"14586:53:21"},"nodeType":"YulExpressionStatement","src":"14586:53:21"},{"nodeType":"YulAssignment","src":"14648:19:21","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"14659:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"14663:3:21","type":"","value":"102"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14655:3:21"},"nodeType":"YulFunctionCall","src":"14655:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14648:3:21"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_36e34da2609200b224ffe992330cd12047395e79cf84eab35610f71f5a93146d_t_bytes_memory_ptr_t_stringliteral_4ec96ac91c07cd49086380698a088473608ec0c63287fc444eb606330cd9ecca__to_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes30__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14237:3:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14242:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14253:3:21","type":""}],"src":"13933:740:21"},{"body":{"nodeType":"YulBlock","src":"14733:65:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14750:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"14753:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14743:6:21"},"nodeType":"YulFunctionCall","src":"14743:14:21"},"nodeType":"YulExpressionStatement","src":"14743:14:21"},{"nodeType":"YulAssignment","src":"14766:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14784:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14787:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"14774:9:21"},"nodeType":"YulFunctionCall","src":"14774:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14766:4:21"}]}]},"name":"array_dataslot_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14716:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"14724:4:21","type":""}],"src":"14678:120:21"},{"body":{"nodeType":"YulBlock","src":"14883:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"14916:425:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14930:11:21","value":{"kind":"number","nodeType":"YulLiteral","src":"14940:1:21","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14934:2:21","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"14961:2:21"},{"name":"array","nodeType":"YulIdentifier","src":"14965:5:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14954:6:21"},"nodeType":"YulFunctionCall","src":"14954:17:21"},"nodeType":"YulExpressionStatement","src":"14954:17:21"},{"nodeType":"YulVariableDeclaration","src":"14984:31:21","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"15006:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"15010:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"14996:9:21"},"nodeType":"YulFunctionCall","src":"14996:19:21"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"14988:4:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15028:57:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15051:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15061:1:21","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"15068:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"15080:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15064:3:21"},"nodeType":"YulFunctionCall","src":"15064:19:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15057:3:21"},"nodeType":"YulFunctionCall","src":"15057:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15047:3:21"},"nodeType":"YulFunctionCall","src":"15047:38:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"15032:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"15122:23:21","statements":[{"nodeType":"YulAssignment","src":"15124:19:21","value":{"name":"data","nodeType":"YulIdentifier","src":"15139:4:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"15124:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"15104:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"15116:4:21","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15101:2:21"},"nodeType":"YulFunctionCall","src":"15101:20:21"},"nodeType":"YulIf","src":"15098:47:21"},{"nodeType":"YulVariableDeclaration","src":"15158:41:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15172:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15182:1:21","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"15189:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15194:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15185:3:21"},"nodeType":"YulFunctionCall","src":"15185:12:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15178:3:21"},"nodeType":"YulFunctionCall","src":"15178:20:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15168:3:21"},"nodeType":"YulFunctionCall","src":"15168:31:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"15162:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15212:24:21","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"15225:11:21"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"15216:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"15310:21:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"15319:5:21"},{"name":"_1","nodeType":"YulIdentifier","src":"15326:2:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15312:6:21"},"nodeType":"YulFunctionCall","src":"15312:17:21"},"nodeType":"YulExpressionStatement","src":"15312:17:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"15260:5:21"},{"name":"_2","nodeType":"YulIdentifier","src":"15267:2:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15257:2:21"},"nodeType":"YulFunctionCall","src":"15257:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15271:26:21","statements":[{"nodeType":"YulAssignment","src":"15273:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"15286:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"15293:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15282:3:21"},"nodeType":"YulFunctionCall","src":"15282:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"15273:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"15253:3:21","statements":[]},"src":"15249:82:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"14899:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14904:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14896:2:21"},"nodeType":"YulFunctionCall","src":"14896:11:21"},"nodeType":"YulIf","src":"14893:448:21"}]},"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"14855:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"14862:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"14867:10:21","type":""}],"src":"14803:544:21"},{"body":{"nodeType":"YulBlock","src":"15437:81:21","statements":[{"nodeType":"YulAssignment","src":"15447:65:21","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15462:4:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15480:1:21","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"15483:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15476:3:21"},"nodeType":"YulFunctionCall","src":"15476:11:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15493:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15489:3:21"},"nodeType":"YulFunctionCall","src":"15489:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15472:3:21"},"nodeType":"YulFunctionCall","src":"15472:24:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15468:3:21"},"nodeType":"YulFunctionCall","src":"15468:29:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15458:3:21"},"nodeType":"YulFunctionCall","src":"15458:40:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15504:1:21","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"15507:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15500:3:21"},"nodeType":"YulFunctionCall","src":"15500:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"15455:2:21"},"nodeType":"YulFunctionCall","src":"15455:57:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"15447:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15414:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"15420:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"15428:4:21","type":""}],"src":"15352:166:21"},{"body":{"nodeType":"YulBlock","src":"15617:1254:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15627:24:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15647:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15641:5:21"},"nodeType":"YulFunctionCall","src":"15641:10:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"15631:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"15694:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"15696:16:21"},"nodeType":"YulFunctionCall","src":"15696:18:21"},"nodeType":"YulExpressionStatement","src":"15696:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15666:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"15674:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15663:2:21"},"nodeType":"YulFunctionCall","src":"15663:30:21"},"nodeType":"YulIf","src":"15660:56:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15768:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15806:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"15800:5:21"},"nodeType":"YulFunctionCall","src":"15800:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"15774:25:21"},"nodeType":"YulFunctionCall","src":"15774:38:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"15814:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"15725:42:21"},"nodeType":"YulFunctionCall","src":"15725:96:21"},"nodeType":"YulExpressionStatement","src":"15725:96:21"},{"nodeType":"YulVariableDeclaration","src":"15830:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"15847:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"15834:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15857:23:21","value":{"kind":"number","nodeType":"YulLiteral","src":"15876:4:21","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"15861:11:21","type":""}]},{"nodeType":"YulAssignment","src":"15889:24:21","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"15902:11:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"15889:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"15959:655:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15973:35:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15992:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16004:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16000:3:21"},"nodeType":"YulFunctionCall","src":"16000:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15988:3:21"},"nodeType":"YulFunctionCall","src":"15988:20:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"15977:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16021:48:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16064:4:21"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"16035:28:21"},"nodeType":"YulFunctionCall","src":"16035:34:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"16025:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16082:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"16091:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"16086:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"16169:172:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16194:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16212:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"16217:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16208:3:21"},"nodeType":"YulFunctionCall","src":"16208:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16202:5:21"},"nodeType":"YulFunctionCall","src":"16202:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16187:6:21"},"nodeType":"YulFunctionCall","src":"16187:42:21"},"nodeType":"YulExpressionStatement","src":"16187:42:21"},{"nodeType":"YulAssignment","src":"16246:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16260:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"16268:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16256:3:21"},"nodeType":"YulFunctionCall","src":"16256:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16246:6:21"}]},{"nodeType":"YulAssignment","src":"16287:40:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"16304:9:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"16315:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16300:3:21"},"nodeType":"YulFunctionCall","src":"16300:27:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"16287:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16116:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"16119:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16113:2:21"},"nodeType":"YulFunctionCall","src":"16113:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16128:28:21","statements":[{"nodeType":"YulAssignment","src":"16130:24:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16139:1:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"16142:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16135:3:21"},"nodeType":"YulFunctionCall","src":"16135:19:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"16130:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"16109:3:21","statements":[]},"src":"16105:236:21"},{"body":{"nodeType":"YulBlock","src":"16389:166:21","statements":[{"nodeType":"YulVariableDeclaration","src":"16407:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16434:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"16439:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16430:3:21"},"nodeType":"YulFunctionCall","src":"16430:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16424:5:21"},"nodeType":"YulFunctionCall","src":"16424:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"16411:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16474:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"16486:9:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16513:1:21","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"16516:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16509:3:21"},"nodeType":"YulFunctionCall","src":"16509:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"16525:3:21","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16505:3:21"},"nodeType":"YulFunctionCall","src":"16505:24:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16535:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16531:3:21"},"nodeType":"YulFunctionCall","src":"16531:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"16501:3:21"},"nodeType":"YulFunctionCall","src":"16501:37:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16497:3:21"},"nodeType":"YulFunctionCall","src":"16497:42:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16482:3:21"},"nodeType":"YulFunctionCall","src":"16482:58:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16467:6:21"},"nodeType":"YulFunctionCall","src":"16467:74:21"},"nodeType":"YulExpressionStatement","src":"16467:74:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"16360:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"16369:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16357:2:21"},"nodeType":"YulFunctionCall","src":"16357:19:21"},"nodeType":"YulIf","src":"16354:201:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16575:4:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16589:1:21","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"16592:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16585:3:21"},"nodeType":"YulFunctionCall","src":"16585:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"16601:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16581:3:21"},"nodeType":"YulFunctionCall","src":"16581:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16568:6:21"},"nodeType":"YulFunctionCall","src":"16568:36:21"},"nodeType":"YulExpressionStatement","src":"16568:36:21"}]},"nodeType":"YulCase","src":"15952:662:21","value":{"kind":"number","nodeType":"YulLiteral","src":"15957:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"16631:234:21","statements":[{"nodeType":"YulVariableDeclaration","src":"16645:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"16658:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"16649:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"16694:67:21","statements":[{"nodeType":"YulAssignment","src":"16712:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16731:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"16736:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16727:3:21"},"nodeType":"YulFunctionCall","src":"16727:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16721:5:21"},"nodeType":"YulFunctionCall","src":"16721:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16712:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"16675:6:21"},"nodeType":"YulIf","src":"16672:89:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16781:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16840:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"16847:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"16787:52:21"},"nodeType":"YulFunctionCall","src":"16787:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16774:6:21"},"nodeType":"YulFunctionCall","src":"16774:81:21"},"nodeType":"YulExpressionStatement","src":"16774:81:21"}]},"nodeType":"YulCase","src":"16623:242:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15932:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"15940:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15929:2:21"},"nodeType":"YulFunctionCall","src":"15929:14:21"},"nodeType":"YulSwitch","src":"15922:943:21"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"15602:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"15608:3:21","type":""}],"src":"15523:1348:21"},{"body":{"nodeType":"YulBlock","src":"16972:1254:21","statements":[{"nodeType":"YulVariableDeclaration","src":"16982:24:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17002:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16996:5:21"},"nodeType":"YulFunctionCall","src":"16996:10:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"16986:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"17049:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"17051:16:21"},"nodeType":"YulFunctionCall","src":"17051:18:21"},"nodeType":"YulExpressionStatement","src":"17051:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"17021:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"17029:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17018:2:21"},"nodeType":"YulFunctionCall","src":"17018:30:21"},"nodeType":"YulIf","src":"17015:56:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17123:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17161:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"17155:5:21"},"nodeType":"YulFunctionCall","src":"17155:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"17129:25:21"},"nodeType":"YulFunctionCall","src":"17129:38:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"17169:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"17080:42:21"},"nodeType":"YulFunctionCall","src":"17080:96:21"},"nodeType":"YulExpressionStatement","src":"17080:96:21"},{"nodeType":"YulVariableDeclaration","src":"17185:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17202:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"17189:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17212:23:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17231:4:21","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"17216:11:21","type":""}]},{"nodeType":"YulAssignment","src":"17244:24:21","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"17257:11:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"17244:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"17314:655:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17328:35:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"17347:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17359:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17355:3:21"},"nodeType":"YulFunctionCall","src":"17355:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17343:3:21"},"nodeType":"YulFunctionCall","src":"17343:20:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"17332:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17376:48:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17419:4:21"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"17390:28:21"},"nodeType":"YulFunctionCall","src":"17390:34:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"17380:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17437:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17446:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17441:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"17524:172:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17549:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17567:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"17572:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17563:3:21"},"nodeType":"YulFunctionCall","src":"17563:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17557:5:21"},"nodeType":"YulFunctionCall","src":"17557:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17542:6:21"},"nodeType":"YulFunctionCall","src":"17542:42:21"},"nodeType":"YulExpressionStatement","src":"17542:42:21"},{"nodeType":"YulAssignment","src":"17601:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17615:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"17623:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17611:3:21"},"nodeType":"YulFunctionCall","src":"17611:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17601:6:21"}]},{"nodeType":"YulAssignment","src":"17642:40:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"17659:9:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"17670:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17655:3:21"},"nodeType":"YulFunctionCall","src":"17655:27:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"17642:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17471:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"17474:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17468:2:21"},"nodeType":"YulFunctionCall","src":"17468:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17483:28:21","statements":[{"nodeType":"YulAssignment","src":"17485:24:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17494:1:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"17497:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17490:3:21"},"nodeType":"YulFunctionCall","src":"17490:19:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17485:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"17464:3:21","statements":[]},"src":"17460:236:21"},{"body":{"nodeType":"YulBlock","src":"17744:166:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17762:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17789:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"17794:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17785:3:21"},"nodeType":"YulFunctionCall","src":"17785:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17779:5:21"},"nodeType":"YulFunctionCall","src":"17779:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"17766:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17829:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"17841:9:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17868:1:21","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"17871:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17864:3:21"},"nodeType":"YulFunctionCall","src":"17864:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"17880:3:21","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17860:3:21"},"nodeType":"YulFunctionCall","src":"17860:24:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17890:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17886:3:21"},"nodeType":"YulFunctionCall","src":"17886:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17856:3:21"},"nodeType":"YulFunctionCall","src":"17856:37:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17852:3:21"},"nodeType":"YulFunctionCall","src":"17852:42:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17837:3:21"},"nodeType":"YulFunctionCall","src":"17837:58:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17822:6:21"},"nodeType":"YulFunctionCall","src":"17822:74:21"},"nodeType":"YulExpressionStatement","src":"17822:74:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"17715:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"17724:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17712:2:21"},"nodeType":"YulFunctionCall","src":"17712:19:21"},"nodeType":"YulIf","src":"17709:201:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17930:4:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17944:1:21","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"17947:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17940:3:21"},"nodeType":"YulFunctionCall","src":"17940:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"17956:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17936:3:21"},"nodeType":"YulFunctionCall","src":"17936:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17923:6:21"},"nodeType":"YulFunctionCall","src":"17923:36:21"},"nodeType":"YulExpressionStatement","src":"17923:36:21"}]},"nodeType":"YulCase","src":"17307:662:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17312:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"17986:234:21","statements":[{"nodeType":"YulVariableDeclaration","src":"18000:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"18013:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"18004:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"18049:67:21","statements":[{"nodeType":"YulAssignment","src":"18067:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18086:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"18091:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18082:3:21"},"nodeType":"YulFunctionCall","src":"18082:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18076:5:21"},"nodeType":"YulFunctionCall","src":"18076:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18067:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"18030:6:21"},"nodeType":"YulIf","src":"18027:89:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18136:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18195:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"18202:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"18142:52:21"},"nodeType":"YulFunctionCall","src":"18142:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18129:6:21"},"nodeType":"YulFunctionCall","src":"18129:81:21"},"nodeType":"YulExpressionStatement","src":"18129:81:21"}]},"nodeType":"YulCase","src":"17978:242:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"17287:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"17295:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17284:2:21"},"nodeType":"YulFunctionCall","src":"17284:14:21"},"nodeType":"YulSwitch","src":"17277:943:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"16957:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"16963:3:21","type":""}],"src":"16876:1350:21"},{"body":{"nodeType":"YulBlock","src":"18338:87:21","statements":[{"nodeType":"YulAssignment","src":"18348:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18360:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18371:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18356:3:21"},"nodeType":"YulFunctionCall","src":"18356:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18348:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18390:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18405:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"18413:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18401:3:21"},"nodeType":"YulFunctionCall","src":"18401:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18383:6:21"},"nodeType":"YulFunctionCall","src":"18383:36:21"},"nodeType":"YulExpressionStatement","src":"18383:36:21"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18307:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18318:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18329:4:21","type":""}],"src":"18231:194:21"},{"body":{"nodeType":"YulBlock","src":"18531:76:21","statements":[{"nodeType":"YulAssignment","src":"18541:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18553:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18564:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18549:3:21"},"nodeType":"YulFunctionCall","src":"18549:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18541:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18583:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"18594:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18576:6:21"},"nodeType":"YulFunctionCall","src":"18576:25:21"},"nodeType":"YulExpressionStatement","src":"18576:25:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18500:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18511:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18522:4:21","type":""}],"src":"18430:177:21"},{"body":{"nodeType":"YulBlock","src":"18693:170:21","statements":[{"body":{"nodeType":"YulBlock","src":"18739:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18748:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18751:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18741:6:21"},"nodeType":"YulFunctionCall","src":"18741:12:21"},"nodeType":"YulExpressionStatement","src":"18741:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18714:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18723:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18710:3:21"},"nodeType":"YulFunctionCall","src":"18710:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"18735:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18706:3:21"},"nodeType":"YulFunctionCall","src":"18706:32:21"},"nodeType":"YulIf","src":"18703:52:21"},{"nodeType":"YulVariableDeclaration","src":"18764:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18783:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18777:5:21"},"nodeType":"YulFunctionCall","src":"18777:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"18768:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18827:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"18802:24:21"},"nodeType":"YulFunctionCall","src":"18802:31:21"},"nodeType":"YulExpressionStatement","src":"18802:31:21"},{"nodeType":"YulAssignment","src":"18842:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"18852:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18842:6:21"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18659:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18670:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18682:6:21","type":""}],"src":"18612:251:21"},{"body":{"nodeType":"YulBlock","src":"19042:226:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19059:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19070:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19052:6:21"},"nodeType":"YulFunctionCall","src":"19052:21:21"},"nodeType":"YulExpressionStatement","src":"19052:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19093:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19104:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19089:3:21"},"nodeType":"YulFunctionCall","src":"19089:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"19109:2:21","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19082:6:21"},"nodeType":"YulFunctionCall","src":"19082:30:21"},"nodeType":"YulExpressionStatement","src":"19082:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19132:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19143:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19128:3:21"},"nodeType":"YulFunctionCall","src":"19128:18:21"},{"hexValue":"616464726573736573206172726179206c656e677468206d757374206265203c","kind":"string","nodeType":"YulLiteral","src":"19148:34:21","type":"","value":"addresses array length must be <"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19121:6:21"},"nodeType":"YulFunctionCall","src":"19121:62:21"},"nodeType":"YulExpressionStatement","src":"19121:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19203:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19214:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19199:3:21"},"nodeType":"YulFunctionCall","src":"19199:18:21"},{"hexValue":"20313030","kind":"string","nodeType":"YulLiteral","src":"19219:6:21","type":"","value":" 100"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19192:6:21"},"nodeType":"YulFunctionCall","src":"19192:34:21"},"nodeType":"YulExpressionStatement","src":"19192:34:21"},{"nodeType":"YulAssignment","src":"19235:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19247:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19258:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19243:3:21"},"nodeType":"YulFunctionCall","src":"19243:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19235:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_4bd8befa97d8e5bb2f31c0d006a597f1b9f8a94909e1a13c46b5fbe426615cab__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19019:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19033:4:21","type":""}],"src":"18868:400:21"},{"body":{"nodeType":"YulBlock","src":"19500:219:21","statements":[{"nodeType":"YulVariableDeclaration","src":"19510:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19530:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19524:5:21"},"nodeType":"YulFunctionCall","src":"19524:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"19514:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19585:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19593:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19581:3:21"},"nodeType":"YulFunctionCall","src":"19581:17:21"},{"name":"pos","nodeType":"YulIdentifier","src":"19600:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"19605:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"19546:34:21"},"nodeType":"YulFunctionCall","src":"19546:66:21"},"nodeType":"YulExpressionStatement","src":"19546:66:21"},{"nodeType":"YulVariableDeclaration","src":"19621:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19638:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"19643:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19634:3:21"},"nodeType":"YulFunctionCall","src":"19634:16:21"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"19625:5:21","type":""}]},{"expression":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"19666:5:21"},{"hexValue":"6661696c20746f20","kind":"string","nodeType":"YulLiteral","src":"19673:10:21","type":"","value":"fail to "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19659:6:21"},"nodeType":"YulFunctionCall","src":"19659:25:21"},"nodeType":"YulExpressionStatement","src":"19659:25:21"},{"nodeType":"YulAssignment","src":"19693:20:21","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"19704:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"19711:1:21","type":"","value":"8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19700:3:21"},"nodeType":"YulFunctionCall","src":"19700:13:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19693:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr_t_stringliteral_047da255ce7159ed6ea6f856209867e957706bcd0e0dc74eaefbf996e670b8d8__to_t_bytes_memory_ptr_t_bytes8__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19476:3:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19481:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19492:3:21","type":""}],"src":"19273:446:21"},{"body":{"nodeType":"YulBlock","src":"20050:1200:21","statements":[{"nodeType":"YulVariableDeclaration","src":"20060:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20080:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20074:5:21"},"nodeType":"YulFunctionCall","src":"20074:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"20064:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20096:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"20106:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"20100:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20158:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"20166:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20154:3:21"},"nodeType":"YulFunctionCall","src":"20154:15:21"},{"name":"pos","nodeType":"YulIdentifier","src":"20171:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"20176:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"20119:34:21"},"nodeType":"YulFunctionCall","src":"20119:64:21"},"nodeType":"YulExpressionStatement","src":"20119:64:21"},{"nodeType":"YulVariableDeclaration","src":"20192:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20209:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"20214:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20205:3:21"},"nodeType":"YulFunctionCall","src":"20205:16:21"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"20196:5:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20230:12:21","value":{"kind":"number","nodeType":"YulLiteral","src":"20241:1:21","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"20234:3:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20251:30:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20274:6:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"20268:5:21"},"nodeType":"YulFunctionCall","src":"20268:13:21"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"20255:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20290:52:21","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"20332:9:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"20306:25:21"},"nodeType":"YulFunctionCall","src":"20306:36:21"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"20294:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20351:11:21","value":{"kind":"number","nodeType":"YulLiteral","src":"20361:1:21","type":"","value":"1"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"20355:2:21","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"20412:134:21","statements":[{"expression":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"20433:5:21"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"20444:9:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20459:3:21","type":"","value":"255"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20455:3:21"},"nodeType":"YulFunctionCall","src":"20455:8:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20440:3:21"},"nodeType":"YulFunctionCall","src":"20440:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20426:6:21"},"nodeType":"YulFunctionCall","src":"20426:39:21"},"nodeType":"YulExpressionStatement","src":"20426:39:21"},{"nodeType":"YulAssignment","src":"20478:58:21","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"20489:5:21"},{"arguments":[{"name":"length_1","nodeType":"YulIdentifier","src":"20500:8:21"},{"arguments":[{"arguments":[{"name":"length_1","nodeType":"YulIdentifier","src":"20524:8:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20517:6:21"},"nodeType":"YulFunctionCall","src":"20517:16:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20510:6:21"},"nodeType":"YulFunctionCall","src":"20510:24:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20496:3:21"},"nodeType":"YulFunctionCall","src":"20496:39:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20485:3:21"},"nodeType":"YulFunctionCall","src":"20485:51:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20478:3:21"}]}]},"nodeType":"YulCase","src":"20405:141:21","value":{"kind":"number","nodeType":"YulLiteral","src":"20410:1:21","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"20562:330:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20583:1:21","type":"","value":"0"},{"name":"value1","nodeType":"YulIdentifier","src":"20586:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20576:6:21"},"nodeType":"YulFunctionCall","src":"20576:17:21"},"nodeType":"YulExpressionStatement","src":"20576:17:21"},{"nodeType":"YulVariableDeclaration","src":"20606:31:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20631:1:21","type":"","value":"0"},{"name":"_1","nodeType":"YulIdentifier","src":"20634:2:21"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"20621:9:21"},"nodeType":"YulFunctionCall","src":"20621:16:21"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"20610:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20650:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"20659:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"20654:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"20729:113:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"20758:5:21"},{"name":"i","nodeType":"YulIdentifier","src":"20765:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20754:3:21"},"nodeType":"YulFunctionCall","src":"20754:13:21"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"20775:7:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"20769:5:21"},"nodeType":"YulFunctionCall","src":"20769:14:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20747:6:21"},"nodeType":"YulFunctionCall","src":"20747:37:21"},"nodeType":"YulExpressionStatement","src":"20747:37:21"},{"nodeType":"YulAssignment","src":"20801:27:21","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"20816:7:21"},{"name":"_2","nodeType":"YulIdentifier","src":"20825:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20812:3:21"},"nodeType":"YulFunctionCall","src":"20812:16:21"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"20801:7:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20684:1:21"},{"name":"length_1","nodeType":"YulIdentifier","src":"20687:8:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20681:2:21"},"nodeType":"YulFunctionCall","src":"20681:15:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20697:19:21","statements":[{"nodeType":"YulAssignment","src":"20699:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20708:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"20711:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20704:3:21"},"nodeType":"YulFunctionCall","src":"20704:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"20699:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"20677:3:21","statements":[]},"src":"20673:169:21"},{"nodeType":"YulAssignment","src":"20855:27:21","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"20866:5:21"},{"name":"length_1","nodeType":"YulIdentifier","src":"20873:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20862:3:21"},"nodeType":"YulFunctionCall","src":"20862:20:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20855:3:21"}]}]},"nodeType":"YulCase","src":"20555:337:21","value":{"kind":"number","nodeType":"YulLiteral","src":"20560:1:21","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"20382:9:21"},{"name":"_2","nodeType":"YulIdentifier","src":"20393:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20378:3:21"},"nodeType":"YulFunctionCall","src":"20378:18:21"},"nodeType":"YulSwitch","src":"20371:521:21"},{"nodeType":"YulVariableDeclaration","src":"20901:29:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20923:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20917:5:21"},"nodeType":"YulFunctionCall","src":"20917:13:21"},"variables":[{"name":"length_2","nodeType":"YulTypedName","src":"20905:8:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20978:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"20986:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20974:3:21"},"nodeType":"YulFunctionCall","src":"20974:15:21"},{"name":"ret","nodeType":"YulIdentifier","src":"20991:3:21"},{"name":"length_2","nodeType":"YulIdentifier","src":"20996:8:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"20939:34:21"},"nodeType":"YulFunctionCall","src":"20939:66:21"},"nodeType":"YulExpressionStatement","src":"20939:66:21"},{"nodeType":"YulVariableDeclaration","src":"21014:28:21","value":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"21028:3:21"},{"name":"length_2","nodeType":"YulIdentifier","src":"21033:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21024:3:21"},"nodeType":"YulFunctionCall","src":"21024:18:21"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"21018:2:21","type":""}]},{"expression":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"21058:2:21"},{"hexValue":"2e20466f7220646972656374696f6e7320746f2066696e64207468652050726f","kind":"string","nodeType":"YulLiteral","src":"21062:34:21","type":"","value":". For directions to find the Pro"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21051:6:21"},"nodeType":"YulFunctionCall","src":"21051:46:21"},"nodeType":"YulExpressionStatement","src":"21051:46:21"},{"expression":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"21117:2:21"},{"name":"_1","nodeType":"YulIdentifier","src":"21121:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21113:3:21"},"nodeType":"YulFunctionCall","src":"21113:11:21"},{"hexValue":"706f736564204164647265737365732c2073656520496d706c656d656e746174","kind":"string","nodeType":"YulLiteral","src":"21126:34:21","type":"","value":"posed Addresses, see Implementat"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21106:6:21"},"nodeType":"YulFunctionCall","src":"21106:55:21"},"nodeType":"YulExpressionStatement","src":"21106:55:21"},{"expression":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"21181:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"21185:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21177:3:21"},"nodeType":"YulFunctionCall","src":"21177:11:21"},{"hexValue":"696f6e2073656374696f6e206f6620554d49502d3136392e","kind":"string","nodeType":"YulLiteral","src":"21190:26:21","type":"","value":"ion section of UMIP-169."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21170:6:21"},"nodeType":"YulFunctionCall","src":"21170:47:21"},"nodeType":"YulExpressionStatement","src":"21170:47:21"},{"nodeType":"YulAssignment","src":"21226:18:21","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"21237:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"21241:2:21","type":"","value":"88"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21233:3:21"},"nodeType":"YulFunctionCall","src":"21233:11:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21226:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_storage_t_bytes_memory_ptr_t_stringliteral_5a20166ea5c33b0f9b3fada118af4cd1ef04e3d947091a133e81dfe6e694e718__to_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20010:3:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20015:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20023:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20031:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20042:3:21","type":""}],"src":"19724:1526:21"},{"body":{"nodeType":"YulBlock","src":"21434:464:21","statements":[{"nodeType":"YulVariableDeclaration","src":"21444:16:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"21457:3:21"},"variables":[{"name":"pos_1","nodeType":"YulTypedName","src":"21448:5:21","type":""}]},{"nodeType":"YulAssignment","src":"21469:12:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"21478:3:21"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"21469:5:21"}]},{"nodeType":"YulVariableDeclaration","src":"21490:20:21","value":{"name":"value0","nodeType":"YulIdentifier","src":"21504:6:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"21494:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21519:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"21528:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"21523:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"21587:284:21","statements":[{"nodeType":"YulVariableDeclaration","src":"21601:33:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"21627:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21614:12:21"},"nodeType":"YulFunctionCall","src":"21614:20:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"21605:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21672:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"21647:24:21"},"nodeType":"YulFunctionCall","src":"21647:31:21"},"nodeType":"YulExpressionStatement","src":"21647:31:21"},{"expression":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"21698:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21709:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"21716:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21705:3:21"},"nodeType":"YulFunctionCall","src":"21705:54:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21691:6:21"},"nodeType":"YulFunctionCall","src":"21691:69:21"},"nodeType":"YulExpressionStatement","src":"21691:69:21"},{"nodeType":"YulVariableDeclaration","src":"21773:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"21783:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"21777:2:21","type":""}]},{"nodeType":"YulAssignment","src":"21800:23:21","value":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"21813:5:21"},{"name":"_1","nodeType":"YulIdentifier","src":"21820:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21809:3:21"},"nodeType":"YulFunctionCall","src":"21809:14:21"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"21800:5:21"}]},{"nodeType":"YulAssignment","src":"21836:25:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"21850:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"21858:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21846:3:21"},"nodeType":"YulFunctionCall","src":"21846:15:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"21836:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21549:1:21"},{"name":"value1","nodeType":"YulIdentifier","src":"21552:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21546:2:21"},"nodeType":"YulFunctionCall","src":"21546:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"21560:18:21","statements":[{"nodeType":"YulAssignment","src":"21562:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21571:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"21574:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21567:3:21"},"nodeType":"YulFunctionCall","src":"21567:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"21562:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"21542:3:21","statements":[]},"src":"21538:333:21"},{"nodeType":"YulAssignment","src":"21880:12:21","value":{"name":"pos_1","nodeType":"YulIdentifier","src":"21887:5:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21880:3:21"}]}]},"name":"abi_encode_tuple_packed_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21402:3:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21407:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21415:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21426:3:21","type":""}],"src":"21255:643:21"},{"body":{"nodeType":"YulBlock","src":"22156:323:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22173:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"22184:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22166:6:21"},"nodeType":"YulFunctionCall","src":"22166:25:21"},"nodeType":"YulExpressionStatement","src":"22166:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22211:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22222:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22207:3:21"},"nodeType":"YulFunctionCall","src":"22207:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"22227:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22200:6:21"},"nodeType":"YulFunctionCall","src":"22200:34:21"},"nodeType":"YulExpressionStatement","src":"22200:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22254:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22265:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22250:3:21"},"nodeType":"YulFunctionCall","src":"22250:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"22270:3:21","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22243:6:21"},"nodeType":"YulFunctionCall","src":"22243:31:21"},"nodeType":"YulExpressionStatement","src":"22243:31:21"},{"nodeType":"YulAssignment","src":"22283:54:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22309:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22321:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22332:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22317:3:21"},"nodeType":"YulFunctionCall","src":"22317:19:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"22291:17:21"},"nodeType":"YulFunctionCall","src":"22291:46:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22283:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22357:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22368:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22353:3:21"},"nodeType":"YulFunctionCall","src":"22353:18:21"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22377:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"22385:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22373:3:21"},"nodeType":"YulFunctionCall","src":"22373:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22346:6:21"},"nodeType":"YulFunctionCall","src":"22346:83:21"},"nodeType":"YulExpressionStatement","src":"22346:83:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22449:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22460:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22445:3:21"},"nodeType":"YulFunctionCall","src":"22445:19:21"},{"name":"value4","nodeType":"YulIdentifier","src":"22466:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22438:6:21"},"nodeType":"YulFunctionCall","src":"22438:35:21"},"nodeType":"YulExpressionStatement","src":"22438:35:21"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_bytes_memory_ptr_t_contract$_IERC20_$439_t_rational_0_by_1__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22093:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22104:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22112:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22120:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22128:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22136:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22147:4:21","type":""}],"src":"21903:576:21"},{"body":{"nodeType":"YulBlock","src":"22565:103:21","statements":[{"body":{"nodeType":"YulBlock","src":"22611:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22620:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22623:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22613:6:21"},"nodeType":"YulFunctionCall","src":"22613:12:21"},"nodeType":"YulExpressionStatement","src":"22613:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22586:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"22595:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22582:3:21"},"nodeType":"YulFunctionCall","src":"22582:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"22607:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22578:3:21"},"nodeType":"YulFunctionCall","src":"22578:32:21"},"nodeType":"YulIf","src":"22575:52:21"},{"nodeType":"YulAssignment","src":"22636:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22652:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22646:5:21"},"nodeType":"YulFunctionCall","src":"22646:16:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22636:6:21"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22531:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22542:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22554:6:21","type":""}],"src":"22484:184:21"},{"body":{"nodeType":"YulBlock","src":"22914:366:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22931:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"22942:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22924:6:21"},"nodeType":"YulFunctionCall","src":"22924:25:21"},"nodeType":"YulExpressionStatement","src":"22924:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22969:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22980:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22965:3:21"},"nodeType":"YulFunctionCall","src":"22965:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"22985:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22958:6:21"},"nodeType":"YulFunctionCall","src":"22958:34:21"},"nodeType":"YulExpressionStatement","src":"22958:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23012:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23023:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23008:3:21"},"nodeType":"YulFunctionCall","src":"23008:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"23028:3:21","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23001:6:21"},"nodeType":"YulFunctionCall","src":"23001:31:21"},"nodeType":"YulExpressionStatement","src":"23001:31:21"},{"nodeType":"YulAssignment","src":"23041:54:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23067:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23079:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23090:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23075:3:21"},"nodeType":"YulFunctionCall","src":"23075:19:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"23049:17:21"},"nodeType":"YulFunctionCall","src":"23049:46:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23041:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23115:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23126:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23111:3:21"},"nodeType":"YulFunctionCall","src":"23111:18:21"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23145:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23138:6:21"},"nodeType":"YulFunctionCall","src":"23138:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23131:6:21"},"nodeType":"YulFunctionCall","src":"23131:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23104:6:21"},"nodeType":"YulFunctionCall","src":"23104:50:21"},"nodeType":"YulExpressionStatement","src":"23104:50:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23174:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23185:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23170:3:21"},"nodeType":"YulFunctionCall","src":"23170:19:21"},{"arguments":[{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"23205:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23198:6:21"},"nodeType":"YulFunctionCall","src":"23198:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23191:6:21"},"nodeType":"YulFunctionCall","src":"23191:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23163:6:21"},"nodeType":"YulFunctionCall","src":"23163:51:21"},"nodeType":"YulExpressionStatement","src":"23163:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23234:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23245:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23230:3:21"},"nodeType":"YulFunctionCall","src":"23230:19:21"},{"arguments":[{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"23265:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23258:6:21"},"nodeType":"YulFunctionCall","src":"23258:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23251:6:21"},"nodeType":"YulFunctionCall","src":"23251:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23223:6:21"},"nodeType":"YulFunctionCall","src":"23223:51:21"},"nodeType":"YulExpressionStatement","src":"23223:51:21"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_bytes_memory_ptr_t_bool_t_bool_t_bool__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_bool_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22843:9:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"22854:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22862:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22870:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22878:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22886:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22894:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22905:4:21","type":""}],"src":"22673:607:21"},{"body":{"nodeType":"YulBlock","src":"23487:255:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23504:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"23515:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23497:6:21"},"nodeType":"YulFunctionCall","src":"23497:25:21"},"nodeType":"YulExpressionStatement","src":"23497:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23542:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23553:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23538:3:21"},"nodeType":"YulFunctionCall","src":"23538:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"23558:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23531:6:21"},"nodeType":"YulFunctionCall","src":"23531:34:21"},"nodeType":"YulExpressionStatement","src":"23531:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23585:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23596:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23581:3:21"},"nodeType":"YulFunctionCall","src":"23581:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"23601:3:21","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23574:6:21"},"nodeType":"YulFunctionCall","src":"23574:31:21"},"nodeType":"YulExpressionStatement","src":"23574:31:21"},{"nodeType":"YulAssignment","src":"23614:54:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23640:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23652:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23663:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23648:3:21"},"nodeType":"YulFunctionCall","src":"23648:19:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"23622:17:21"},"nodeType":"YulFunctionCall","src":"23622:46:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23614:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23688:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23699:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23684:3:21"},"nodeType":"YulFunctionCall","src":"23684:18:21"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23708:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"23716:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23704:3:21"},"nodeType":"YulFunctionCall","src":"23704:31:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23677:6:21"},"nodeType":"YulFunctionCall","src":"23677:59:21"},"nodeType":"YulExpressionStatement","src":"23677:59:21"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint64__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23432:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23443:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23451:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23459:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23467:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23478:4:21","type":""}],"src":"23285:457:21"},{"body":{"nodeType":"YulBlock","src":"23950:230:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23967:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"23978:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23960:6:21"},"nodeType":"YulFunctionCall","src":"23960:25:21"},"nodeType":"YulExpressionStatement","src":"23960:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24005:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24016:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24001:3:21"},"nodeType":"YulFunctionCall","src":"24001:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"24021:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23994:6:21"},"nodeType":"YulFunctionCall","src":"23994:34:21"},"nodeType":"YulExpressionStatement","src":"23994:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24048:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24059:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24044:3:21"},"nodeType":"YulFunctionCall","src":"24044:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"24064:3:21","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24037:6:21"},"nodeType":"YulFunctionCall","src":"24037:31:21"},"nodeType":"YulExpressionStatement","src":"24037:31:21"},{"nodeType":"YulAssignment","src":"24077:54:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24103:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24115:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24126:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24111:3:21"},"nodeType":"YulFunctionCall","src":"24111:19:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"24085:17:21"},"nodeType":"YulFunctionCall","src":"24085:46:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24077:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24151:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24162:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24147:3:21"},"nodeType":"YulFunctionCall","src":"24147:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"24167:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24140:6:21"},"nodeType":"YulFunctionCall","src":"24140:34:21"},"nodeType":"YulExpressionStatement","src":"24140:34:21"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23895:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23906:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23914:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23922:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23930:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23941:4:21","type":""}],"src":"23747:433:21"},{"body":{"nodeType":"YulBlock","src":"24442:397:21","statements":[{"nodeType":"YulVariableDeclaration","src":"24452:52:21","value":{"kind":"number","nodeType":"YulLiteral","src":"24462:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"24456:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24520:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24535:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"24543:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24531:3:21"},"nodeType":"YulFunctionCall","src":"24531:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24513:6:21"},"nodeType":"YulFunctionCall","src":"24513:34:21"},"nodeType":"YulExpressionStatement","src":"24513:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24567:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24578:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24563:3:21"},"nodeType":"YulFunctionCall","src":"24563:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24587:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"24595:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24583:3:21"},"nodeType":"YulFunctionCall","src":"24583:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24556:6:21"},"nodeType":"YulFunctionCall","src":"24556:43:21"},"nodeType":"YulExpressionStatement","src":"24556:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24619:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24630:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24615:3:21"},"nodeType":"YulFunctionCall","src":"24615:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"24635:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24608:6:21"},"nodeType":"YulFunctionCall","src":"24608:34:21"},"nodeType":"YulExpressionStatement","src":"24608:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24662:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24673:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24658:3:21"},"nodeType":"YulFunctionCall","src":"24658:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"24678:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24651:6:21"},"nodeType":"YulFunctionCall","src":"24651:34:21"},"nodeType":"YulExpressionStatement","src":"24651:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24705:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24716:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24701:3:21"},"nodeType":"YulFunctionCall","src":"24701:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"24722:3:21","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24694:6:21"},"nodeType":"YulFunctionCall","src":"24694:32:21"},"nodeType":"YulExpressionStatement","src":"24694:32:21"},{"nodeType":"YulAssignment","src":"24735:54:21","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"24761:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24773:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24784:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24769:3:21"},"nodeType":"YulFunctionCall","src":"24769:19:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"24743:17:21"},"nodeType":"YulFunctionCall","src":"24743:46:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24735:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24809:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24820:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24805:3:21"},"nodeType":"YulFunctionCall","src":"24805:19:21"},{"name":"value5","nodeType":"YulIdentifier","src":"24826:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24798:6:21"},"nodeType":"YulFunctionCall","src":"24798:35:21"},"nodeType":"YulExpressionStatement","src":"24798:35:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_bytes32_t_uint256_t_bytes_memory_ptr_t_int256__to_t_address_t_address_t_bytes32_t_uint256_t_bytes_memory_ptr_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24371:9:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"24382:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24390:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24398:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24406:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24414:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24422:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24433:4:21","type":""}],"src":"24185:654:21"},{"body":{"nodeType":"YulBlock","src":"25048:632:21","statements":[{"nodeType":"YulVariableDeclaration","src":"25058:32:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25076:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25087:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25072:3:21"},"nodeType":"YulFunctionCall","src":"25072:18:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"25062:6:21","type":""}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25128:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"25136:9:21"}],"functionName":{"name":"abi_encode_enum_RevisionType","nodeType":"YulIdentifier","src":"25099:28:21"},"nodeType":"YulFunctionCall","src":"25099:47:21"},"nodeType":"YulExpressionStatement","src":"25099:47:21"},{"nodeType":"YulVariableDeclaration","src":"25155:12:21","value":{"kind":"number","nodeType":"YulLiteral","src":"25165:2:21","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"25159:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25187:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"25198:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25183:3:21"},"nodeType":"YulFunctionCall","src":"25183:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"25203:2:21","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25176:6:21"},"nodeType":"YulFunctionCall","src":"25176:30:21"},"nodeType":"YulExpressionStatement","src":"25176:30:21"},{"nodeType":"YulVariableDeclaration","src":"25215:17:21","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"25226:6:21"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"25219:3:21","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"25248:6:21"},{"name":"value2","nodeType":"YulIdentifier","src":"25256:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25241:6:21"},"nodeType":"YulFunctionCall","src":"25241:22:21"},"nodeType":"YulExpressionStatement","src":"25241:22:21"},{"nodeType":"YulAssignment","src":"25272:25:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25283:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25294:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25279:3:21"},"nodeType":"YulFunctionCall","src":"25279:18:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25272:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"25306:20:21","value":{"name":"value1","nodeType":"YulIdentifier","src":"25320:6:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"25310:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25335:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"25344:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"25339:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"25403:251:21","statements":[{"nodeType":"YulVariableDeclaration","src":"25417:33:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"25443:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25430:12:21"},"nodeType":"YulFunctionCall","src":"25430:20:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"25421:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25488:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"25463:24:21"},"nodeType":"YulFunctionCall","src":"25463:31:21"},"nodeType":"YulExpressionStatement","src":"25463:31:21"},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25514:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25523:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"25530:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25519:3:21"},"nodeType":"YulFunctionCall","src":"25519:54:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25507:6:21"},"nodeType":"YulFunctionCall","src":"25507:67:21"},"nodeType":"YulExpressionStatement","src":"25507:67:21"},{"nodeType":"YulAssignment","src":"25587:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25598:3:21"},{"name":"_1","nodeType":"YulIdentifier","src":"25603:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25594:3:21"},"nodeType":"YulFunctionCall","src":"25594:12:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25587:3:21"}]},{"nodeType":"YulAssignment","src":"25619:25:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"25633:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"25641:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25629:3:21"},"nodeType":"YulFunctionCall","src":"25629:15:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"25619:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25365:1:21"},{"name":"value2","nodeType":"YulIdentifier","src":"25368:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25362:2:21"},"nodeType":"YulFunctionCall","src":"25362:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"25376:18:21","statements":[{"nodeType":"YulAssignment","src":"25378:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25387:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"25390:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25383:3:21"},"nodeType":"YulFunctionCall","src":"25383:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"25378:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"25358:3:21","statements":[]},"src":"25354:300:21"},{"nodeType":"YulAssignment","src":"25663:11:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"25671:3:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25663:4:21"}]}]},"name":"abi_encode_tuple_t_enum$_RevisionType_$4142_t_array$_t_address_$dyn_calldata_ptr__to_t_uint8_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25001:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25012:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25020:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25028:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25039:4:21","type":""}],"src":"24844:836:21"},{"body":{"nodeType":"YulBlock","src":"25717:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25734:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25737:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25727:6:21"},"nodeType":"YulFunctionCall","src":"25727:88:21"},"nodeType":"YulExpressionStatement","src":"25727:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25831:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25834:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25824:6:21"},"nodeType":"YulFunctionCall","src":"25824:15:21"},"nodeType":"YulExpressionStatement","src":"25824:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25855:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25858:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25848:6:21"},"nodeType":"YulFunctionCall","src":"25848:15:21"},"nodeType":"YulExpressionStatement","src":"25848:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"25685:184:21"},{"body":{"nodeType":"YulBlock","src":"25921:88:21","statements":[{"body":{"nodeType":"YulBlock","src":"25952:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25954:16:21"},"nodeType":"YulFunctionCall","src":"25954:18:21"},"nodeType":"YulExpressionStatement","src":"25954:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25937:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25948:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"25944:3:21"},"nodeType":"YulFunctionCall","src":"25944:6:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25934:2:21"},"nodeType":"YulFunctionCall","src":"25934:17:21"},"nodeType":"YulIf","src":"25931:43:21"},{"nodeType":"YulAssignment","src":"25983:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25994:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"26001:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25990:3:21"},"nodeType":"YulFunctionCall","src":"25990:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"25983:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25903:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"25913:3:21","type":""}],"src":"25874:135:21"},{"body":{"nodeType":"YulBlock","src":"26188:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26205:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26216:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26198:6:21"},"nodeType":"YulFunctionCall","src":"26198:21:21"},"nodeType":"YulExpressionStatement","src":"26198:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26239:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26250:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26235:3:21"},"nodeType":"YulFunctionCall","src":"26235:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"26255:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26228:6:21"},"nodeType":"YulFunctionCall","src":"26228:30:21"},"nodeType":"YulExpressionStatement","src":"26228:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26278:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26289:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26274:3:21"},"nodeType":"YulFunctionCall","src":"26274:18:21"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"26294:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26267:6:21"},"nodeType":"YulFunctionCall","src":"26267:62:21"},"nodeType":"YulExpressionStatement","src":"26267:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26349:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26360:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26345:3:21"},"nodeType":"YulFunctionCall","src":"26345:18:21"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"26365:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26338:6:21"},"nodeType":"YulFunctionCall","src":"26338:36:21"},"nodeType":"YulExpressionStatement","src":"26338:36:21"},{"nodeType":"YulAssignment","src":"26383:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26395:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26406:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26391:3:21"},"nodeType":"YulFunctionCall","src":"26391:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26383:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26165:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26179:4:21","type":""}],"src":"26014:402:21"},{"body":{"nodeType":"YulBlock","src":"26595:176:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26612:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26623:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26605:6:21"},"nodeType":"YulFunctionCall","src":"26605:21:21"},"nodeType":"YulExpressionStatement","src":"26605:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26646:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26657:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26642:3:21"},"nodeType":"YulFunctionCall","src":"26642:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"26662:2:21","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26635:6:21"},"nodeType":"YulFunctionCall","src":"26635:30:21"},"nodeType":"YulExpressionStatement","src":"26635:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26685:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26696:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26681:3:21"},"nodeType":"YulFunctionCall","src":"26681:18:21"},{"hexValue":"7265766973696f6e4964206973206e6f7420617070726f766564","kind":"string","nodeType":"YulLiteral","src":"26701:28:21","type":"","value":"revisionId is not approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26674:6:21"},"nodeType":"YulFunctionCall","src":"26674:56:21"},"nodeType":"YulExpressionStatement","src":"26674:56:21"},{"nodeType":"YulAssignment","src":"26739:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26751:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26762:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26747:3:21"},"nodeType":"YulFunctionCall","src":"26747:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26739:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_bc85443d2dadaa51fb6c0191ee754fd345bd245be5525b0cd8d4d9df1755026b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26572:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26586:4:21","type":""}],"src":"26421:350:21"},{"body":{"nodeType":"YulBlock","src":"26950:237:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26967:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26978:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26960:6:21"},"nodeType":"YulFunctionCall","src":"26960:21:21"},"nodeType":"YulExpressionStatement","src":"26960:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27001:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27012:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26997:3:21"},"nodeType":"YulFunctionCall","src":"26997:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"27017:2:21","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26990:6:21"},"nodeType":"YulFunctionCall","src":"26990:30:21"},"nodeType":"YulExpressionStatement","src":"26990:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27040:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27051:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27036:3:21"},"nodeType":"YulFunctionCall","src":"27036:18:21"},{"hexValue":"68617368206f662061646472657373657320213d207265766973696f6e496427","kind":"string","nodeType":"YulLiteral","src":"27056:34:21","type":"","value":"hash of addresses != revisionId'"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27029:6:21"},"nodeType":"YulFunctionCall","src":"27029:62:21"},"nodeType":"YulExpressionStatement","src":"27029:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27111:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27122:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27107:3:21"},"nodeType":"YulFunctionCall","src":"27107:18:21"},{"hexValue":"732061646472657373657348617368","kind":"string","nodeType":"YulLiteral","src":"27127:17:21","type":"","value":"s addressesHash"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27100:6:21"},"nodeType":"YulFunctionCall","src":"27100:45:21"},"nodeType":"YulExpressionStatement","src":"27100:45:21"},{"nodeType":"YulAssignment","src":"27154:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27166:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27177:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27162:3:21"},"nodeType":"YulFunctionCall","src":"27162:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27154:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d075603a1671628c3e8a050324d6f35e6442672815a752252f84ad5249c9515__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26927:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26941:4:21","type":""}],"src":"26776:411:21"},{"body":{"nodeType":"YulBlock","src":"27224:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27241:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27244:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27234:6:21"},"nodeType":"YulFunctionCall","src":"27234:88:21"},"nodeType":"YulExpressionStatement","src":"27234:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27338:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27341:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27331:6:21"},"nodeType":"YulFunctionCall","src":"27331:15:21"},"nodeType":"YulExpressionStatement","src":"27331:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27362:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27365:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27355:6:21"},"nodeType":"YulFunctionCall","src":"27355:15:21"},"nodeType":"YulExpressionStatement","src":"27355:15:21"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"27192:184:21"},{"body":{"nodeType":"YulBlock","src":"27433:116:21","statements":[{"nodeType":"YulAssignment","src":"27443:20:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27458:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"27461:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27454:3:21"},"nodeType":"YulFunctionCall","src":"27454:9:21"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"27443:7:21"}]},{"body":{"nodeType":"YulBlock","src":"27521:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27523:16:21"},"nodeType":"YulFunctionCall","src":"27523:18:21"},"nodeType":"YulExpressionStatement","src":"27523:18:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27492:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27485:6:21"},"nodeType":"YulFunctionCall","src":"27485:9:21"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27499:1:21"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"27506:7:21"},{"name":"x","nodeType":"YulIdentifier","src":"27515:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"27502:3:21"},"nodeType":"YulFunctionCall","src":"27502:15:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"27496:2:21"},"nodeType":"YulFunctionCall","src":"27496:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"27482:2:21"},"nodeType":"YulFunctionCall","src":"27482:37:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27475:6:21"},"nodeType":"YulFunctionCall","src":"27475:45:21"},"nodeType":"YulIf","src":"27472:71:21"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27412:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"27415:1:21","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"27421:7:21","type":""}],"src":"27381:168:21"},{"body":{"nodeType":"YulBlock","src":"27748:595:21","statements":[{"nodeType":"YulVariableDeclaration","src":"27758:32:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27776:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27787:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27772:3:21"},"nodeType":"YulFunctionCall","src":"27772:18:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"27762:6:21","type":""}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27828:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"27836:9:21"}],"functionName":{"name":"abi_encode_enum_RevisionType","nodeType":"YulIdentifier","src":"27799:28:21"},"nodeType":"YulFunctionCall","src":"27799:47:21"},"nodeType":"YulExpressionStatement","src":"27799:47:21"},{"nodeType":"YulVariableDeclaration","src":"27855:12:21","value":{"kind":"number","nodeType":"YulLiteral","src":"27865:2:21","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"27859:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27887:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"27898:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27883:3:21"},"nodeType":"YulFunctionCall","src":"27883:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"27903:2:21","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27876:6:21"},"nodeType":"YulFunctionCall","src":"27876:30:21"},"nodeType":"YulExpressionStatement","src":"27876:30:21"},{"nodeType":"YulVariableDeclaration","src":"27915:17:21","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"27926:6:21"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"27919:3:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"27941:27:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27961:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27955:5:21"},"nodeType":"YulFunctionCall","src":"27955:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"27945:6:21","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"27984:6:21"},{"name":"length","nodeType":"YulIdentifier","src":"27992:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27977:6:21"},"nodeType":"YulFunctionCall","src":"27977:22:21"},"nodeType":"YulExpressionStatement","src":"27977:22:21"},{"nodeType":"YulAssignment","src":"28008:25:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28019:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28030:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28015:3:21"},"nodeType":"YulFunctionCall","src":"28015:18:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28008:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"28042:29:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28060:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"28068:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28056:3:21"},"nodeType":"YulFunctionCall","src":"28056:15:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"28046:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28080:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"28089:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"28084:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"28148:169:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28169:3:21"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"28184:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28178:5:21"},"nodeType":"YulFunctionCall","src":"28178:13:21"},{"kind":"number","nodeType":"YulLiteral","src":"28193:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28174:3:21"},"nodeType":"YulFunctionCall","src":"28174:62:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28162:6:21"},"nodeType":"YulFunctionCall","src":"28162:75:21"},"nodeType":"YulExpressionStatement","src":"28162:75:21"},{"nodeType":"YulAssignment","src":"28250:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28261:3:21"},{"name":"_1","nodeType":"YulIdentifier","src":"28266:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28257:3:21"},"nodeType":"YulFunctionCall","src":"28257:12:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28250:3:21"}]},{"nodeType":"YulAssignment","src":"28282:25:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"28296:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"28304:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28292:3:21"},"nodeType":"YulFunctionCall","src":"28292:15:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"28282:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"28110:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"28113:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28107:2:21"},"nodeType":"YulFunctionCall","src":"28107:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"28121:18:21","statements":[{"nodeType":"YulAssignment","src":"28123:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"28132:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"28135:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28128:3:21"},"nodeType":"YulFunctionCall","src":"28128:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"28123:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"28103:3:21","statements":[]},"src":"28099:218:21"},{"nodeType":"YulAssignment","src":"28326:11:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"28334:3:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28326:4:21"}]}]},"name":"abi_encode_tuple_t_enum$_RevisionType_$4142_t_array$_t_address_$dyn_memory_ptr__to_t_uint8_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27709:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27720:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27728:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27739:4:21","type":""}],"src":"27554:789:21"},{"body":{"nodeType":"YulBlock","src":"28522:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28539:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28550:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28532:6:21"},"nodeType":"YulFunctionCall","src":"28532:21:21"},"nodeType":"YulExpressionStatement","src":"28532:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28573:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28584:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28569:3:21"},"nodeType":"YulFunctionCall","src":"28569:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"28589:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28562:6:21"},"nodeType":"YulFunctionCall","src":"28562:30:21"},"nodeType":"YulExpressionStatement","src":"28562:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28612:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28623:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28608:3:21"},"nodeType":"YulFunctionCall","src":"28608:18:21"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"28628:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28601:6:21"},"nodeType":"YulFunctionCall","src":"28601:62:21"},"nodeType":"YulExpressionStatement","src":"28601:62:21"},{"nodeType":"YulAssignment","src":"28672:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28684:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28695:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28680:3:21"},"nodeType":"YulFunctionCall","src":"28680:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28672:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28499:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28513:4:21","type":""}],"src":"28348:356:21"},{"body":{"nodeType":"YulBlock","src":"28838:168:21","statements":[{"nodeType":"YulAssignment","src":"28848:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28860:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28871:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28856:3:21"},"nodeType":"YulFunctionCall","src":"28856:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28848:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28890:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28905:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28913:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28901:3:21"},"nodeType":"YulFunctionCall","src":"28901:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28883:6:21"},"nodeType":"YulFunctionCall","src":"28883:74:21"},"nodeType":"YulExpressionStatement","src":"28883:74:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28977:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28988:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28973:3:21"},"nodeType":"YulFunctionCall","src":"28973:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"28993:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28966:6:21"},"nodeType":"YulFunctionCall","src":"28966:34:21"},"nodeType":"YulExpressionStatement","src":"28966:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28799:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28810:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28818:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28829:4:21","type":""}],"src":"28709:297:21"},{"body":{"nodeType":"YulBlock","src":"29057:228:21","statements":[{"body":{"nodeType":"YulBlock","src":"29088:168:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29109:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29112:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29102:6:21"},"nodeType":"YulFunctionCall","src":"29102:88:21"},"nodeType":"YulExpressionStatement","src":"29102:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29210:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"29213:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29203:6:21"},"nodeType":"YulFunctionCall","src":"29203:15:21"},"nodeType":"YulExpressionStatement","src":"29203:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29238:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29241:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29231:6:21"},"nodeType":"YulFunctionCall","src":"29231:15:21"},"nodeType":"YulExpressionStatement","src":"29231:15:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29077:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29070:6:21"},"nodeType":"YulFunctionCall","src":"29070:9:21"},"nodeType":"YulIf","src":"29067:189:21"},{"nodeType":"YulAssignment","src":"29265:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29274:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"29277:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"29270:3:21"},"nodeType":"YulFunctionCall","src":"29270:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"29265:1:21"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29042:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"29045:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"29051:1:21","type":""}],"src":"29011:274:21"},{"body":{"nodeType":"YulBlock","src":"29339:79:21","statements":[{"nodeType":"YulAssignment","src":"29349:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29361:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"29364:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29357:3:21"},"nodeType":"YulFunctionCall","src":"29357:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"29349:4:21"}]},{"body":{"nodeType":"YulBlock","src":"29390:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29392:16:21"},"nodeType":"YulFunctionCall","src":"29392:18:21"},"nodeType":"YulExpressionStatement","src":"29392:18:21"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"29381:4:21"},{"name":"x","nodeType":"YulIdentifier","src":"29387:1:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29378:2:21"},"nodeType":"YulFunctionCall","src":"29378:11:21"},"nodeType":"YulIf","src":"29375:37:21"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29321:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"29324:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"29330:4:21","type":""}],"src":"29290:128:21"},{"body":{"nodeType":"YulBlock","src":"29469:102:21","statements":[{"nodeType":"YulAssignment","src":"29479:38:21","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29494:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"29497:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29490:3:21"},"nodeType":"YulFunctionCall","src":"29490:12:21"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29508:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"29511:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29504:3:21"},"nodeType":"YulFunctionCall","src":"29504:12:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29486:3:21"},"nodeType":"YulFunctionCall","src":"29486:31:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"29479:3:21"}]},{"body":{"nodeType":"YulBlock","src":"29543:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29545:16:21"},"nodeType":"YulFunctionCall","src":"29545:18:21"},"nodeType":"YulExpressionStatement","src":"29545:18:21"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"29532:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"29537:4:21","type":"","value":"0xff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29529:2:21"},"nodeType":"YulFunctionCall","src":"29529:13:21"},"nodeType":"YulIf","src":"29526:39:21"}]},"name":"checked_add_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29452:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"29455:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"29461:3:21","type":""}],"src":"29423:148:21"},{"body":{"nodeType":"YulBlock","src":"29733:241:21","statements":[{"nodeType":"YulAssignment","src":"29743:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29755:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29766:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29751:3:21"},"nodeType":"YulFunctionCall","src":"29751:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29743:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"29778:52:21","value":{"kind":"number","nodeType":"YulLiteral","src":"29788:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"29782:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29846:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29861:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"29869:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29857:3:21"},"nodeType":"YulFunctionCall","src":"29857:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29839:6:21"},"nodeType":"YulFunctionCall","src":"29839:34:21"},"nodeType":"YulExpressionStatement","src":"29839:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29893:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29904:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29889:3:21"},"nodeType":"YulFunctionCall","src":"29889:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29913:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"29921:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29909:3:21"},"nodeType":"YulFunctionCall","src":"29909:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29882:6:21"},"nodeType":"YulFunctionCall","src":"29882:43:21"},"nodeType":"YulExpressionStatement","src":"29882:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29945:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29956:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29941:3:21"},"nodeType":"YulFunctionCall","src":"29941:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"29961:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29934:6:21"},"nodeType":"YulFunctionCall","src":"29934:34:21"},"nodeType":"YulExpressionStatement","src":"29934:34:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29686:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"29697:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29705:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29713:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29724:4:21","type":""}],"src":"29576:398:21"},{"body":{"nodeType":"YulBlock","src":"30108:198:21","statements":[{"nodeType":"YulAssignment","src":"30118:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30130:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30141:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30126:3:21"},"nodeType":"YulFunctionCall","src":"30126:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30118:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"30153:52:21","value":{"kind":"number","nodeType":"YulLiteral","src":"30163:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"30157:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30221:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30236:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"30244:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30232:3:21"},"nodeType":"YulFunctionCall","src":"30232:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30214:6:21"},"nodeType":"YulFunctionCall","src":"30214:34:21"},"nodeType":"YulExpressionStatement","src":"30214:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30268:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30279:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30264:3:21"},"nodeType":"YulFunctionCall","src":"30264:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30288:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"30296:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30284:3:21"},"nodeType":"YulFunctionCall","src":"30284:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30257:6:21"},"nodeType":"YulFunctionCall","src":"30257:43:21"},"nodeType":"YulExpressionStatement","src":"30257:43:21"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30069:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30080:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30088:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30099:4:21","type":""}],"src":"29979:327:21"},{"body":{"nodeType":"YulBlock","src":"30485:244:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30502:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30513:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30495:6:21"},"nodeType":"YulFunctionCall","src":"30495:21:21"},"nodeType":"YulExpressionStatement","src":"30495:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30536:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30547:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30532:3:21"},"nodeType":"YulFunctionCall","src":"30532:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"30552:2:21","type":"","value":"54"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30525:6:21"},"nodeType":"YulFunctionCall","src":"30525:30:21"},"nodeType":"YulExpressionStatement","src":"30525:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30575:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30586:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30571:3:21"},"nodeType":"YulFunctionCall","src":"30571:18:21"},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f","kind":"string","nodeType":"YulLiteral","src":"30591:34:21","type":"","value":"SafeERC20: approve from non-zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30564:6:21"},"nodeType":"YulFunctionCall","src":"30564:62:21"},"nodeType":"YulExpressionStatement","src":"30564:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30646:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30657:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30642:3:21"},"nodeType":"YulFunctionCall","src":"30642:18:21"},{"hexValue":"20746f206e6f6e2d7a65726f20616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"30662:24:21","type":"","value":" to non-zero allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30635:6:21"},"nodeType":"YulFunctionCall","src":"30635:52:21"},"nodeType":"YulExpressionStatement","src":"30635:52:21"},{"nodeType":"YulAssignment","src":"30696:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30708:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30719:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30704:3:21"},"nodeType":"YulFunctionCall","src":"30704:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30696:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30462:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30476:4:21","type":""}],"src":"30311:418:21"},{"body":{"nodeType":"YulBlock","src":"30812:199:21","statements":[{"body":{"nodeType":"YulBlock","src":"30858:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30867:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30870:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30860:6:21"},"nodeType":"YulFunctionCall","src":"30860:12:21"},"nodeType":"YulExpressionStatement","src":"30860:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"30833:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"30842:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30829:3:21"},"nodeType":"YulFunctionCall","src":"30829:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"30854:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"30825:3:21"},"nodeType":"YulFunctionCall","src":"30825:32:21"},"nodeType":"YulIf","src":"30822:52:21"},{"nodeType":"YulVariableDeclaration","src":"30883:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30902:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30896:5:21"},"nodeType":"YulFunctionCall","src":"30896:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"30887:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"30965:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30974:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30977:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30967:6:21"},"nodeType":"YulFunctionCall","src":"30967:12:21"},"nodeType":"YulExpressionStatement","src":"30967:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30934:5:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30955:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30948:6:21"},"nodeType":"YulFunctionCall","src":"30948:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30941:6:21"},"nodeType":"YulFunctionCall","src":"30941:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"30931:2:21"},"nodeType":"YulFunctionCall","src":"30931:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30924:6:21"},"nodeType":"YulFunctionCall","src":"30924:40:21"},"nodeType":"YulIf","src":"30921:60:21"},{"nodeType":"YulAssignment","src":"30990:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"31000:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"30990:6:21"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30778:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"30789:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"30801:6:21","type":""}],"src":"30734:277:21"},{"body":{"nodeType":"YulBlock","src":"31190:232:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31207:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31218:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31200:6:21"},"nodeType":"YulFunctionCall","src":"31200:21:21"},"nodeType":"YulExpressionStatement","src":"31200:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31241:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31252:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31237:3:21"},"nodeType":"YulFunctionCall","src":"31237:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"31257:2:21","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31230:6:21"},"nodeType":"YulFunctionCall","src":"31230:30:21"},"nodeType":"YulExpressionStatement","src":"31230:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31280:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31291:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31276:3:21"},"nodeType":"YulFunctionCall","src":"31276:18:21"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"31296:34:21","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31269:6:21"},"nodeType":"YulFunctionCall","src":"31269:62:21"},"nodeType":"YulExpressionStatement","src":"31269:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31351:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31362:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31347:3:21"},"nodeType":"YulFunctionCall","src":"31347:18:21"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"31367:12:21","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31340:6:21"},"nodeType":"YulFunctionCall","src":"31340:40:21"},"nodeType":"YulExpressionStatement","src":"31340:40:21"},{"nodeType":"YulAssignment","src":"31389:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31401:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31412:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31397:3:21"},"nodeType":"YulFunctionCall","src":"31397:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31389:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31167:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31181:4:21","type":""}],"src":"31016:406:21"},{"body":{"nodeType":"YulBlock","src":"31601:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31618:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31629:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31611:6:21"},"nodeType":"YulFunctionCall","src":"31611:21:21"},"nodeType":"YulExpressionStatement","src":"31611:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31652:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31663:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31648:3:21"},"nodeType":"YulFunctionCall","src":"31648:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"31668:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31641:6:21"},"nodeType":"YulFunctionCall","src":"31641:30:21"},"nodeType":"YulExpressionStatement","src":"31641:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31691:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31702:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31687:3:21"},"nodeType":"YulFunctionCall","src":"31687:18:21"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"31707:34:21","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31680:6:21"},"nodeType":"YulFunctionCall","src":"31680:62:21"},"nodeType":"YulExpressionStatement","src":"31680:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31762:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31773:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31758:3:21"},"nodeType":"YulFunctionCall","src":"31758:18:21"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"31778:8:21","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31751:6:21"},"nodeType":"YulFunctionCall","src":"31751:36:21"},"nodeType":"YulExpressionStatement","src":"31751:36:21"},{"nodeType":"YulAssignment","src":"31796:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31808:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31819:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31804:3:21"},"nodeType":"YulFunctionCall","src":"31804:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31796:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31578:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31592:4:21","type":""}],"src":"31427:402:21"},{"body":{"nodeType":"YulBlock","src":"31971:150:21","statements":[{"nodeType":"YulVariableDeclaration","src":"31981:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32001:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31995:5:21"},"nodeType":"YulFunctionCall","src":"31995:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"31985:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32056:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"32064:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32052:3:21"},"nodeType":"YulFunctionCall","src":"32052:17:21"},{"name":"pos","nodeType":"YulIdentifier","src":"32071:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"32076:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"32017:34:21"},"nodeType":"YulFunctionCall","src":"32017:66:21"},"nodeType":"YulExpressionStatement","src":"32017:66:21"},{"nodeType":"YulAssignment","src":"32092:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32103:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"32108:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32099:3:21"},"nodeType":"YulFunctionCall","src":"32099:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32092:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31947:3:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31952:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31963:3:21","type":""}],"src":"31834:287:21"},{"body":{"nodeType":"YulBlock","src":"32300:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32317:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32328:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32310:6:21"},"nodeType":"YulFunctionCall","src":"32310:21:21"},"nodeType":"YulExpressionStatement","src":"32310:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32351:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32362:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32347:3:21"},"nodeType":"YulFunctionCall","src":"32347:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"32367:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32340:6:21"},"nodeType":"YulFunctionCall","src":"32340:30:21"},"nodeType":"YulExpressionStatement","src":"32340:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32390:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32401:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32386:3:21"},"nodeType":"YulFunctionCall","src":"32386:18:21"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"32406:31:21","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32379:6:21"},"nodeType":"YulFunctionCall","src":"32379:59:21"},"nodeType":"YulExpressionStatement","src":"32379:59:21"},{"nodeType":"YulAssignment","src":"32447:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32459:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32470:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32455:3:21"},"nodeType":"YulFunctionCall","src":"32455:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32447:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32277:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32291:4:21","type":""}],"src":"32126:353:21"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_bytes_memory_ptrt_int256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_RevisionType(value, pos)\n    {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_address_t_bytes32_t_enum$_RevisionType_$4142_t_enum$_Status_$4148__to_t_address_t_bytes32_t_uint8_t_uint8__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        abi_encode_enum_RevisionType(value2, add(headStart, 64))\n        if iszero(lt(value3, 5)) { panic_error_0x21() }\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint64(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptrt_string_memory_ptrt_addresst_uint256t_uint256t_uint256t_uint64t_uint64t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9\n    {\n        if slt(sub(dataEnd, headStart), 320) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n        value3 := abi_decode_address(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n        value7 := abi_decode_uint64(add(headStart, 224))\n        value8 := abi_decode_uint64(add(headStart, 256))\n        value9 := abi_decode_address(add(headStart, 288))\n    }\n    function abi_encode_tuple_t_contract$_OptimisticOracleV2Interface_$3988__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_StoreInterface_$4033__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_enum$_RevisionType_$4142t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 2)) { revert(0, 0) }\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_encode_tuple_t_contract$_FinderInterface_$3622__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$439__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_encode_tuple_t_stringliteral_20de572be7a72693017907a48071b9a28c6697a396e1ff16cc2cb4c4947aaf75__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"only oracle can call this functi\")\n        mstore(add(headStart, 96), \"on\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        mstore(end_1, value1)\n        end := add(end_1, 0x20)\n    }\n    function abi_encode_tuple_t_enum$_RevisionType_$4142__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_enum_RevisionType(value0, headStart)\n    }\n    function abi_decode_tuple_t_struct$_Unsigned_$1911_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 32)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, mload(headStart))\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_125dbae9684ccfc3c2f4c48a6488e7ec8ba5d4e141f94ac8e2819dadd3c071b1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"bond must be >= final fee\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f3081d0d2e97ae829db742cd828461af7ab934373cdf728548dad1bc0eadb759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"liveness must be >= minimumLiven\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9b17c2a48ebae0023b062a31d39c1484bce50d2e042bc517d8fa71a29b7ae876__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"liveness must be < than 1 week\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dc1d0486d33821ede5d3b758f625d3ef0e5234b7b67b0141c6dff2128f35de56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"liveness must be < 5200 weeks\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_36e34da2609200b224ffe992330cd12047395e79cf84eab35610f71f5a93146d_t_bytes_memory_ptr_t_stringliteral_4ec96ac91c07cd49086380698a088473608ec0c63287fc444eb606330cd9ecca__to_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes30__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"meet the List Criteria at the ti\")\n        mstore(add(pos, 32), \"me of the price request? List Cr\")\n        mstore(add(pos, 64), \"iteria: \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(pos, 72), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 72), \". Decentra-List Revision ID = \")\n        end := add(_1, 102)\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_4bd8befa97d8e5bb2f31c0d006a597f1b9f8a94909e1a13c46b5fbe426615cab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"addresses array length must be <\")\n        mstore(add(headStart, 96), \" 100\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_stringliteral_047da255ce7159ed6ea6f856209867e957706bcd0e0dc74eaefbf996e670b8d8__to_t_bytes_memory_ptr_t_bytes8__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        mstore(end_1, \"fail to \")\n        end := add(end_1, 8)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_storage_t_bytes_memory_ptr_t_stringliteral_5a20166ea5c33b0f9b3fada118af4cd1ef04e3d947091a133e81dfe6e694e718__to_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        let length := mload(value0)\n        let _1 := 0x20\n        copy_memory_to_memory_with_cleanup(add(value0, _1), pos, length)\n        let end_1 := add(pos, length)\n        let ret := 0\n        let slotValue := sload(value1)\n        let length_1 := extract_byte_array_length(slotValue)\n        let _2 := 1\n        switch and(slotValue, _2)\n        case 0 {\n            mstore(end_1, and(slotValue, not(255)))\n            ret := add(end_1, mul(length_1, iszero(iszero(length_1))))\n        }\n        case 1 {\n            mstore(0, value1)\n            let dataPos := keccak256(0, _1)\n            let i := 0\n            for { } lt(i, length_1) { i := add(i, _1) }\n            {\n                mstore(add(end_1, i), sload(dataPos))\n                dataPos := add(dataPos, _2)\n            }\n            ret := add(end_1, length_1)\n        }\n        let length_2 := mload(value2)\n        copy_memory_to_memory_with_cleanup(add(value2, _1), ret, length_2)\n        let _3 := add(ret, length_2)\n        mstore(_3, \". For directions to find the Pro\")\n        mstore(add(_3, _1), \"posed Addresses, see Implementat\")\n        mstore(add(_3, 64), \"ion section of UMIP-169.\")\n        end := add(_3, 88)\n    }\n    function abi_encode_tuple_packed_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let pos_1 := pos\n        pos_1 := pos\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, value1) { i := add(i, 1) }\n        {\n            let value := calldataload(srcPtr)\n            validator_revert_address(value)\n            mstore(pos_1, and(value, 0xffffffffffffffffffffffffffffffffffffffff))\n            let _1 := 0x20\n            pos_1 := add(pos_1, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos_1\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_bytes_memory_ptr_t_contract$_IERC20_$439_t_rational_0_by_1__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_string(value2, add(headStart, 160))\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_bytes_memory_ptr_t_bool_t_bool_t_bool__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_bool_t_bool_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 192)\n        tail := abi_encode_string(value2, add(headStart, 192))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint64__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 128)\n        tail := abi_encode_string(value2, add(headStart, 128))\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 128)\n        tail := abi_encode_string(value2, add(headStart, 128))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_address_t_bytes32_t_uint256_t_bytes_memory_ptr_t_int256__to_t_address_t_address_t_bytes32_t_uint256_t_bytes_memory_ptr_t_int256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 192)\n        tail := abi_encode_string(value4, add(headStart, 192))\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_enum$_RevisionType_$4142_t_array$_t_address_$dyn_calldata_ptr__to_t_uint8_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        abi_encode_enum_RevisionType(value0, headStart)\n        let _1 := 32\n        mstore(add(headStart, _1), 64)\n        let pos := tail_1\n        mstore(tail_1, value2)\n        pos := add(headStart, 96)\n        let srcPtr := value1\n        let i := 0\n        for { } lt(i, value2) { i := add(i, 1) }\n        {\n            let value := calldataload(srcPtr)\n            validator_revert_address(value)\n            mstore(pos, and(value, 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bc85443d2dadaa51fb6c0191ee754fd345bd245be5525b0cd8d4d9df1755026b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"revisionId is not approved\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0d075603a1671628c3e8a050324d6f35e6442672815a752252f84ad5249c9515__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"hash of addresses != revisionId'\")\n        mstore(add(headStart, 96), \"s addressesHash\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_enum$_RevisionType_$4142_t_array$_t_address_$dyn_memory_ptr__to_t_uint8_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        abi_encode_enum_RevisionType(value0, headStart)\n        let _1 := 32\n        mstore(add(headStart, _1), 64)\n        let pos := tail_1\n        let length := mload(value1)\n        mstore(tail_1, length)\n        pos := add(headStart, 96)\n        let srcPtr := add(value1, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        sum := add(and(x, 0xff), and(y, 0xff))\n        if gt(sum, 0xff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"SafeERC20: approve from non-zero\")\n        mstore(add(headStart, 96), \" to non-zero allowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101ae5760003560e01c80638671d23b116100ee578063af359fa211610097578063f2fde38b11610071578063f2fde38b146103d6578063f3fef3a3146103e9578063fc0c546a146103fc578063fee53ab61461040f57600080fd5b8063af359fa2146103a7578063b9a3c84c146103ba578063c207ec6e146103cd57600080fd5b80638dee967e116100c85780638dee967e1461036b57806391152f1014610374578063975057e71461039457600080fd5b80638671d23b146103395780638a301adc1461034c5780638da5cb5b1461035457600080fd5b8063654e51e71161015b578063715018a611610135578063715018a6146102dc57806374881462146102e45780637dc0d1d0146102f757806380f323a71461032257600080fd5b8063654e51e7146102695780636ad0690a1461027c5780636f626eb3146102a957600080fd5b80633c4432f11161018c5780633c4432f1146102395780634a79d50c1461024c5780635cae7fb51461026157600080fd5b806304cc1fd5146101b35780630ef486d1146101c8578063259bd92014610226575b600080fd5b6101c66101c136600461214f565b610422565b005b61020d6101d63660046121a7565b600e602052600090815260409020805460018201546002909201546001600160a01b03909116919060ff8082169161010090041684565b60405161021d94939291906121ea565b60405180910390f35b6101c66102343660046121a7565b6105bc565b6101c661024736600461224a565b6106c0565b6102546107ec565b60405161021d91906122bc565b61025461087a565b6101c66102773660046122cf565b610887565b600a546102909067ffffffffffffffff1681565b60405167ffffffffffffffff909116815260200161021d565b6102cc6102b7366004612311565b600f6020526000908152604090205460ff1681565b604051901515815260200161021d565b6101c66108d6565b6101c66102f236600461232e565b6108ea565b60015461030a906001600160a01b031681565b6040516001600160a01b03909116815260200161021d565b61032b60065481565b60405190815260200161021d565b6101c6610347366004612404565b610d01565b6101c6610d22565b6000546201000090046001600160a01b031661030a565b61032b60085481565b600a546102909068010000000000000000900467ffffffffffffffff1681565b60025461030a906001600160a01b031681565b6101c66103b5366004612492565b610e6f565b60035461030a906001600160a01b031681565b61032b60095481565b6101c66103e4366004612311565b611436565b6101c66103f73660046124eb565b6114c6565b60075461030a906001600160a01b031681565b6101c661041d366004612517565b6114e9565b6001546001600160a01b031633146104a75760405162461bcd60e51b815260206004820152602260248201527f6f6e6c79206f7261636c652063616e2063616c6c20746869732066756e63746960448201527f6f6e00000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600082846040516020016104bc92919061254a565b60408051601f1981840301815291815281516020928301206000818152600d909352912054909150670de0b6b3a763ffff198301610556576000818152600e602052604090819020600201805461020061ff0019821617909155905182917fe7dfc76d7cf4f1781646dbd1e7e5057b56a0145663bf2bc18d35b27cb3a65b3f916105499160ff169061256c565b60405180910390a26105b4565b6000818152600e602052604090819020600201805461030061ff0019821617909155905182917f02050decabc268ccd3e064662a50780070b8d1ab87047ec88bc8e2c29fe29cda916105ab9160ff169061256c565b60405180910390a25b505050505050565b6105c46119a0565b600254600754604051635b97aadd60e01b81526001600160a01b039182166004820152911690635b97aadd90602401602060405180830381865afa158015610610573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106349190612580565b518110156106845760405162461bcd60e51b815260206004820152601960248201527f626f6e64206d757374206265203e3d2066696e616c2066656500000000000000604482015260640161049e565b60068190556040518181527f1b44689fb73c0c9cdf591d534287488fc7959fd3647346821063a3e567ec9a99906020015b60405180910390a150565b6106c86119a0565b600a5467ffffffffffffffff68010000000000000000909104811690821610156107405760405162461bcd60e51b815260206004820152602360248201527f6c6976656e657373206d757374206265203e3d206d696e696d756d4c6976656e60448201526265737360e81b606482015260840161049e565b62093a808167ffffffffffffffff161061079c5760405162461bcd60e51b815260206004820152601e60248201527f6c6976656e657373206d757374206265203c207468616e2031207765656b0000604482015260640161049e565b600a805467ffffffffffffffff191667ffffffffffffffff83169081179091556040519081527fe5e4fe1ed302905b2067dd5af3ef8c34bc829afc97a52f95dd96d97d1ee4351b906020016106b5565b600580546107f9906125c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610825906125c2565b80156108725780601f1061084757610100808354040283529160200191610872565b820191906000526020600020905b81548152906001019060200180831161085557829003601f168201915b505050505081565b600480546107f9906125c2565b61088f6119a0565b6008829055600981905560408051838152602081018390527f067def216f0ef603ed8175482f6240978b15c9dc7efd8e1ac4bd3a743787a5b6910160405180910390a15050565b6108de6119a0565b6108e86000611a01565b565b600054610100900460ff161580801561090a5750600054600160ff909116105b806109245750303b158015610924575060005460ff166001145b6109965760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161049e565b6000805460ff1916600117905580156109b9576000805461ff0019166101001790555b600380546001600160a01b0319166001600160a01b038d161790556109dc610d22565b600780546001600160a01b0319166001600160a01b038a8116918217909255600254604051635b97aadd60e01b8152600481019290925290911690635b97aadd90602401602060405180830381865afa158015610a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a619190612580565b51600c55600254600754604051635b97aadd60e01b81526001600160a01b039182166004820152911690635b97aadd90602401602060405180830381865afa158015610ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad59190612580565b51871015610b255760405162461bcd60e51b815260206004820152601960248201527f626f6e64206d757374206265203e3d2066696e616c2066656500000000000000604482015260640161049e565b8267ffffffffffffffff168467ffffffffffffffff161015610b955760405162461bcd60e51b815260206004820152602360248201527f6c6976656e657373206d757374206265203e3d206d696e696d756d4c6976656e60448201526265737360e81b606482015260840161049e565b63bb7448008467ffffffffffffffff1610610bf25760405162461bcd60e51b815260206004820152601d60248201527f6c6976656e657373206d757374206265203c2035323030207765656b73000000604482015260640161049e565b89604051602001610c0391906125fc565b60405160208183030381529060405260049081610c2091906126fa565b506005610c2d8a826126fa565b50600780546001600160a01b038a166001600160a01b0319909116179055600687905560088690556009859055600a805467ffffffffffffffff85811668010000000000000000027fffffffffffffffffffffffffffffffff0000000000000000000000000000000090921690871617179055610ca982611a01565b6001600b558015610cf4576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b610d096119a0565b610d1d6001600160a01b0382168484611a72565b505050565b6003546040516302abf57960e61b81527f4f7074696d69737469634f7261636c655632000000000000000000000000000060048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa158015610d8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dae91906127ba565b600180546001600160a01b0319166001600160a01b039283161790556003546040516302abf57960e61b81527f53746f7265000000000000000000000000000000000000000000000000000000600482015291169063aafd5e4090602401602060405180830381865afa158015610e29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4d91906127ba565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60648110610ee45760405162461bcd60e51b8152602060048201526024808201527f616464726573736573206172726179206c656e677468206d757374206265203c60448201527f2031303000000000000000000000000000000000000000000000000000000000606482015260840161049e565b60408051808201909152601a81527f446f20616c6c2050726f706f736564204164647265737365732000000000000060208201526000846001811115610f2c57610f2c6121c0565b03610f545780604051602001610f4291906127d7565b60405160208183030381529060405290505b806004610f62600b54611b1b565b604051602001610f7493929190612818565b60408051601f198184030181529082905291504290600090610f9c908490849060200161254a565b60405160208183030381529060405280519060200120905060008585604051602001610fc9929190612928565b60408051601f198184030181529181528151602092830120600b80546000878152600d8652848120829055908152600e90945282842080546001600160a01b03191633179055805484528284206001908101839055905484529190922060020180549293508992909160ff1990911690838181111561104a5761104a6121c0565b0217905550600b546000908152600e6020526040808220600201805461ff00191661010017905560015460075491517f11df92f10000000000000000000000000000000000000000000000000000000081526001600160a01b03918216936311df92f1936110d6936c111150d1539514904b531254d5609a1b938a938c9392909216919060040161296a565b6020604051808303816000875af11580156110f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111991906129a6565b50600180546040517ff327b0750000000000000000000000000000000000000000000000000000000081526001600160a01b039091169163f327b0759161117d916c111150d1539514904b531254d5609a1b9188918a9160009182916004016129bf565b600060405180830381600087803b15801561119757600080fd5b505af11580156111ab573d6000803e3d6000fd5b5050600154600a546040517f473c45fe0000000000000000000000000000000000000000000000000000000081526001600160a01b03909216935063473c45fe925061121a916c111150d1539514904b531254d5609a1b9188918a9167ffffffffffffffff16906004016129fe565b600060405180830381600087803b15801561123457600080fd5b505af1158015611248573d6000803e3d6000fd5b50506001546006546040517fad5a755a000000000000000000000000000000000000000000000000000000008152600094506001600160a01b03909216925063ad5a755a916112af916c111150d1539514904b531254d5609a1b9189918b91600401612a38565b6020604051808303816000875af11580156112ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f291906129a6565b60075490915061130d906001600160a01b0316333084611c7b565b60015460075461132a916001600160a01b03918216911683611cd2565b6001546040517f7c82288f0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690637c82288f9061139590339030906c111150d1539514904b531254d5609a1b908a908c90670de0b6b3a764000090600401612a68565b6020604051808303816000875af11580156113b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d891906129a6565b50600b547f8479c2bee15eda418c90b95fa659dac53de3029ccab55c13c32641a566b4fd9289898960405161140f93929190612ab3565b60405180910390a2600b805490600061142783612b2b565b91905055505050505050505050565b61143e6119a0565b6001600160a01b0381166114ba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161049e565b6114c381611a01565b50565b6114ce6119a0565b6007546114e5906001600160a01b03168383611a72565b5050565b60026000848152600e6020526040902060020154610100900460ff166004811115611516576115166121c0565b146115635760405162461bcd60e51b815260206004820152601a60248201527f7265766973696f6e4964206973206e6f7420617070726f766564000000000000604482015260640161049e565b8181604051602001611576929190612928565b60408051601f1981840301815291815281516020928301206000868152600e909352912060010154146116115760405162461bcd60e51b815260206004820152602f60248201527f68617368206f662061646472657373657320213d207265766973696f6e49642760448201527f7320616464726573736573486173680000000000000000000000000000000000606482015260840161049e565b6000838152600e60205260408120600201805461040061ff00198216179091558190819060ff166001811115611649576116496121c0565b0361165b575050600954600090611691565b60016000868152600e602052604090206002015460ff166001811115611683576116836121c0565b036116915750506008546001905b6000808467ffffffffffffffff8111156116ad576116ad6120ac565b6040519080825280602002602001820160405280156116d6578160200160208202803683370190505b50905060005b858110156117fb57841515600f60008989858181106116fd576116fd612b44565b90506020020160208101906117129190612311565b6001600160a01b0316815260208101919091526040016000205460ff161515146117e95784600f600089898581811061174d5761174d612b44565b90506020020160208101906117629190612311565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905586868281811061179c5761179c612b44565b90506020020160208101906117b19190612311565b8282815181106117c3576117c3612b44565b6001600160a01b0390921660209283029190910190910152826117e581612b2b565b9350505b806117f381612b2b565b9150506116dc565b5060006118088385612b5a565b90508015611945576007546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015611858573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187c91906129a6565b101561191c576000888152600e6020526040908190205460075491516370a0823160e01b8152306004820152611917926001600160a01b039283169216906370a0823190602401602060405180830381865afa1580156118e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190491906129a6565b6007546001600160a01b03169190611a72565b611945565b6000888152600e6020526040902054600754611945916001600160a01b03918216911683611a72565b6000888152600e60205260409081902060020154905189917f80f45b4d1139e5fb60a132f4ca38836c7c42309e0a67a42d1a58450daf29253e9161198e9160ff16908690612b71565b60405180910390a25050505050505050565b6000546001600160a01b03620100009091041633146108e85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049e565b600080546001600160a01b03838116620100008181027fffffffffffffffffffff0000000000000000000000000000000000000000ffff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6040516001600160a01b038316602482015260448101829052610d1d9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611e20565b606081600003611b5e57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115611b885780611b7281612b2b565b9150611b819050600a83612bcf565b9150611b62565b60008167ffffffffffffffff811115611ba357611ba36120ac565b6040519080825280601f01601f191660200182016040528015611bcd576020820181803683370190505b509050815b8515611c7257611be3600182612bf1565b90506000611bf2600a88612bcf565b611bfd90600a612b5a565b611c079088612bf1565b611c12906030612c04565b905060008160f81b905080848481518110611c2f57611c2f612b44565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611c69600a89612bcf565b97505050611bd2565b50949350505050565b6040516001600160a01b0380851660248301528316604482015260648101829052611ccc9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611ab7565b50505050565b801580611d6557506040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611d3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6391906129a6565b155b611dd75760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161049e565b6040516001600160a01b038316602482015260448101829052610d1d9084907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611ab7565b6000611e75826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611f059092919063ffffffff16565b805190915015610d1d5780806020019051810190611e939190612c1d565b610d1d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161049e565b6060611f148484600085611f1c565b949350505050565b606082471015611f945760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161049e565b600080866001600160a01b03168587604051611fb09190612c3f565b60006040518083038185875af1925050503d8060008114611fed576040519150601f19603f3d011682016040523d82523d6000602084013e611ff2565b606091505b50915091506120038783838761200e565b979650505050505050565b6060831561207d578251600003612076576001600160a01b0385163b6120765760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161049e565b5081611f14565b611f1483838151156120925781518083602001fd5b8060405162461bcd60e51b815260040161049e91906122bc565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126120d357600080fd5b813567ffffffffffffffff808211156120ee576120ee6120ac565b604051601f8301601f19908116603f01168101908282118183101715612116576121166120ac565b8160405283815286602085880101111561212f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561216557600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561218a57600080fd5b612196878288016120c2565b949793965093946060013593505050565b6000602082840312156121b957600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600281106121e6576121e66121c0565b9052565b6001600160a01b0385168152602081018490526080810161220e60408301856121d6565b6005831061221e5761221e6121c0565b82606083015295945050505050565b803567ffffffffffffffff8116811461224557600080fd5b919050565b60006020828403121561225c57600080fd5b6122658261222d565b9392505050565b60005b8381101561228757818101518382015260200161226f565b50506000910152565b600081518084526122a881602086016020860161226c565b601f01601f19169290920160200192915050565b6020815260006122656020830184612290565b600080604083850312156122e257600080fd5b50508035926020909101359150565b6001600160a01b03811681146114c357600080fd5b8035612245816122f1565b60006020828403121561232357600080fd5b8135612265816122f1565b6000806000806000806000806000806101408b8d03121561234e57600080fd5b6123578b612306565b995060208b013567ffffffffffffffff8082111561237457600080fd5b6123808e838f016120c2565b9a5060408d013591508082111561239657600080fd5b506123a38d828e016120c2565b9850506123b260608c01612306565b965060808b0135955060a08b0135945060c08b013593506123d560e08c0161222d565b92506123e46101008c0161222d565b91506123f36101208c01612306565b90509295989b9194979a5092959850565b60008060006060848603121561241957600080fd5b8335612424816122f1565b925060208401359150604084013561243b816122f1565b809150509250925092565b60008083601f84011261245857600080fd5b50813567ffffffffffffffff81111561247057600080fd5b6020830191508360208260051b850101111561248b57600080fd5b9250929050565b6000806000604084860312156124a757600080fd5b8335600281106124b657600080fd5b9250602084013567ffffffffffffffff8111156124d257600080fd5b6124de86828701612446565b9497909650939450505050565b600080604083850312156124fe57600080fd5b8235612509816122f1565b946020939093013593505050565b60008060006040848603121561252c57600080fd5b83359250602084013567ffffffffffffffff8111156124d257600080fd5b6000835161255c81846020880161226c565b9190910191825250602001919050565b6020810161257a82846121d6565b92915050565b60006020828403121561259257600080fd5b6040516020810181811067ffffffffffffffff821117156125b5576125b56120ac565b6040529151825250919050565b600181811c908216806125d657607f821691505b6020821081036125f657634e487b7160e01b600052602260045260246000fd5b50919050565b7f6d65657420746865204c6973742043726974657269612061742074686520746981527f6d65206f662074686520707269636520726571756573743f204c69737420437260208201527f6974657269613a2000000000000000000000000000000000000000000000000060408201526000825161268081604885016020870161226c565b7f2e20446563656e7472612d4c697374205265766973696f6e204944203d2000006048939091019283015250606601919050565b601f821115610d1d57600081815260208120601f850160051c810160208610156126db5750805b601f850160051c820191505b818110156105b4578281556001016126e7565b815167ffffffffffffffff811115612714576127146120ac565b6127288161272284546125c2565b846126b4565b602080601f83116001811461275d57600084156127455750858301515b600019600386901b1c1916600185901b1785556105b4565b600085815260208120601f198616915b8281101561278c5788860151825594840194600190910190840161276d565b50858210156127aa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156127cc57600080fd5b8151612265816122f1565b600082516127e981846020870161226c565b7f6661696c20746f20000000000000000000000000000000000000000000000000920191825250600801919050565b60008451602061282b8285838a0161226c565b81840191506000865461283d816125c2565b60018281168015612855576001811461286a57612896565b60ff1984168752821515830287019450612896565b8a6000528560002060005b8481101561288e57815489820152908301908701612875565b505082870194505b50505050855192506128ab838284890161226c565b7f2e20466f7220646972656374696f6e7320746f2066696e64207468652050726f92019182527f706f736564204164647265737365732c2073656520496d706c656d656e746174908201527f696f6e2073656374696f6e206f6620554d49502d3136392e0000000000000000604082015260580195945050505050565b60008184825b8581101561295f578135612941816122f1565b6001600160a01b03168352602092830192919091019060010161292e565b509095945050505050565b85815284602082015260a06040820152600061298960a0830186612290565b6001600160a01b0394909416606083015250608001529392505050565b6000602082840312156129b857600080fd5b5051919050565b86815285602082015260c0604082015260006129de60c0830187612290565b9415156060830152509115156080830152151560a0909101529392505050565b848152836020820152608060408201526000612a1d6080830185612290565b905067ffffffffffffffff8316606083015295945050505050565b848152836020820152608060408201526000612a576080830185612290565b905082606083015295945050505050565b60006001600160a01b03808916835280881660208401525085604083015284606083015260c06080830152612aa060c0830185612290565b90508260a0830152979650505050505050565b600060408201612ac383876121d6565b60206040818501528185835260608501905086925060005b86811015612b09578335612aee816122f1565b6001600160a01b031682529282019290820190600101612adb565b50979650505050505050565b634e487b7160e01b600052601160045260246000fd5b600060018201612b3d57612b3d612b15565b5060010190565b634e487b7160e01b600052603260045260246000fd5b808202811582820484141761257a5761257a612b15565b600060408201612b8183866121d6565b6020604081850152818551808452606086019150828701935060005b81811015612bc25784516001600160a01b031683529383019391830191600101612b9d565b5090979650505050505050565b600082612bec57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561257a5761257a612b15565b60ff818116838216019081111561257a5761257a612b15565b600060208284031215612c2f57600080fd5b8151801515811461226557600080fd5b60008251612c5181846020870161226c565b919091019291505056fea26469706673582212204e5517719301b7b4c2152a69bc645d91bcbdb026c90647638e0faa0925b08d7d64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1AE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8671D23B GT PUSH2 0xEE JUMPI DUP1 PUSH4 0xAF359FA2 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xFEE53AB6 EQ PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAF359FA2 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0xB9A3C84C EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xC207EC6E EQ PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DEE967E GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x8DEE967E EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x91152F10 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x975057E7 EQ PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8671D23B EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x8A301ADC EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x654E51E7 GT PUSH2 0x15B JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x135 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x74881462 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x80F323A7 EQ PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x654E51E7 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x6AD0690A EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x6F626EB3 EQ PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C4432F1 GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x3C4432F1 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x4A79D50C EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x5CAE7FB5 EQ PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4CC1FD5 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xEF486D1 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x259BD920 EQ PUSH2 0x226 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C6 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x214F JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20D PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A7 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A7 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x224A JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x7EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x22BC JUMP JUMPDEST PUSH2 0x254 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x22CF JUMP JUMPDEST PUSH2 0x887 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x290 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21D JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21D JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x8D6 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x232E JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x30A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21D JUMP JUMPDEST PUSH2 0x32B PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21D JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x2404 JUMP JUMPDEST PUSH2 0xD01 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x30A JUMP JUMPDEST PUSH2 0x32B PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x290 SWAP1 PUSH9 0x10000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x30A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x3B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0xE6F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x30A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x32B PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2311 JUMP JUMPDEST PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x3F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x24EB JUMP JUMPDEST PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x30A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x2517 JUMP JUMPDEST PUSH2 0x14E9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206F7261636C652063616E2063616C6C20746869732066756E637469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BC SWAP3 SWAP2 SWAP1 PUSH2 0x254A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH8 0xDE0B6B3A763FFFF NOT DUP4 ADD PUSH2 0x556 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x200 PUSH2 0xFF00 NOT DUP3 AND OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH32 0xE7DFC76D7CF4F1781646DBD1E7E5057B56A0145663BF2BC18D35B27CB3A65B3F SWAP2 PUSH2 0x549 SWAP2 PUSH1 0xFF AND SWAP1 PUSH2 0x256C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x300 PUSH2 0xFF00 NOT DUP3 AND OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH32 0x2050DECABC268CCD3E064662A50780070B8D1AB87047EC88BC8E2C29FE29CDA SWAP2 PUSH2 0x5AB SWAP2 PUSH1 0xFF AND SWAP1 PUSH2 0x256C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5C4 PUSH2 0x19A0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5B97AADD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x5B97AADD SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x610 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x634 SWAP2 SWAP1 PUSH2 0x2580 JUMP JUMPDEST MLOAD DUP2 LT ISZERO PUSH2 0x684 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626F6E64206D757374206265203E3D2066696E616C2066656500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x1B44689FB73C0C9CDF591D534287488FC7959FD3647346821063A3E567EC9A99 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x6C8 PUSH2 0x19A0 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH9 0x10000000000000000 SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6976656E657373206D757374206265203E3D206D696E696D756D4C6976656E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49E JUMP JUMPDEST PUSH3 0x93A80 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6976656E657373206D757374206265203C207468616E2031207765656B0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xE5E4FE1ED302905B2067DD5AF3EF8C34BC829AFC97A52F95DD96D97D1EE4351B SWAP1 PUSH1 0x20 ADD PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x7F9 SWAP1 PUSH2 0x25C2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x825 SWAP1 PUSH2 0x25C2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x872 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x847 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x872 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x855 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x7F9 SWAP1 PUSH2 0x25C2 JUMP JUMPDEST PUSH2 0x88F PUSH2 0x19A0 JUMP JUMPDEST PUSH1 0x8 DUP3 SWAP1 SSTORE PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x67DEF216F0EF603ED8175482F6240978B15C9DC7EFD8E1AC4BD3A743787A5B6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x8DE PUSH2 0x19A0 JUMP JUMPDEST PUSH2 0x8E8 PUSH1 0x0 PUSH2 0x1A01 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x90A JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x924 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x924 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x996 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND OR SWAP1 SSTORE PUSH2 0x9DC PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5B97AADD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x5B97AADD SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA3D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA61 SWAP2 SWAP1 PUSH2 0x2580 JUMP JUMPDEST MLOAD PUSH1 0xC SSTORE PUSH1 0x2 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5B97AADD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x5B97AADD SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x2580 JUMP JUMPDEST MLOAD DUP8 LT ISZERO PUSH2 0xB25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626F6E64206D757374206265203E3D2066696E616C2066656500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49E JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0xB95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6976656E657373206D757374206265203E3D206D696E696D756D4C6976656E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49E JUMP JUMPDEST PUSH4 0xBB744800 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0xBF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6976656E657373206D757374206265203C2035323030207765656B73000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49E JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC03 SWAP2 SWAP1 PUSH2 0x25FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x4 SWAP1 DUP2 PUSH2 0xC20 SWAP2 SWAP1 PUSH2 0x26FA JUMP JUMPDEST POP PUSH1 0x5 PUSH2 0xC2D DUP11 DUP3 PUSH2 0x26FA JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x6 DUP8 SWAP1 SSTORE PUSH1 0x8 DUP7 SWAP1 SSTORE PUSH1 0x9 DUP6 SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH9 0x10000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 SWAP1 SWAP3 AND SWAP1 DUP8 AND OR OR SWAP1 SSTORE PUSH2 0xCA9 DUP3 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB SSTORE DUP1 ISZERO PUSH2 0xCF4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD09 PUSH2 0x19A0 JUMP JUMPDEST PUSH2 0xD1D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP5 DUP5 PUSH2 0x1A72 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2ABF579 PUSH1 0xE6 SHL DUP2 MSTORE PUSH32 0x4F7074696D69737469634F7261636C6556320000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAAFD5E40 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDAE SWAP2 SWAP1 PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2ABF579 PUSH1 0xE6 SHL DUP2 MSTORE PUSH32 0x53746F7265000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0xAAFD5E40 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE4D SWAP2 SWAP1 PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x64 DUP2 LT PUSH2 0xEE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x616464726573736573206172726179206C656E677468206D757374206265203C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2031303000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH32 0x446F20616C6C2050726F706F7365642041646472657373657320000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF2C JUMPI PUSH2 0xF2C PUSH2 0x21C0 JUMP JUMPDEST SUB PUSH2 0xF54 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF42 SWAP2 SWAP1 PUSH2 0x27D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP JUMPDEST DUP1 PUSH1 0x4 PUSH2 0xF62 PUSH1 0xB SLOAD PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF74 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2818 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE SWAP2 POP TIMESTAMP SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xF9C SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH1 0x20 ADD PUSH2 0x254A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFC9 SWAP3 SWAP2 SWAP1 PUSH2 0x2928 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0xB DUP1 SLOAD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xD DUP7 MSTORE DUP5 DUP2 KECCAK256 DUP3 SWAP1 SSTORE SWAP1 DUP2 MSTORE PUSH1 0xE SWAP1 SWAP5 MSTORE DUP3 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE DUP1 SLOAD DUP5 MSTORE DUP3 DUP5 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 SLOAD DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP10 SWAP3 SWAP1 SWAP2 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP1 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0x104A JUMPI PUSH2 0x104A PUSH2 0x21C0 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x7 SLOAD SWAP2 MLOAD PUSH32 0x11DF92F100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 PUSH4 0x11DF92F1 SWAP4 PUSH2 0x10D6 SWAP4 PUSH13 0x111150D1539514904B531254D5 PUSH1 0x9A SHL SWAP4 DUP11 SWAP4 DUP13 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x296A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1119 SWAP2 SWAP1 PUSH2 0x29A6 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xF327B07500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xF327B075 SWAP2 PUSH2 0x117D SWAP2 PUSH13 0x111150D1539514904B531254D5 PUSH1 0x9A SHL SWAP2 DUP9 SWAP2 DUP11 SWAP2 PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x4 ADD PUSH2 0x29BF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH32 0x473C45FE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP PUSH4 0x473C45FE SWAP3 POP PUSH2 0x121A SWAP2 PUSH13 0x111150D1539514904B531254D5 PUSH1 0x9A SHL SWAP2 DUP9 SWAP2 DUP11 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x4 ADD PUSH2 0x29FE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1248 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0xAD5A755A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 POP PUSH4 0xAD5A755A SWAP2 PUSH2 0x12AF SWAP2 PUSH13 0x111150D1539514904B531254D5 PUSH1 0x9A SHL SWAP2 DUP10 SWAP2 DUP12 SWAP2 PUSH1 0x4 ADD PUSH2 0x2A38 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12F2 SWAP2 SWAP1 PUSH2 0x29A6 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0x130D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x1C7B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x7 SLOAD PUSH2 0x132A SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x7C82288F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x7C82288F SWAP1 PUSH2 0x1395 SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH13 0x111150D1539514904B531254D5 PUSH1 0x9A SHL SWAP1 DUP11 SWAP1 DUP13 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH1 0x4 ADD PUSH2 0x2A68 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D8 SWAP2 SWAP1 PUSH2 0x29A6 JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH32 0x8479C2BEE15EDA418C90B95FA659DAC53DE3029CCAB55C13C32641A566B4FD92 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x140F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0xB DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1427 DUP4 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x143E PUSH2 0x19A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x14BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49E JUMP JUMPDEST PUSH2 0x14C3 DUP2 PUSH2 0x1A01 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x14CE PUSH2 0x19A0 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x14E5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 PUSH2 0x1A72 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1516 JUMPI PUSH2 0x1516 PUSH2 0x21C0 JUMP JUMPDEST EQ PUSH2 0x1563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7265766973696F6E4964206973206E6F7420617070726F766564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49E JUMP JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1576 SWAP3 SWAP2 SWAP1 PUSH2 0x2928 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xE SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD EQ PUSH2 0x1611 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x68617368206F662061646472657373657320213D207265766973696F6E496427 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7320616464726573736573486173680000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x400 PUSH2 0xFF00 NOT DUP3 AND OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1649 JUMPI PUSH2 0x1649 PUSH2 0x21C0 JUMP JUMPDEST SUB PUSH2 0x165B JUMPI POP POP PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1683 JUMPI PUSH2 0x1683 PUSH2 0x21C0 JUMP JUMPDEST SUB PUSH2 0x1691 JUMPI POP POP PUSH1 0x8 SLOAD PUSH1 0x1 SWAP1 JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16AD JUMPI PUSH2 0x16AD PUSH2 0x20AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16D6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x17FB JUMPI DUP5 ISZERO ISZERO PUSH1 0xF PUSH1 0x0 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x16FD JUMPI PUSH2 0x16FD PUSH2 0x2B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1712 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x17E9 JUMPI DUP5 PUSH1 0xF PUSH1 0x0 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x174D JUMPI PUSH2 0x174D PUSH2 0x2B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1762 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0x179C JUMPI PUSH2 0x179C PUSH2 0x2B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x17B1 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x17C3 JUMPI PUSH2 0x17C3 PUSH2 0x2B44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP3 PUSH2 0x17E5 DUP2 PUSH2 0x2B2B JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0x17F3 DUP2 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16DC JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1808 DUP4 DUP6 PUSH2 0x2B5A JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1945 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1858 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x187C SWAP2 SWAP1 PUSH2 0x29A6 JUMP JUMPDEST LT ISZERO PUSH2 0x191C JUMPI PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD PUSH1 0x7 SLOAD SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x1917 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1904 SWAP2 SWAP1 PUSH2 0x29A6 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1A72 JUMP JUMPDEST PUSH2 0x1945 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x7 SLOAD PUSH2 0x1945 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1A72 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 MLOAD DUP10 SWAP2 PUSH32 0x80F45B4D1139E5FB60A132F4CA38836C7C42309E0A67A42D1A58450DAF29253E SWAP2 PUSH2 0x198E SWAP2 PUSH1 0xFF AND SWAP1 DUP7 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH3 0x10000 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x8E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH3 0x10000 DUP2 DUP2 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF DUP6 AND OR DUP6 SSTORE PUSH1 0x40 MLOAD SWAP4 DIV SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xD1D SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1E20 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x1B5E JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1B88 JUMPI DUP1 PUSH2 0x1B72 DUP2 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B81 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x2BCF JUMP JUMPDEST SWAP2 POP PUSH2 0x1B62 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BA3 JUMPI PUSH2 0x1BA3 PUSH2 0x20AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1BCD JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 JUMPDEST DUP6 ISZERO PUSH2 0x1C72 JUMPI PUSH2 0x1BE3 PUSH1 0x1 DUP3 PUSH2 0x2BF1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1BF2 PUSH1 0xA DUP9 PUSH2 0x2BCF JUMP JUMPDEST PUSH2 0x1BFD SWAP1 PUSH1 0xA PUSH2 0x2B5A JUMP JUMPDEST PUSH2 0x1C07 SWAP1 DUP9 PUSH2 0x2BF1 JUMP JUMPDEST PUSH2 0x1C12 SWAP1 PUSH1 0x30 PUSH2 0x2C04 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1C2F JUMPI PUSH2 0x1C2F PUSH2 0x2B44 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1C69 PUSH1 0xA DUP10 PUSH2 0x2BCF JUMP JUMPDEST SWAP8 POP POP POP PUSH2 0x1BD2 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1CCC SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD PUSH2 0x1AB7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x1D65 JUMPI POP PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D63 SWAP2 SWAP1 PUSH2 0x29A6 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1DD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xD1D SWAP1 DUP5 SWAP1 PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD PUSH2 0x1AB7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E75 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F05 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xD1D JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1E93 SWAP2 SWAP1 PUSH2 0x2C1D JUMP JUMPDEST PUSH2 0xD1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1F14 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1F1C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1F94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1FB0 SWAP2 SWAP1 PUSH2 0x2C3F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1FED JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FF2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2003 DUP8 DUP4 DUP4 DUP8 PUSH2 0x200E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x207D JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x2076 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x2076 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49E JUMP JUMPDEST POP DUP2 PUSH2 0x1F14 JUMP JUMPDEST PUSH2 0x1F14 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x2092 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x22BC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x20EE JUMPI PUSH2 0x20EE PUSH2 0x20AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2116 JUMPI PUSH2 0x2116 PUSH2 0x20AC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x212F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x218A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2196 DUP8 DUP3 DUP9 ADD PUSH2 0x20C2 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x21E6 JUMPI PUSH2 0x21E6 PUSH2 0x21C0 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x220E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x21D6 JUMP JUMPDEST PUSH1 0x5 DUP4 LT PUSH2 0x221E JUMPI PUSH2 0x221E PUSH2 0x21C0 JUMP JUMPDEST DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x225C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2265 DUP3 PUSH2 0x222D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2287 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x226F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x22A8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x226C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2265 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x14C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2245 DUP2 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2265 DUP2 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH2 0x234E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2357 DUP12 PUSH2 0x2306 JUMP JUMPDEST SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2380 DUP15 DUP4 DUP16 ADD PUSH2 0x20C2 JUMP JUMPDEST SWAP11 POP PUSH1 0x40 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A3 DUP14 DUP3 DUP15 ADD PUSH2 0x20C2 JUMP JUMPDEST SWAP9 POP POP PUSH2 0x23B2 PUSH1 0x60 DUP13 ADD PUSH2 0x2306 JUMP JUMPDEST SWAP7 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP6 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP4 POP PUSH2 0x23D5 PUSH1 0xE0 DUP13 ADD PUSH2 0x222D JUMP JUMPDEST SWAP3 POP PUSH2 0x23E4 PUSH2 0x100 DUP13 ADD PUSH2 0x222D JUMP JUMPDEST SWAP2 POP PUSH2 0x23F3 PUSH2 0x120 DUP13 ADD PUSH2 0x2306 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2424 DUP2 PUSH2 0x22F1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x243B DUP2 PUSH2 0x22F1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x248B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x24B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24DE DUP7 DUP3 DUP8 ADD PUSH2 0x2446 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2509 DUP2 PUSH2 0x22F1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x252C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x255C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x226C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x20 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x257A DUP3 DUP5 PUSH2 0x21D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x25B5 JUMPI PUSH2 0x25B5 PUSH2 0x20AC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x25D6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x25F6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D65657420746865204C69737420437269746572696120617420746865207469 DUP2 MSTORE PUSH32 0x6D65206F662074686520707269636520726571756573743F204C697374204372 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6974657269613A20000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x2680 DUP2 PUSH1 0x48 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x226C JUMP JUMPDEST PUSH32 0x2E20446563656E7472612D4C697374205265766973696F6E204944203D200000 PUSH1 0x48 SWAP4 SWAP1 SWAP2 ADD SWAP3 DUP4 ADD MSTORE POP PUSH1 0x66 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xD1D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x26DB JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5B4 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x26E7 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2714 JUMPI PUSH2 0x2714 PUSH2 0x20AC JUMP JUMPDEST PUSH2 0x2728 DUP2 PUSH2 0x2722 DUP5 SLOAD PUSH2 0x25C2 JUMP JUMPDEST DUP5 PUSH2 0x26B4 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x275D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2745 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x278C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x276D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x27AA JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2265 DUP2 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x27E9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x226C JUMP JUMPDEST PUSH32 0x6661696C20746F20000000000000000000000000000000000000000000000000 SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x8 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 PUSH2 0x282B DUP3 DUP6 DUP4 DUP11 ADD PUSH2 0x226C JUMP JUMPDEST DUP2 DUP5 ADD SWAP2 POP PUSH1 0x0 DUP7 SLOAD PUSH2 0x283D DUP2 PUSH2 0x25C2 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x2855 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x286A JUMPI PUSH2 0x2896 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x2896 JUMP JUMPDEST DUP11 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x288E JUMPI DUP2 SLOAD DUP10 DUP3 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP8 ADD PUSH2 0x2875 JUMP JUMPDEST POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP6 MLOAD SWAP3 POP PUSH2 0x28AB DUP4 DUP3 DUP5 DUP10 ADD PUSH2 0x226C JUMP JUMPDEST PUSH32 0x2E20466F7220646972656374696F6E7320746F2066696E64207468652050726F SWAP3 ADD SWAP2 DUP3 MSTORE PUSH32 0x706F736564204164647265737365732C2073656520496D706C656D656E746174 SWAP1 DUP3 ADD MSTORE PUSH32 0x696F6E2073656374696F6E206F6620554D49502D3136392E0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x58 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP3 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x295F JUMPI DUP2 CALLDATALOAD PUSH2 0x2941 DUP2 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x292E JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2989 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP7 DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x29DE PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x2290 JUMP JUMPDEST SWAP5 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE POP SWAP2 ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2A1D PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2290 JUMP JUMPDEST SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2A57 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2290 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP4 MSTORE DUP1 DUP9 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP6 PUSH1 0x40 DUP4 ADD MSTORE DUP5 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xC0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2AA0 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x2290 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD PUSH2 0x2AC3 DUP4 DUP8 PUSH2 0x21D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP6 ADD MSTORE DUP2 DUP6 DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 POP DUP7 SWAP3 POP PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2B09 JUMPI DUP4 CALLDATALOAD PUSH2 0x2AEE DUP2 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2ADB JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2B3D JUMPI PUSH2 0x2B3D PUSH2 0x2B15 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x257A JUMPI PUSH2 0x257A PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD PUSH2 0x2B81 DUP4 DUP7 PUSH2 0x21D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP2 POP DUP3 DUP8 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2BC2 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2B9D JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2BEC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x257A JUMPI PUSH2 0x257A PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x257A JUMPI PUSH2 0x257A PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2C51 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x226C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E SSTORE OR PUSH18 0x9301B7B4C2152A69BC645D91BCBDB026C906 SELFBALANCE PUSH4 0x8E0FAA09 0x25 0xB0 DUP14 PUSH30 0x64736F6C6343000811003300000000000000000000000000000000000000 ","sourceMap":"664:14828:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8805:1083;;;;;;:::i;:::-;;:::i;:::-;;2482:45;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2482:45:17;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;13947:438;;;;;;:::i;:::-;;:::i;14598:332::-;;;;;;:::i;:::-;;:::i;1578:19::-;;;:::i;:::-;;;;;;;:::i;1540:31::-;;;:::i;13507:262::-;;;;;;:::i;:::-;;:::i;1733:22::-;;;;;;;;;;;;4295:18:21;4283:31;;;4265:50;;4253:2;4238:18;1733:22:17;4121:200:21;2587:38:17;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5041:14:21;;5034:22;5016:41;;5004:2;4989:18;2587:38:17;4876:187:21;1831:101:0;;;:::i;3749:1496:17:-;;;;;;:::i;:::-;;:::i;1420:41::-;;;;;-1:-1:-1;;;;;1420:41:17;;;;;;-1:-1:-1;;;;;6390:55:21;;;6372:74;;6360:2;6345:18;1420:41:17;6190:262:21;1604:25:17;;;;;;;;;6603::21;;;6591:2;6576:18;1604:25:17;6457:177:21;13046:185:17;;;;;;:::i;:::-;;:::i;15194:295::-;;;:::i;1201:85:0:-;1247:7;1273:6;;;;-1:-1:-1;;;;;1273:6:0;1201:85;;1662:29:17;;;;;;1762;;;;;;;;;;;;1468:27;;;;;-1:-1:-1;;;;;1468:27:17;;;5659:2801;;;;;;:::i;:::-;;:::i;1504:29::-;;;;;-1:-1:-1;;;;;1504:29:17;;;1698:28;;;;;;2081:198:0;;;;;;:::i;:::-;;:::i;12637:128:17:-;;;;;;:::i;:::-;;:::i;1636:19::-;;;;;-1:-1:-1;;;;;1636:19:17;;;10276:2147;;;;;;:::i;:::-;;:::i;8805:1083::-;9068:6;;-1:-1:-1;;;;;9068:6:17;9046:10;:29;9024:113;;;;-1:-1:-1;;;9024:113:17;;10092:2:21;9024:113:17;;;10074:21:21;10131:2;10111:18;;;10104:30;10170:34;10150:18;;;10143:62;10241:4;10221:18;;;10214:32;10263:19;;9024:113:17;;;;;;;;;9200:25;9269:13;9284:9;9252:42;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9252:42:17;;;;;;;;;9228:77;;9252:42;9228:77;;;;9316:18;9337:30;;;:11;:30;;;;;;9228:77;;-1:-1:-1;;;9431:30:17;;9427:454;;9478:21;;;;:9;:21;;;;;;;9509:15;9478:28;:46;;;-1:-1:-1;;9478:46:17;;;;;;9544:113;;9478:21;;9544:113;;;;9608:34;;;9544:113;:::i;:::-;;;;;;;;9427:454;;;9690:21;;;;:9;:21;;;;;;;:28;;:46;;;-1:-1:-1;;9690:46:17;;;;;;9756:113;;9690:21;;9756:113;;;;9820:34;;;9756:113;:::i;:::-;;;;;;;;9427:454;8966:922;;8805:1083;;;;:::o;13947:438::-;1094:13:0;:11;:13::i;:::-;14205:5:17::1;::::0;14235::::1;::::0;14205:37:::1;::::0;-1:-1:-1;;;14205:37:17;;-1:-1:-1;;;;;14235:5:17;;::::1;14205:37;::::0;::::1;6372:74:21::0;14205:5:17;::::1;::::0;:21:::1;::::0;6345:18:21;;14205:37:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46:::0;14190:61;::::1;;14168:136;;;::::0;-1:-1:-1;;;14168:136:17;;11550:2:21;14168:136:17::1;::::0;::::1;11532:21:21::0;11589:2;11569:18;;;11562:30;11628:27;11608:18;;;11601:55;11673:18;;14168:136:17::1;11348:349:21::0;14168:136:17::1;14317:10;:24:::0;;;14357:20:::1;::::0;6603:25:21;;;14357:20:17::1;::::0;6591:2:21;6576:18;14357:20:17::1;;;;;;;;13947:438:::0;:::o;14598:332::-;1094:13:0;:11;:13::i;:::-;14702:15:17::1;::::0;::::1;::::0;;;::::1;::::0;::::1;14689:28:::0;;::::1;;;14667:113;;;::::0;-1:-1:-1;;;14667:113:17;;11904:2:21;14667:113:17::1;::::0;::::1;11886:21:21::0;11943:2;11923:18;;;11916:30;11982:34;11962:18;;;11955:62;-1:-1:-1;;;12033:18:21;;;12026:33;12076:19;;14667:113:17::1;11702:399:21::0;14667:113:17::1;14811:7;14799:9;:19;;;14791:62;;;::::0;-1:-1:-1;;;14791:62:17;;12308:2:21;14791:62:17::1;::::0;::::1;12290:21:21::0;12347:2;12327:18;;;12320:30;12386:32;12366:18;;;12359:60;12436:18;;14791:62:17::1;12106:354:21::0;14791:62:17::1;14864:8;:20:::0;;-1:-1:-1;;14864:20:17::1;;::::0;::::1;::::0;;::::1;::::0;;;14900:22:::1;::::0;4265:50:21;;;14900:22:17::1;::::0;4253:2:21;4238:18;14900:22:17::1;4121:200:21::0;1578:19:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1540:31::-;;;;;;;:::i;13507:262::-;1094:13:0;:11;:13::i;:::-;13629:14:17::1;:32:::0;;;13672:13:::1;:30:::0;;;13718:43:::1;::::0;;13081:25:21;;;13137:2;13122:18;;13115:34;;;13718:43:17::1;::::0;13054:18:21;13718:43:17::1;;;;;;;13507:262:::0;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;3749:1496:17:-;3257:19:2;3280:13;;;;;;3279:14;;3325:34;;;;-1:-1:-1;3343:12:2;;3358:1;3343:12;;;;:16;3325:34;3324:97;;;-1:-1:-1;3393:4:2;1465:19:6;:23;;;3365:55:2;;-1:-1:-1;3403:12:2;;;;;:17;3365:55;3303:190;;;;-1:-1:-1;;;3303:190:2;;13362:2:21;3303:190:2;;;13344:21:21;13401:2;13381:18;;;13374:30;13440:34;13420:18;;;13413:62;13511:16;13491:18;;;13484:44;13545:19;;3303:190:2;13160:410:21;3303:190:2;3503:12;:16;;-1:-1:-1;;3503:16:2;3518:1;3503:16;;;3529:65;;;;3563:13;:20;;-1:-1:-1;;3563:20:2;;;;;3529:65;4110:6:17::1;:33:::0;;-1:-1:-1;;;;;;4110:33:17::1;-1:-1:-1::0;;;;;4110:33:17;::::1;;::::0;;4154:15:::1;:13;:15::i;:::-;4180:5;:22:::0;;-1:-1:-1;;;;;;4180:22:17::1;-1:-1:-1::0;;;;;4180:22:17;;::::1;::::0;;::::1;::::0;;;4226:5:::1;::::0;:37:::1;::::0;-1:-1:-1;;;4226:37:17;;::::1;::::0;::::1;6372:74:21::0;;;;4226:5:17;;::::1;::::0;:21:::1;::::0;6345:18:21;;4226:37:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46:::0;4215:8:::1;:57:::0;4322:5:::1;::::0;4352::::1;::::0;4322:37:::1;::::0;-1:-1:-1;;;4322:37:17;;-1:-1:-1;;;;;4352:5:17;;::::1;4322:37;::::0;::::1;6372:74:21::0;4322:5:17;::::1;::::0;:21:::1;::::0;6345:18:21;;4322:37:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46:::0;4307:61;::::1;;4285:136;;;::::0;-1:-1:-1;;;4285:136:17;;11550:2:21;4285:136:17::1;::::0;::::1;11532:21:21::0;11589:2;11569:18;;;11562:30;11628:27;11608:18;;;11601:55;11673:18;;4285:136:17::1;11348:349:21::0;4285:136:17::1;4467:16;4454:29;;:9;:29;;;;4432:114;;;::::0;-1:-1:-1;;;4432:114:17;;11904:2:21;4432:114:17::1;::::0;::::1;11886:21:21::0;11943:2;11923:18;;;11916:30;11982:34;11962:18;;;11955:62;-1:-1:-1;;;12033:18:21;;;12026:33;12076:19;;4432:114:17::1;11702:399:21::0;4432:114:17::1;4577:10;4565:9;:22;;;4557:64;;;::::0;-1:-1:-1;;;4557:64:17;;13777:2:21;4557:64:17::1;::::0;::::1;13759:21:21::0;13816:2;13796:18;;;13789:30;13855:31;13835:18;;;13828:59;13904:18;;4557:64:17::1;13575:353:21::0;4557:64:17::1;4844:13;4728:187;;;;;;;;:::i;:::-;;;;;;;;;;;;;4707:18;:208;;;;;;:::i;:::-;-1:-1:-1::0;4926:5:17::1;:14;4934:6:::0;4926:5;:14:::1;:::i;:::-;-1:-1:-1::0;4951:5:17::1;:22:::0;;-1:-1:-1;;;;;4951:22:17;::::1;-1:-1:-1::0;;;;;;4951:22:17;;::::1;;::::0;;4984:10:::1;:24:::0;;;5019:14:::1;:32:::0;;;5062:13:::1;:30:::0;;;5103:8:::1;:20:::0;;::::1;5134:34:::0;;::::1;::::0;::::1;::::0;;;;5103:20;;::::1;5134:34:::0;::::1;::::0;;5179:26:::1;5198:6:::0;5179:18:::1;:26::i;:::-;5236:1;5218:15;:19:::0;3614:99:2;;;;3664:5;3648:21;;-1:-1:-1;;3648:21:2;;;3688:14;;-1:-1:-1;18383:36:21;;3688:14:2;;18371:2:21;18356:18;3688:14:2;;;;;;;3614:99;3247:472;3749:1496:17;;;;;;;;;;:::o;13046:185::-;1094:13:0;:11;:13::i;:::-;13177:46:17::1;-1:-1:-1::0;;;;;13177:27:17;::::1;13205:9:::0;13216:6;13177:27:::1;:46::i;:::-;13046:185:::0;;;:::o;15194:295::-;15288:6;;:68;;-1:-1:-1;;;15288:68:17;;15320:35;15288:68;;;6603:25:21;-1:-1:-1;;;;;15288:6:17;;;;:31;;6576:18:21;;15288:68:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15237:6;:130;;-1:-1:-1;;;;;;15237:130:17;-1:-1:-1;;;;;15237:130:17;;;;;;15415:6;;:55;;-1:-1:-1;;;15415:55:17;;15447:22;15415:55;;;6603:25:21;15415:6:17;;;:31;;6576:18:21;;15415:55:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15378:5;:103;;-1:-1:-1;;;;;;15378:103:17;-1:-1:-1;;;;;15378:103:17;;;;;;;;;;15194:295::o;5659:2801::-;5830:3;5810:23;;5788:109;;;;-1:-1:-1;;;5788:109:17;;19070:2:21;5788:109:17;;;19052:21:21;19109:2;19089:18;;;19082:30;19148:34;19128:18;;;19121:62;19219:6;19199:18;;;19192:34;19243:19;;5788:109:17;18868:400:21;5788:109:17;5950:57;;;;;;;;;;;;;;;;;:26;6022:13;:36;;;;;;;;:::i;:::-;;6018:124;;6104:13;6091:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;6075:55;;6018:124;6195:13;6223:18;6256:46;6286:15;;6256:29;:46::i;:::-;6168:250;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6168:250:17;;;;;;;;;;;-1:-1:-1;6451:15:17;;6429:19;;6580:44;;6168:250;;6451:15;;6168:250;6580:44;;:::i;:::-;;;;;;;;;;;;;6556:79;;;;;;6528:107;;6646:21;6697:10;;6680:28;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6680:28:17;;;;;;;;;6670:39;;6680:28;6670:39;;;;6820:15;;;6787:30;;;;:11;:30;;;;;:48;;;6927:26;;;:9;:26;;;;;;:48;;-1:-1:-1;;;;;;6927:48:17;6965:10;6927:48;;;6996:15;;6986:26;;;;;6927:48;6986:40;;;:56;;;7063:15;;7053:26;;;;;;:39;;:55;;6670:39;;-1:-1:-1;7095:13:17;;7053:39;;-1:-1:-1;;7053:55:17;;;;7095:13;7053:55;;;;;;;;:::i;:::-;;;;;-1:-1:-1;7129:15:17;;7119:26;;;;:9;:26;;;;;;:33;;:51;;-1:-1:-1;;7119:51:17;;;;;-1:-1:-1;7251:6:17;7311:5;;7251:69;;;;;-1:-1:-1;;;;;7251:6:17;;;;:19;;:69;;-1:-1:-1;;;7271:10:17;7283:11;;7296:13;;7311:5;;;;;7119:26;7251:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7331:6:17;;;:168;;;;;-1:-1:-1;;;;;7331:6:17;;;;:19;;:168;;-1:-1:-1;;;7365:10:17;7390:11;;7416:13;;7331:6;;;;:168;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7510:6:17;;7628:8;;7510:137;;;;;-1:-1:-1;;;;;7510:6:17;;;;-1:-1:-1;7510:24:17;;-1:-1:-1;7510:137:17;;-1:-1:-1;;;7549:10:17;7574:11;;7600:13;;7628:8;;;7510:137;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7678:6:17;;7786:10;;7678:129;;;;;7658:17;;-1:-1:-1;;;;;;7678:6:17;;;;-1:-1:-1;7678:14:17;;:129;;-1:-1:-1;;;7707:10:17;7732:11;;7758:13;;7678:129;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7902:5;;7658:149;;-1:-1:-1;7902:60:17;;-1:-1:-1;;;;;7902:5:17;7925:10;7945:4;7658:149;7902:22;:60::i;:::-;8077:6;;8051:5;;:45;;-1:-1:-1;;;;;8051:5:17;;;;8077:6;8086:9;8051:17;:45::i;:::-;8145:6;;:201;;;;;-1:-1:-1;;;;;8145:6:17;;;;:22;;:201;;8182:10;;8215:4;;-1:-1:-1;;;8235:10:17;8260:11;;8286:13;;1925:4;;8145:201;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8381:15;;8364:60;8398:13;8413:10;;8364:60;;;;;;;;:::i;:::-;;;;;;;;8435:15;:17;;;:15;:17;;;:::i;:::-;;;;;;5777:2683;;;;;5659:2801;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;26216:2:21;2161:73:0::1;::::0;::::1;26198:21:21::0;26255:2;26235:18;;;26228:30;26294:34;26274:18;;;26267:62;26365:8;26345:18;;;26338:36;26391:19;;2161:73:0::1;26014:402:21::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;12637:128:17:-;1094:13:0;:11;:13::i;:::-;12720:5:17::1;::::0;:37:::1;::::0;-1:-1:-1;;;;;12720:5:17::1;12739:9:::0;12750:6;12720:18:::1;:37::i;:::-;12637:128:::0;;:::o;10276:2147::-;10442:15;10409:22;;;;:9;:22;;;;;:29;;;;;;;;:48;;;;;;;;:::i;:::-;;10387:124;;;;-1:-1:-1;;;10387:124:17;;26623:2:21;10387:124:17;;;26605:21:21;26662:2;26642:18;;;26635:30;26701:28;26681:18;;;26674:56;26747:18;;10387:124:17;26421:350:21;10387:124:17;10628:10;;10611:28;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10611:28:17;;;;;;;;;10601:39;;10611:28;10601:39;;;;10544:22;;;;:9;:22;;;;;:36;;;:96;10522:193;;;;-1:-1:-1;;;10522:193:17;;26978:2:21;10522:193:17;;;26960:21:21;27017:2;26997:18;;;26990:30;27056:34;27036:18;;;27029:62;27127:17;27107:18;;;27100:45;27162:19;;10522:193:17;26776:411:21;10522:193:17;10763:22;;;;:9;:22;;;;;:29;;:47;;;-1:-1:-1;;10763:47:17;;;;;;:22;;;;10956:35;;-1:-1:-1;10956:58:17;;;;;;;:::i;:::-;;10952:305;;-1:-1:-1;;11078:13:17;;11045:5;;10952:305;;;11152:16;11113:22;;;;:9;:22;;;;;:35;;;;;;:55;;;;;;;:::i;:::-;;11109:148;;-1:-1:-1;;11231:14:17;;11199:4;;11109:148;11395:21;;11477:10;11463:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11463:32:17;;11427:68;;11513:9;11508:274;11528:21;;;11508:274;;;11600:11;11575:36;;:6;:21;11582:10;;11593:1;11582:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11575:21:17;;;;;;;;;;;;-1:-1:-1;11575:21:17;;;;:36;;;11571:200;;11656:11;11632:6;:21;11639:10;;11650:1;11639:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11632:21:17;;;;;;;;;;;;-1:-1:-1;11632:21:17;:35;;-1:-1:-1;;11632:35:17;;;;;;;;;;11708:10;;11719:1;11708:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;11686:16;11703:1;11686:19;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11686:35:17;;;:19;;;;;;;;;;;:35;11740:15;;;;:::i;:::-;;;;11571:200;11551:3;;;;:::i;:::-;;;;11508:274;;;-1:-1:-1;11846:14:17;11863:26;11876:13;11863:10;:26;:::i;:::-;11846:43;-1:-1:-1;11904:10:17;;11900:366;;11935:5;;:30;;-1:-1:-1;;;11935:30:17;;11959:4;11935:30;;;6372:74:21;11968:6:17;;-1:-1:-1;;;;;11935:5:17;;:15;;6345:18:21;;11935:30:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;11931:324;;;12036:22;;;;:9;:22;;;;;;;:31;12090:5;;:30;;-1:-1:-1;;;12090:30:17;;12114:4;12090:30;;;6372:74:21;11995:144:17;;-1:-1:-1;;;;;12036:31:17;;;;12090:5;;:15;;6345:18:21;;12090:30:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11995:5;;-1:-1:-1;;;;;11995:5:17;;:144;:18;:144::i;:::-;11931:324;;;12199:22;;;;:9;:22;;;;;:31;12180:5;;:59;;-1:-1:-1;;;;;12180:5:17;;;;12199:31;12232:6;12180:18;:59::i;:::-;12338:22;;;;:9;:22;;;;;;;:35;;;12281:134;;12312:11;;12281:134;;;;12338:35;;;12388:16;;12281:134;:::i;:::-;;;;;;;;10376:2047;;;;;10276:2147;;;:::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;;;;;719:10:7;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;28550:2:21;1414:68:0;;;28532:21:21;;;28569:18;;;28562:30;28628:34;28608:18;;;28601:62;28680:18;;1414:68:0;28348:356:21;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;2525:6;2541:17;;;;;;;;;2573:40;;2525:6;;;;;;;2541:17;;2525:6;;2573:40;;;2496:124;2433:187;:::o;763:205:5:-;902:58;;-1:-1:-1;;;;;28901:55:21;;902:58:5;;;28883:74:21;28973:18;;;28966:34;;;875:86:5;;895:5;;925:23;;28856:18:21;;902:58:5;;;;-1:-1:-1;;902:58:5;;;;;;;;;;;;;;;;;;;;;;;;;;;875:19;:86::i;3569:546:10:-;3628:12;3656:1;3661;3656:6;3652:47;;-1:-1:-1;;3678:10:10;;;;;;;;;;;;;;;;;;3569:546::o;3652:47::-;3720:1;3708:9;3752:66;3759:6;;3752:66;;3781:5;;;;:::i;:::-;;-1:-1:-1;3800:7:10;;-1:-1:-1;3805:2:10;3800:7;;:::i;:::-;;;3752:66;;;3827:17;3857:3;3847:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3847:14:10;-1:-1:-1;3827:34:10;-1:-1:-1;3883:3:10;3896:192;3903:6;;3896:192;;3929:5;3933:1;3929;:5;:::i;:::-;3925:9;-1:-1:-1;3948:10:10;3978:6;3982:2;3978:1;:6;:::i;:::-;3977:13;;3988:2;3977:13;:::i;:::-;3973:17;;:1;:17;:::i;:::-;3962:29;;:2;:29;:::i;:::-;3948:44;;4006:9;4025:4;4018:12;;4006:24;;4054:2;4044:4;4049:1;4044:7;;;;;;;;:::i;:::-;;;;:12;;;;;;;;;;-1:-1:-1;4070:7:10;4075:2;4070:7;;:::i;:::-;;;3911:177;;3896:192;;;-1:-1:-1;4104:4:10;3569:546;-1:-1:-1;;;;3569:546:10:o;974:241:5:-;1139:68;;-1:-1:-1;;;;;29857:15:21;;;1139:68:5;;;29839:34:21;29909:15;;29889:18;;;29882:43;29941:18;;;29934:34;;;1112:96:5;;1132:5;;1162:27;;29751:18:21;;1139:68:5;29576:398:21;1112:96:5;974:241;;;;:::o;1475:603::-;1830:10;;;1829:62;;-1:-1:-1;1846:39:5;;;;;1870:4;1846:39;;;30214:34:21;-1:-1:-1;;;;;30284:15:21;;;30264:18;;;30257:43;1846:15:5;;;;;30126:18:21;;1846:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1829:62;1808:163;;;;-1:-1:-1;;;1808:163:5;;30513:2:21;1808:163:5;;;30495:21:21;30552:2;30532:18;;;30525:30;30591:34;30571:18;;;30564:62;30662:24;30642:18;;;30635:52;30704:19;;1808:163:5;30311:418:21;1808:163:5;2008:62;;-1:-1:-1;;;;;28901:55:21;;2008:62:5;;;28883:74:21;28973:18;;;28966:34;;;1981:90:5;;2001:5;;2031:22;;28856:18:21;;2008:62:5;28709:297:21;3747:706:5;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:5;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:5;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:5;;31218:2:21;4351:85:5;;;31200:21:21;31257:2;31237:18;;;31230:30;31296:34;31276:18;;;31269:62;31367:12;31347:18;;;31340:40;31397:19;;4351:85:5;31016:406:21;3873:223:6;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:6:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:6;;31629:2:21;5149:81:6;;;31611:21:21;31668:2;31648:18;;;31641:30;31707:34;31687:18;;;31680:62;31778:8;31758:18;;;31751:36;31804:19;;5149:81:6;31427:402:21;5149:81:6;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:6;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:6:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:6;;;7908:60;;;;-1:-1:-1;;;7908:60:6;;32328:2:21;7908:60:6;;;32310:21:21;32367:2;32347:18;;;32340:30;32406:31;32386:18;;;32379:59;32455:18;;7908:60:6;32126:353:21;7908:60:6;-1:-1:-1;8003:10:6;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:6;;;;;;;;:::i;14:184:21:-;-1:-1:-1;;;63:1:21;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:718;245:5;298:3;291:4;283:6;279:17;275:27;265:55;;316:1;313;306:12;265:55;352:6;339:20;378:18;415:2;411;408:10;405:36;;;421:18;;:::i;:::-;496:2;490:9;464:2;550:13;;-1:-1:-1;;546:22:21;;;570:2;542:31;538:40;526:53;;;594:18;;;614:22;;;591:46;588:72;;;640:18;;:::i;:::-;680:10;676:2;669:22;715:2;707:6;700:18;761:3;754:4;749:2;741:6;737:15;733:26;730:35;727:55;;;778:1;775;768:12;727:55;842:2;835:4;827:6;823:17;816:4;808:6;804:17;791:54;889:1;882:4;877:2;869:6;865:15;861:26;854:37;909:6;900:15;;;;;;203:718;;;;:::o;926:524::-;1020:6;1028;1036;1044;1097:3;1085:9;1076:7;1072:23;1068:33;1065:53;;;1114:1;1111;1104:12;1065:53;1150:9;1137:23;1127:33;;1207:2;1196:9;1192:18;1179:32;1169:42;;1262:2;1251:9;1247:18;1234:32;1289:18;1281:6;1278:30;1275:50;;;1321:1;1318;1311:12;1275:50;1344:49;1385:7;1376:6;1365:9;1361:22;1344:49;:::i;:::-;926:524;;;;-1:-1:-1;1334:59:21;;1440:2;1425:18;1412:32;;-1:-1:-1;;;926:524:21:o;1455:180::-;1514:6;1567:2;1555:9;1546:7;1542:23;1538:32;1535:52;;;1583:1;1580;1573:12;1535:52;-1:-1:-1;1606:23:21;;1455:180;-1:-1:-1;1455:180:21:o;1640:184::-;-1:-1:-1;;;1689:1:21;1682:88;1789:4;1786:1;1779:15;1813:4;1810:1;1803:15;1829:143;1913:1;1906:5;1903:12;1893:46;;1919:18;;:::i;:::-;1948;;1829:143::o;1977:542::-;-1:-1:-1;;;;;2250:55:21;;2232:74;;2337:2;2322:18;;2315:34;;;2219:3;2204:19;;2358:56;2410:2;2395:18;;2387:6;2358:56;:::i;:::-;2444:1;2436:6;2433:13;2423:47;;2450:18;;:::i;:::-;2506:6;2501:2;2490:9;2486:18;2479:34;1977:542;;;;;;;:::o;2524:171::-;2591:20;;2651:18;2640:30;;2630:41;;2620:69;;2685:1;2682;2675:12;2620:69;2524:171;;;:::o;2700:184::-;2758:6;2811:2;2799:9;2790:7;2786:23;2782:32;2779:52;;;2827:1;2824;2817:12;2779:52;2850:28;2868:9;2850:28;:::i;:::-;2840:38;2700:184;-1:-1:-1;;;2700:184:21:o;2889:250::-;2974:1;2984:113;2998:6;2995:1;2992:13;2984:113;;;3074:11;;;3068:18;3055:11;;;3048:39;3020:2;3013:10;2984:113;;;-1:-1:-1;;3131:1:21;3113:16;;3106:27;2889:250::o;3144:271::-;3186:3;3224:5;3218:12;3251:6;3246:3;3239:19;3267:76;3336:6;3329:4;3324:3;3320:14;3313:4;3306:5;3302:16;3267:76;:::i;:::-;3397:2;3376:15;-1:-1:-1;;3372:29:21;3363:39;;;;3404:4;3359:50;;3144:271;-1:-1:-1;;3144:271:21:o;3420:220::-;3569:2;3558:9;3551:21;3532:4;3589:45;3630:2;3619:9;3615:18;3607:6;3589:45;:::i;3868:248::-;3936:6;3944;3997:2;3985:9;3976:7;3972:23;3968:32;3965:52;;;4013:1;4010;4003:12;3965:52;-1:-1:-1;;4036:23:21;;;4106:2;4091:18;;;4078:32;;-1:-1:-1;3868:248:21:o;4326:154::-;-1:-1:-1;;;;;4405:5:21;4401:54;4394:5;4391:65;4381:93;;4470:1;4467;4460:12;4485:134;4553:20;;4582:31;4553:20;4582:31;:::i;4624:247::-;4683:6;4736:2;4724:9;4715:7;4711:23;4707:32;4704:52;;;4752:1;4749;4742:12;4704:52;4791:9;4778:23;4810:31;4835:5;4810:31;:::i;5068:1117::-;5225:6;5233;5241;5249;5257;5265;5273;5281;5289;5297;5350:3;5338:9;5329:7;5325:23;5321:33;5318:53;;;5367:1;5364;5357:12;5318:53;5390:29;5409:9;5390:29;:::i;:::-;5380:39;;5470:2;5459:9;5455:18;5442:32;5493:18;5534:2;5526:6;5523:14;5520:34;;;5550:1;5547;5540:12;5520:34;5573:49;5614:7;5605:6;5594:9;5590:22;5573:49;:::i;:::-;5563:59;;5675:2;5664:9;5660:18;5647:32;5631:48;;5704:2;5694:8;5691:16;5688:36;;;5720:1;5717;5710:12;5688:36;;5743:51;5786:7;5775:8;5764:9;5760:24;5743:51;:::i;:::-;5733:61;;;5813:38;5847:2;5836:9;5832:18;5813:38;:::i;:::-;5803:48;;5898:3;5887:9;5883:19;5870:33;5860:43;;5950:3;5939:9;5935:19;5922:33;5912:43;;6002:3;5991:9;5987:19;5974:33;5964:43;;6026:38;6059:3;6048:9;6044:19;6026:38;:::i;:::-;6016:48;;6083:38;6116:3;6105:9;6101:19;6083:38;:::i;:::-;6073:48;;6140:39;6174:3;6163:9;6159:19;6140:39;:::i;:::-;6130:49;;5068:1117;;;;;;;;;;;;;:::o;6639:456::-;6716:6;6724;6732;6785:2;6773:9;6764:7;6760:23;6756:32;6753:52;;;6801:1;6798;6791:12;6753:52;6840:9;6827:23;6859:31;6884:5;6859:31;:::i;:::-;6909:5;-1:-1:-1;6961:2:21;6946:18;;6933:32;;-1:-1:-1;7017:2:21;7002:18;;6989:32;7030:33;6989:32;7030:33;:::i;:::-;7082:7;7072:17;;;6639:456;;;;;:::o;7585:367::-;7648:8;7658:6;7712:3;7705:4;7697:6;7693:17;7689:27;7679:55;;7730:1;7727;7720:12;7679:55;-1:-1:-1;7753:20:21;;7796:18;7785:30;;7782:50;;;7828:1;7825;7818:12;7782:50;7865:4;7857:6;7853:17;7841:29;;7925:3;7918:4;7908:6;7905:1;7901:14;7893:6;7889:27;7885:38;7882:47;7879:67;;;7942:1;7939;7932:12;7879:67;7585:367;;;;;:::o;7957:598::-;8069:6;8077;8085;8138:2;8126:9;8117:7;8113:23;8109:32;8106:52;;;8154:1;8151;8144:12;8106:52;8193:9;8180:23;8232:1;8225:5;8222:12;8212:40;;8248:1;8245;8238:12;8212:40;8271:5;-1:-1:-1;8327:2:21;8312:18;;8299:32;8354:18;8343:30;;8340:50;;;8386:1;8383;8376:12;8340:50;8425:70;8487:7;8478:6;8467:9;8463:22;8425:70;:::i;:::-;7957:598;;8514:8;;-1:-1:-1;8399:96:21;;-1:-1:-1;;;;7957:598:21:o;8815:315::-;8883:6;8891;8944:2;8932:9;8923:7;8919:23;8915:32;8912:52;;;8960:1;8957;8950:12;8912:52;8999:9;8986:23;9018:31;9043:5;9018:31;:::i;:::-;9068:5;9120:2;9105:18;;;;9092:32;;-1:-1:-1;;;8815:315:21:o;9380:505::-;9475:6;9483;9491;9544:2;9532:9;9523:7;9519:23;9515:32;9512:52;;;9560:1;9557;9550:12;9512:52;9596:9;9583:23;9573:33;;9657:2;9646:9;9642:18;9629:32;9684:18;9676:6;9673:30;9670:50;;;9716:1;9713;9706:12;10293:383;10450:3;10488:6;10482:13;10504:66;10563:6;10558:3;10551:4;10543:6;10539:17;10504:66;:::i;:::-;10592:16;;;;10617:21;;;-1:-1:-1;10665:4:21;10654:16;;10293:383;-1:-1:-1;10293:383:21:o;10681:214::-;10830:2;10815:18;;10842:47;10819:9;10871:6;10842:47;:::i;:::-;10681:214;;;;:::o;10900:443::-;10996:6;11049:2;11037:9;11028:7;11024:23;11020:32;11017:52;;;11065:1;11062;11055:12;11017:52;11098:2;11092:9;11140:2;11132:6;11128:15;11209:6;11197:10;11194:22;11173:18;11161:10;11158:34;11155:62;11152:88;;;11220:18;;:::i;:::-;11256:2;11249:22;11295:16;;11280:32;;-1:-1:-1;11287:6:21;10900:443;-1:-1:-1;10900:443:21:o;12465:437::-;12544:1;12540:12;;;;12587;;;12608:61;;12662:4;12654:6;12650:17;12640:27;;12608:61;12715:2;12707:6;12704:14;12684:18;12681:38;12678:218;;-1:-1:-1;;;12749:1:21;12742:88;12853:4;12850:1;12843:15;12881:4;12878:1;12871:15;12678:218;;12465:437;;;:::o;13933:740::-;14283:34;14278:3;14271:47;14348:34;14343:2;14338:3;14334:12;14327:56;14413:10;14408:2;14403:3;14399:12;14392:32;14253:3;14453:6;14447:13;14469:73;14535:6;14530:2;14525:3;14521:12;14516:2;14508:6;14504:15;14469:73;:::i;:::-;14606:32;14601:2;14561:16;;;;14593:11;;;14586:53;-1:-1:-1;14663:3:21;14655:12;;13933:740;-1:-1:-1;13933:740:21:o;14803:544::-;14904:2;14899:3;14896:11;14893:448;;;14940:1;14965:5;14961:2;14954:17;15010:4;15006:2;14996:19;15080:2;15068:10;15064:19;15061:1;15057:27;15051:4;15047:38;15116:4;15104:10;15101:20;15098:47;;;-1:-1:-1;15139:4:21;15098:47;15194:2;15189:3;15185:12;15182:1;15178:20;15172:4;15168:31;15158:41;;15249:82;15267:2;15260:5;15257:13;15249:82;;;15312:17;;;15293:1;15282:13;15249:82;;15523:1348;15647:3;15641:10;15674:18;15666:6;15663:30;15660:56;;;15696:18;;:::i;:::-;15725:96;15814:6;15774:38;15806:4;15800:11;15774:38;:::i;:::-;15768:4;15725:96;:::i;:::-;15876:4;;15940:2;15929:14;;15957:1;15952:662;;;;16658:1;16675:6;16672:89;;;-1:-1:-1;16727:19:21;;;16721:26;16672:89;-1:-1:-1;;15480:1:21;15476:11;;;15472:24;15468:29;15458:40;15504:1;15500:11;;;15455:57;16774:81;;15922:943;;15952:662;14750:1;14743:14;;;14787:4;14774:18;;-1:-1:-1;;15988:20:21;;;16105:236;16119:7;16116:1;16113:14;16105:236;;;16208:19;;;16202:26;16187:42;;16300:27;;;;16268:1;16256:14;;;;16135:19;;16105:236;;;16109:3;16369:6;16360:7;16357:19;16354:201;;;16430:19;;;16424:26;-1:-1:-1;;16513:1:21;16509:14;;;16525:3;16505:24;16501:37;16497:42;16482:58;16467:74;;16354:201;-1:-1:-1;;;;;16601:1:21;16585:14;;;16581:22;16568:36;;-1:-1:-1;15523:1348:21:o;18612:251::-;18682:6;18735:2;18723:9;18714:7;18710:23;18706:32;18703:52;;;18751:1;18748;18741:12;18703:52;18783:9;18777:16;18802:31;18827:5;18802:31;:::i;19273:446::-;19492:3;19530:6;19524:13;19546:66;19605:6;19600:3;19593:4;19585:6;19581:17;19546:66;:::i;:::-;19673:10;19634:16;;19659:25;;;-1:-1:-1;19711:1:21;19700:13;;19273:446;-1:-1:-1;19273:446:21:o;19724:1526::-;20042:3;20080:6;20074:13;20106:4;20119:64;20176:6;20171:3;20166:2;20158:6;20154:15;20119:64;:::i;:::-;20214:6;20209:3;20205:16;20192:29;;20241:1;20274:6;20268:13;20306:36;20332:9;20306:36;:::i;:::-;20361:1;20378:18;;;20405:141;;;;20560:1;20555:337;;;;20371:521;;20405:141;-1:-1:-1;;20440:24:21;;20426:39;;20517:16;;20510:24;20496:39;;20485:51;;;-1:-1:-1;20405:141:21;;20555:337;20586:6;20583:1;20576:17;20634:2;20631:1;20621:16;20659:1;20673:169;20687:8;20684:1;20681:15;20673:169;;;20769:14;;20754:13;;;20747:37;20812:16;;;;20704:10;;20673:169;;;20677:3;;20873:8;20866:5;20862:20;20855:27;;20371:521;;;;;20923:6;20917:13;20901:29;;20939:66;20996:8;20991:3;20986:2;20978:6;20974:15;20939:66;:::i;:::-;21062:34;21024:18;;21051:46;;;21126:34;21113:11;;;21106:55;21190:26;21185:2;21177:11;;21170:47;21241:2;21233:11;;19724:1526;-1:-1:-1;;;;;19724:1526:21:o;21255:643::-;21426:3;21457;21504:6;21426:3;21538:333;21552:6;21549:1;21546:13;21538:333;;;21627:6;21614:20;21647:31;21672:5;21647:31;:::i;:::-;-1:-1:-1;;;;;21705:54:21;21691:69;;21783:4;21809:14;;;;21846:15;;;;;21574:1;21567:9;21538:333;;;-1:-1:-1;21887:5:21;;21255:643;-1:-1:-1;;;;;21255:643:21:o;21903:576::-;22184:6;22173:9;22166:25;22227:6;22222:2;22211:9;22207:18;22200:34;22270:3;22265:2;22254:9;22250:18;22243:31;22147:4;22291:46;22332:3;22321:9;22317:19;22309:6;22291:46;:::i;:::-;-1:-1:-1;;;;;22373:55:21;;;;22368:2;22353:18;;22346:83;-1:-1:-1;22460:3:21;22445:19;22438:35;22283:54;21903:576;-1:-1:-1;;;21903:576:21:o;22484:184::-;22554:6;22607:2;22595:9;22586:7;22582:23;22578:32;22575:52;;;22623:1;22620;22613:12;22575:52;-1:-1:-1;22646:16:21;;22484:184;-1:-1:-1;22484:184:21:o;22673:607::-;22942:6;22931:9;22924:25;22985:6;22980:2;22969:9;22965:18;22958:34;23028:3;23023:2;23012:9;23008:18;23001:31;22905:4;23049:46;23090:3;23079:9;23075:19;23067:6;23049:46;:::i;:::-;23138:14;;23131:22;23126:2;23111:18;;23104:50;-1:-1:-1;23198:14:21;;23191:22;23185:3;23170:19;;23163:51;23258:14;23251:22;23245:3;23230:19;;;23223:51;23041:54;22673:607;-1:-1:-1;;;22673:607:21:o;23285:457::-;23515:6;23504:9;23497:25;23558:6;23553:2;23542:9;23538:18;23531:34;23601:3;23596:2;23585:9;23581:18;23574:31;23478:4;23622:46;23663:3;23652:9;23648:19;23640:6;23622:46;:::i;:::-;23614:54;;23716:18;23708:6;23704:31;23699:2;23688:9;23684:18;23677:59;23285:457;;;;;;;:::o;23747:433::-;23978:6;23967:9;23960:25;24021:6;24016:2;24005:9;24001:18;23994:34;24064:3;24059:2;24048:9;24044:18;24037:31;23941:4;24085:46;24126:3;24115:9;24111:19;24103:6;24085:46;:::i;:::-;24077:54;;24167:6;24162:2;24151:9;24147:18;24140:34;23747:433;;;;;;;:::o;24185:654::-;24433:4;-1:-1:-1;;;;;24543:2:21;24535:6;24531:15;24520:9;24513:34;24595:2;24587:6;24583:15;24578:2;24567:9;24563:18;24556:43;;24635:6;24630:2;24619:9;24615:18;24608:34;24678:6;24673:2;24662:9;24658:18;24651:34;24722:3;24716;24705:9;24701:19;24694:32;24743:46;24784:3;24773:9;24769:19;24761:6;24743:46;:::i;:::-;24735:54;;24826:6;24820:3;24809:9;24805:19;24798:35;24185:654;;;;;;;;;:::o;24844:836::-;25039:4;25087:2;25076:9;25072:18;25099:47;25136:9;25128:6;25099:47;:::i;:::-;25165:2;25203;25198;25187:9;25183:18;25176:30;25226:6;25256;25248;25241:22;25294:2;25283:9;25279:18;25272:25;;25320:6;25306:20;;25344:1;25354:300;25368:6;25365:1;25362:13;25354:300;;;25443:6;25430:20;25463:31;25488:5;25463:31;:::i;:::-;-1:-1:-1;;;;;25519:54:21;25507:67;;25629:15;;;;25594:12;;;;25390:1;25383:9;25354:300;;;-1:-1:-1;25671:3:21;24844:836;-1:-1:-1;;;;;;;24844:836:21:o;25685:184::-;-1:-1:-1;;;25734:1:21;25727:88;25834:4;25831:1;25824:15;25858:4;25855:1;25848:15;25874:135;25913:3;25934:17;;;25931:43;;25954:18;;:::i;:::-;-1:-1:-1;26001:1:21;25990:13;;25874:135::o;27192:184::-;-1:-1:-1;;;27241:1:21;27234:88;27341:4;27338:1;27331:15;27365:4;27362:1;27355:15;27381:168;27454:9;;;27485;;27502:15;;;27496:22;;27482:37;27472:71;;27523:18;;:::i;27554:789::-;27739:4;27787:2;27776:9;27772:18;27799:47;27836:9;27828:6;27799:47;:::i;:::-;27865:2;27903;27898;27887:9;27883:18;27876:30;27926:6;27961;27955:13;27992:6;27984;27977:22;28030:2;28019:9;28015:18;28008:25;;28068:2;28060:6;28056:15;28042:29;;28089:1;28099:218;28113:6;28110:1;28107:13;28099:218;;;28178:13;;-1:-1:-1;;;;;28174:62:21;28162:75;;28292:15;;;;28257:12;;;;28135:1;28128:9;28099:218;;;-1:-1:-1;28334:3:21;;27554:789;-1:-1:-1;;;;;;;27554:789:21:o;29011:274::-;29051:1;29077;29067:189;;-1:-1:-1;;;29109:1:21;29102:88;29213:4;29210:1;29203:15;29241:4;29238:1;29231:15;29067:189;-1:-1:-1;29270:9:21;;29011:274::o;29290:128::-;29357:9;;;29378:11;;;29375:37;;;29392:18;;:::i;29423:148::-;29511:4;29490:12;;;29504;;;29486:31;;29529:13;;29526:39;;;29545:18;;:::i;30734:277::-;30801:6;30854:2;30842:9;30833:7;30829:23;30825:32;30822:52;;;30870:1;30867;30860:12;30822:52;30902:9;30896:16;30955:5;30948:13;30941:21;30934:5;30931:32;30921:60;;30977:1;30974;30967:12;31834:287;31963:3;32001:6;31995:13;32017:66;32076:6;32071:3;32064:4;32056:6;32052:17;32017:66;:::i;:::-;32099:16;;;;;31834:287;-1:-1:-1;;31834:287:21:o"},"methodIdentifiers":{"additionReward()":"8dee967e","bondAmount()":"80f323a7","executeRevision(uint256,address[])":"fee53ab6","finder()":"b9a3c84c","fixedAncillaryData()":"5cae7fb5","initialize(address,bytes,string,address,uint256,uint256,uint256,uint64,uint64,address)":"74881462","liveness()":"6ad0690a","minimumLiveness()":"91152f10","onList(address)":"6f626eb3","oracle()":"7dc0d1d0","owner()":"8da5cb5b","priceSettled(bytes32,uint256,bytes,int256)":"04cc1fd5","proposeRevision(uint8,address[])":"af359fa2","removalReward()":"c207ec6e","renounceOwnership()":"715018a6","rescue(address,uint256,address)":"8671d23b","revisions(uint256)":"0ef486d1","setBond(uint256)":"259bd920","setLiveness(uint64)":"3c4432f1","setRewards(uint256,uint256)":"654e51e7","store()":"975057e7","syncContracts()":"8a301adc","title()":"4a79d50c","token()":"fc0c546a","transferOwnership(address)":"f2fde38b","withdraw(address,uint256)":"f3fef3a3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"BondSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"liveness\",\"type\":\"uint64\"}],\"name\":\"LivenessSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"revisionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Decentralist.RevisionType\",\"name\":\"revisionType\",\"type\":\"uint8\"}],\"name\":\"RevisionApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"revisionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Decentralist.RevisionType\",\"name\":\"revisionType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"revisedAddresses\",\"type\":\"address[]\"}],\"name\":\"RevisionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"revisionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Decentralist.RevisionType\",\"name\":\"revisionType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"proposedAddresses\",\"type\":\"address[]\"}],\"name\":\"RevisionProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"revisionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Decentralist.RevisionType\",\"name\":\"revisionType\",\"type\":\"uint8\"}],\"name\":\"RevisionRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"additionReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removalReward\",\"type\":\"uint256\"}],\"name\":\"RewardsSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"additionReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_revisionId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"}],\"name\":\"executeRevision\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finder\",\"outputs\":[{\"internalType\":\"contract FinderInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fixedAncillaryData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_finder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_listCriteria\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bondAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_additionReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_removalReward\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_liveness\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_minimumLiveness\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liveness\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumLiveness\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"onList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract OptimisticOracleV2Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"priceSettled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Decentralist.RevisionType\",\"name\":\"_revisionType\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"}],\"name\":\"proposeRevision\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"rescue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"revisions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"addressesHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum Decentralist.RevisionType\",\"name\":\"revisionType\",\"type\":\"uint8\"},{\"internalType\":\"enum Decentralist.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bondAmount\",\"type\":\"uint256\"}],\"name\":\"setBond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_liveness\",\"type\":\"uint64\"}],\"name\":\"setLiveness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_additionReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_removalReward\",\"type\":\"uint256\"}],\"name\":\"setRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"store\",\"outputs\":[{\"internalType\":\"contract StoreInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syncContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"title\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeRevision(uint256,address[])\":{\"params\":{\"_addresses\":\"Address array that matches the array logged in the RevisionProposed event for the provided _revisionId.\",\"_revisionId\":\"ID of revision to be executed. If Revision submitted does not have status Approved, tx will revert.\"}},\"initialize(address,bytes,string,address,uint256,uint256,uint256,uint64,uint64,address)\":{\"params\":{\"_additionReward\":\"Reward per address successfully added to the list, paid by the contract to the proposer.\",\"_bondAmount\":\"Additional bond required, beyond the final fee.\",\"_finder\":\"The address of UMA Finder contract. This is set in the DecentralistProxyFactory constructor.\",\"_listCriteria\":\"Criteria for what addresses should be included on the list. Can be on-chain text or a link to IPFS.\",\"_liveness\":\"The period, in seconds, in which a proposal can be disputed.\",\"_minimumLiveness\":\"The minimum allowable liveness period, in seconds.\",\"_owner\":\"Owner of the contract can remove funds from the contract and adjust reward rates. Set to the 0 address to make the contract 'public'.\",\"_removalReward\":\"Reward per address successfully removed from the list, paid by the contract to the proposer.\",\"_title\":\"Short title for the list.\",\"_token\":\"The address of the token currency used for this contract. Must be on UMA's collateral whitelist.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"priceSettled(bytes32,uint256,bytes,int256)\":{\"params\":{\"ancillaryData\":\"Ancillary data of the data being requested.\",\"timestamp\":\"Timestamp to identify the existing request.\",\"value\":\"Value returned from the oracle.\"}},\"proposeRevision(uint8,address[])\":{\"details\":\"Caller must have approved this contract to spend the total bond amount of the contract's token before calling.\",\"params\":{\"_addresses\":\"Array of addresses for the proposed revision.\",\"_revisionType\":\"Enum indicatting if the proposed revision is adding or removing addresses. 0 = Remove, 1 = Add.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"rescue(address,uint256,address)\":{\"params\":{\"_token\":\"The contract address of the token to send.\",\"amount\":\"The amount of tokens to to send.\",\"recipient\":\"The recipient of the tokens.\"}},\"setBond(uint256)\":{\"params\":{\"_bondAmount\":\"Amount of the bond token that will need to be paid for future proposals.\"}},\"setLiveness(uint64)\":{\"params\":{\"_liveness\":\"Liveness to set in seconds.\"}},\"setRewards(uint256,uint256)\":{\"params\":{\"_additionReward\":\"Reward to proposer per address successfully added to the list.\",\"_removalReward\":\"Reward to proposer per address successfully removed from the list.\"}},\"syncContracts()\":{\"details\":\"If a new OptimisticOracle is added and this is run between a revision's introduction and execution, the proposal will become unexecutable.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to to send.\",\"recipient\":\"The recipient of the tokens.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeRevision(uint256,address[])\":{\"notice\":\"Executes approved revisions by revising the list and paying out rewards to the proposer.\"},\"initialize(address,bytes,string,address,uint256,uint256,uint256,uint64,uint64,address)\":{\"notice\":\"Initializes the contract.\"},\"priceSettled(bytes32,uint256,bytes,int256)\":{\"notice\":\"Callback function called upon oracle data settlement to update the Revision status to Approved or Rejected.\"},\"proposeRevision(uint8,address[])\":{\"notice\":\"Proposes addresses to add or remove from the list.\"},\"rescue(address,uint256,address)\":{\"notice\":\"Allows owner to rescue tokens sent accidentally to the contract.\"},\"setBond(uint256)\":{\"notice\":\"Sets the bond amount for revisions.\"},\"setLiveness(uint64)\":{\"notice\":\"Sets the liveness for future revisions. This is the amount of delay before a proposal is approved by default.\"},\"setRewards(uint256,uint256)\":{\"notice\":\"Sets the rewards for successful revisions.\"},\"syncContracts()\":{\"notice\":\"This pulls in the most up-to-date Optimistic Oracle contract.\"},\"withdraw(address,uint256)\":{\"notice\":\"Allows owner to withdraw the default tokens from the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Decentralist.sol\":\"Decentralist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3798da9e212cd00a7cda94ddb5a9721171a718e89c500d8901f810e0e37fa74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93f9c584e4b29dce1c7520b63d19f34c684f5ea972b5d04323a132059851004\",\"dweb:/ipfs/QmajmiA7BsarS63FMoP5PcBS4mqVGoiJ7xZ3wJVonYNTHC\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce\",\"dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB\"]},\"@uma/core/contracts/common/implementation/AncillaryData.sol\":{\"keccak256\":\"0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a\",\"dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2\"]},\"@uma/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663\",\"dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT\"]},\"@uma/core/contracts/oracle/implementation/Constants.sol\":{\"keccak256\":\"0xda68bfe488310f86be9423666bbb1025a7dfa8494df73914da91abb8ff6cb774\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7dbf823c0a519d9db56b26abaaf75cbff73c2094583cdf50f7025c0ed23f8072\",\"dweb:/ipfs/Qmey1e83re5NPbyijqbLUJJm5z5fdtcqpzVaxu75988XD1\"]},\"@uma/core/contracts/oracle/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"@uma/core/contracts/oracle/interfaces/OptimisticOracleV2Interface.sol\":{\"keccak256\":\"0xbfd9778b3e7c86e149cc140eda5e7210ef4a604cde576abaaa46c1289c5e334f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0f52a8f51cce3444937d477426077785bb68b22de41f39a6e4d58a6dc1c7ede5\",\"dweb:/ipfs/QmdNMPxBjhvcEoKNKdzLB8pA2uhqrZWHo8vcrhWeC9r6ro\"]},\"@uma/core/contracts/oracle/interfaces/StoreInterface.sol\":{\"keccak256\":\"0xbb73671684309c91ad5ef3da1474051d03f2e7d5882bed7f5c4317e5d4c768df\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://32386544d3119fd0187a8c4e8b01c739f508ab863faa04345cabc2544081f9e8\",\"dweb:/ipfs/QmYszDURs1x75rsejZkGt9zCkASXnJtufbNsL3XHe2eJPQ\"]},\"contracts/Decentralist.sol\":{\"keccak256\":\"0xd802d17f05de4fb0dd8a7356c333f197d03ef4fc1fccc7dc90ee7d4c3afc0512\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf28369a885932bceae62e2f64ddb98997d9edb7c55a890bc6eab63d70764708\",\"dweb:/ipfs/QmfFr5wk9WQEFY6RWcFc9YbEFyUoRuM2zFAjX6HUZGy7Bn\"]}},\"version\":1}"}},"contracts/DecentralistProxyFactory.sol":{"DecentralistProxyFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_implementation","type":"address"},{"internalType":"address","name":"_finder","type":"address"},{"internalType":"uint64","name":"_minimumLiveness","type":"uint64"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_clone","type":"address"}],"name":"NewClone","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allClones","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"collateralWhitelist","outputs":[{"internalType":"contract AddressWhitelistInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_listCriteria","type":"bytes"},{"internalType":"string","name":"_title","type":"string"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_bondAmount","type":"uint256"},{"internalType":"uint256","name":"_additionReward","type":"uint256"},{"internalType":"uint256","name":"_removalReward","type":"uint256"},{"internalType":"uint64","name":"_liveness","type":"uint64"},{"internalType":"address","name":"_owner","type":"address"}],"name":"createNewDecentralist","outputs":[{"internalType":"address","name":"instance","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"finder","outputs":[{"internalType":"contract FinderInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllClones","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"implementationContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minimumLiveness","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"syncWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_4997":{"entryPoint":null,"id":4997,"parameterSlots":3,"returnSlots":0},"@syncWhitelist_5100":{"entryPoint":345,"id":5100,"parameterSlots":0,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":519,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":631,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint64_fromMemory":{"entryPoint":547,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_78e3bf9502626f09060106afd8790cbec0ebebca8f8db979e3ae7796e67c1c4a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_79f72dd753d5acc67fd029f243bf8b3fc09511ac690b846d2075e38941a91a23__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1819:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:21","statements":[{"nodeType":"YulAssignment","src":"84:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:21"},"nodeType":"YulFunctionCall","src":"93:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:21"}]},{"body":{"nodeType":"YulBlock","src":"169:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:21"},"nodeType":"YulFunctionCall","src":"171:12:21"},"nodeType":"YulExpressionStatement","src":"171:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:21"},"nodeType":"YulFunctionCall","src":"150:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:21"},"nodeType":"YulFunctionCall","src":"146:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:21"},"nodeType":"YulFunctionCall","src":"135:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:21"},"nodeType":"YulFunctionCall","src":"125:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:21"},"nodeType":"YulFunctionCall","src":"118:50:21"},"nodeType":"YulIf","src":"115:70:21"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:21","type":""}],"src":"14:177:21"},{"body":{"nodeType":"YulBlock","src":"310:344:21","statements":[{"body":{"nodeType":"YulBlock","src":"356:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"365:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"368:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"358:6:21"},"nodeType":"YulFunctionCall","src":"358:12:21"},"nodeType":"YulExpressionStatement","src":"358:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"331:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"340:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"327:3:21"},"nodeType":"YulFunctionCall","src":"327:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"352:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"323:3:21"},"nodeType":"YulFunctionCall","src":"323:32:21"},"nodeType":"YulIf","src":"320:52:21"},{"nodeType":"YulAssignment","src":"381:50:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"421:9:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"391:29:21"},"nodeType":"YulFunctionCall","src":"391:40:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"381:6:21"}]},{"nodeType":"YulAssignment","src":"440:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"484:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"495:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"480:3:21"},"nodeType":"YulFunctionCall","src":"480:18:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"450:29:21"},"nodeType":"YulFunctionCall","src":"450:49:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"440:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"508:38:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"531:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"542:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"527:3:21"},"nodeType":"YulFunctionCall","src":"527:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"521:5:21"},"nodeType":"YulFunctionCall","src":"521:25:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"512:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"608:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"617:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"620:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"610:6:21"},"nodeType":"YulFunctionCall","src":"610:12:21"},"nodeType":"YulExpressionStatement","src":"610:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"568:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"579:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"594:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"598:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"590:3:21"},"nodeType":"YulFunctionCall","src":"590:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"602:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"586:3:21"},"nodeType":"YulFunctionCall","src":"586:18:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"575:3:21"},"nodeType":"YulFunctionCall","src":"575:30:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"565:2:21"},"nodeType":"YulFunctionCall","src":"565:41:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"558:6:21"},"nodeType":"YulFunctionCall","src":"558:49:21"},"nodeType":"YulIf","src":"555:69:21"},{"nodeType":"YulAssignment","src":"633:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"643:5:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"633:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"260:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"271:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"283:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"291:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"299:6:21","type":""}],"src":"196:458:21"},{"body":{"nodeType":"YulBlock","src":"833:229:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"850:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"861:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"843:6:21"},"nodeType":"YulFunctionCall","src":"843:21:21"},"nodeType":"YulExpressionStatement","src":"843:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"884:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"895:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"880:3:21"},"nodeType":"YulFunctionCall","src":"880:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"900:2:21","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"873:6:21"},"nodeType":"YulFunctionCall","src":"873:30:21"},"nodeType":"YulExpressionStatement","src":"873:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"923:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"934:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:21"},"nodeType":"YulFunctionCall","src":"919:18:21"},{"hexValue":"696d706c656d656e746174696f6e20616464726573732063616e206e6f742062","kind":"string","nodeType":"YulLiteral","src":"939:34:21","type":"","value":"implementation address can not b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"912:6:21"},"nodeType":"YulFunctionCall","src":"912:62:21"},"nodeType":"YulExpressionStatement","src":"912:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"994:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1005:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"990:3:21"},"nodeType":"YulFunctionCall","src":"990:18:21"},{"hexValue":"6520656d707479","kind":"string","nodeType":"YulLiteral","src":"1010:9:21","type":"","value":"e empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"983:6:21"},"nodeType":"YulFunctionCall","src":"983:37:21"},"nodeType":"YulExpressionStatement","src":"983:37:21"},{"nodeType":"YulAssignment","src":"1029:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1041:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1052:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1037:3:21"},"nodeType":"YulFunctionCall","src":"1037:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1029:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_78e3bf9502626f09060106afd8790cbec0ebebca8f8db979e3ae7796e67c1c4a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"810:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"824:4:21","type":""}],"src":"659:403:21"},{"body":{"nodeType":"YulBlock","src":"1241:181:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1258:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1269:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1251:6:21"},"nodeType":"YulFunctionCall","src":"1251:21:21"},"nodeType":"YulExpressionStatement","src":"1251:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1292:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1303:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1288:3:21"},"nodeType":"YulFunctionCall","src":"1288:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"1308:2:21","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1281:6:21"},"nodeType":"YulFunctionCall","src":"1281:30:21"},"nodeType":"YulExpressionStatement","src":"1281:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1331:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1342:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1327:3:21"},"nodeType":"YulFunctionCall","src":"1327:18:21"},{"hexValue":"66696e64657220616464726573732063616e206e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"1347:33:21","type":"","value":"finder address can not be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1320:6:21"},"nodeType":"YulFunctionCall","src":"1320:61:21"},"nodeType":"YulExpressionStatement","src":"1320:61:21"},{"nodeType":"YulAssignment","src":"1390:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1402:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1413:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1398:3:21"},"nodeType":"YulFunctionCall","src":"1398:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1390:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_79f72dd753d5acc67fd029f243bf8b3fc09511ac690b846d2075e38941a91a23__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1218:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1232:4:21","type":""}],"src":"1067:355:21"},{"body":{"nodeType":"YulBlock","src":"1528:76:21","statements":[{"nodeType":"YulAssignment","src":"1538:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1550:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1561:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1546:3:21"},"nodeType":"YulFunctionCall","src":"1546:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1538:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1580:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"1591:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1573:6:21"},"nodeType":"YulFunctionCall","src":"1573:25:21"},"nodeType":"YulExpressionStatement","src":"1573:25:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1497:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1508:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1519:4:21","type":""}],"src":"1427:177:21"},{"body":{"nodeType":"YulBlock","src":"1690:127:21","statements":[{"body":{"nodeType":"YulBlock","src":"1736:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1745:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1748:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1738:6:21"},"nodeType":"YulFunctionCall","src":"1738:12:21"},"nodeType":"YulExpressionStatement","src":"1738:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1711:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1720:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1707:3:21"},"nodeType":"YulFunctionCall","src":"1707:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1732:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1703:3:21"},"nodeType":"YulFunctionCall","src":"1703:32:21"},"nodeType":"YulIf","src":"1700:52:21"},{"nodeType":"YulAssignment","src":"1761:50:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1801:9:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"1771:29:21"},"nodeType":"YulFunctionCall","src":"1771:40:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1761:6:21"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1656:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1667:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1679:6:21","type":""}],"src":"1609:208:21"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint64_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, sub(shl(64, 1), 1)))) { revert(0, 0) }\n        value2 := value\n    }\n    function abi_encode_tuple_t_stringliteral_78e3bf9502626f09060106afd8790cbec0ebebca8f8db979e3ae7796e67c1c4a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"implementation address can not b\")\n        mstore(add(headStart, 96), \"e empty\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_79f72dd753d5acc67fd029f243bf8b3fc09511ac690b846d2075e38941a91a23__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"finder address can not be empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610c9e380380610c9e83398101604081905261002f91610223565b6001600160a01b03821661009a5760405162461bcd60e51b815260206004820152602760248201527f696d706c656d656e746174696f6e20616464726573732063616e206e6f7420626044820152666520656d70747960c81b60648201526084015b60405180910390fd5b6001600160a01b0382166100f05760405162461bcd60e51b815260206004820152601f60248201527f66696e64657220616464726573732063616e206e6f7420626520656d707479006044820152606401610091565b60008054600280546001600160a01b0319166001600160a01b03868116919091179091556001600160e01b031990911668010000000000000000918616919091026001600160401b031916176001600160401b038316179055610151610159565b505050610299565b6002546040516302abf57960e61b81527f436f6c6c61746572616c57686974656c6973740000000000000000000000000060048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa1580156101c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e59190610277565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b80516001600160a01b038116811461021e57600080fd5b919050565b60008060006060848603121561023857600080fd5b61024184610207565b925061024f60208501610207565b60408501519092506001600160401b038116811461026c57600080fd5b809150509250925092565b60006020828403121561028957600080fd5b61029282610207565b9392505050565b6109f6806102a86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806399e7d0561161005b57806399e7d0561461010d578063b9a3c84c1461012c578063d7741cad1461013f578063e4ee614a1461015257600080fd5b80632177a32b1461008d57806327831ee0146100975780633ca9482d146100b557806391152f10146100e0575b600080fd5b610095610165565b005b61009f610239565b6040516100ac919061065b565b60405180910390f35b6100c86100c33660046107af565b61029b565b6040516001600160a01b0390911681526020016100ac565b6000546100f49067ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016100ac565b6000546100c8906801000000000000000090046001600160a01b031681565b6002546100c8906001600160a01b031681565b6100c861014d366004610879565b610590565b6003546100c8906001600160a01b031681565b6002546040517faafd5e400000000000000000000000000000000000000000000000000000000081527f436f6c6c61746572616c57686974656c6973740000000000000000000000000060048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa1580156101e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020a9190610892565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6060600180548060200260200160405190810160405280929190818152602001828054801561029157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610273575b5050505050905090565b6003546040517f3a3ab6720000000000000000000000000000000000000000000000000000000081526001600160a01b0388811660048301526000921690633a3ab67290602401602060405180830381865afa1580156102ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032391906108af565b61039a5760405162461bcd60e51b815260206004820152602a60248201527f746f6b656e206973206e6f74206f6e20554d41277320636f6c6c61746572616c60448201527f2077686974656c6973740000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000546103bb906801000000000000000090046001600160a01b03166105ba565b6002546000805460405193945090926001600160a01b0380861693610400939116918e918e918e918e918e918e918e9167ffffffffffffffff16908e90602401610921565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f74881462000000000000000000000000000000000000000000000000000000001790525161046391906109a4565b6000604051808303816000865af19150503d80600081146104a0576040519150601f19603f3d011682016040523d82523d6000602084013e6104a5565b606091505b50509050806104f65760405162461bcd60e51b815260206004820152601f60248201527f6661696c656420746f206372656174652061206e657720696e7374616e6365006044820152606401610391565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091556040519081527fcc1e9c890bc4f4943c457abb8d17f97703b9f7144e1f4a69e50c6e4988ef38b79060200160405180910390a15098975050505050505050565b600181815481106105a057600080fd5b6000918252602090912001546001600160a01b0316905081565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b0381166106565760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c6564000000000000000000006044820152606401610391565b919050565b6020808252825182820181905260009190848201906040850190845b8181101561069c5783516001600160a01b031683529284019291840191600101610677565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600067ffffffffffffffff808411156106f2576106f26106a8565b604051601f8501601f19908116603f0116810190828211818310171561071a5761071a6106a8565b8160405280935085815286868601111561073357600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261075e57600080fd5b61076d838335602085016106d7565b9392505050565b6001600160a01b038116811461078957600080fd5b50565b803561065681610774565b803567ffffffffffffffff8116811461065657600080fd5b600080600080600080600080610100898b0312156107cc57600080fd5b883567ffffffffffffffff808211156107e457600080fd5b818b0191508b601f8301126107f857600080fd5b6108078c8335602085016106d7565b995060208b013591508082111561081d57600080fd5b5061082a8b828c0161074d565b97505061083960408a0161078c565b9550606089013594506080890135935060a0890135925061085c60c08a01610797565b915061086a60e08a0161078c565b90509295985092959890939650565b60006020828403121561088b57600080fd5b5035919050565b6000602082840312156108a457600080fd5b815161076d81610774565b6000602082840312156108c157600080fd5b8151801515811461076d57600080fd5b60005b838110156108ec5781810151838201526020016108d4565b50506000910152565b6000815180845261090d8160208601602086016108d1565b601f01601f19169290920160200192915050565b60006101406001600160a01b03808e1684528160208501526109458285018e6108f5565b91508382036040850152610959828d6108f5565b9a811660608501526080840199909952505060a081019590955260c085019390935267ffffffffffffffff91821660e085015216610100830152909116610120909101529392505050565b600082516109b68184602087016108d1565b919091019291505056fea2646970667358221220e108e69c5b778bd39a55ac800ddd280c9a9d931185fe8e7c2e7b02592ad21e4264736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC9E CODESIZE SUB DUP1 PUSH2 0xC9E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x223 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696D706C656D656E746174696F6E20616464726573732063616E206E6F742062 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x6520656D707479 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x66696E64657220616464726573732063616E206E6F7420626520656D70747900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND PUSH9 0x10000000000000000 SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH2 0x151 PUSH2 0x159 JUMP JUMPDEST POP POP POP PUSH2 0x299 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2ABF579 PUSH1 0xE6 SHL DUP2 MSTORE PUSH32 0x436F6C6C61746572616C57686974656C69737400000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAAFD5E40 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x241 DUP5 PUSH2 0x207 JUMP JUMPDEST SWAP3 POP PUSH2 0x24F PUSH1 0x20 DUP6 ADD PUSH2 0x207 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x292 DUP3 PUSH2 0x207 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x9F6 DUP1 PUSH2 0x2A8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x99E7D056 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x99E7D056 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xB9A3C84C EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xD7741CAD EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xE4EE614A EQ PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2177A32B EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x27831EE0 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x3CA9482D EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x91152F10 EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x165 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9F PUSH2 0x239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC8 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x29B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xF4 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xC8 SWAP1 PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xC8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x14D CALLDATASIZE PUSH1 0x4 PUSH2 0x879 JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xC8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0xAAFD5E4000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x436F6C6C61746572616C57686974656C69737400000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAAFD5E40 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x892 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x273 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x3A3AB67200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x3A3AB672 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x8AF JUMP JUMPDEST PUSH2 0x39A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E206973206E6F74206F6E20554D41277320636F6C6C61746572616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2077686974656C69737400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x3BB SWAP1 PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP4 PUSH2 0x400 SWAP4 SWAP2 AND SWAP2 DUP15 SWAP2 DUP15 SWAP2 DUP15 SWAP2 DUP15 SWAP2 DUP15 SWAP2 DUP15 SWAP2 DUP15 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP15 SWAP1 PUSH1 0x24 ADD PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7488146200000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE MLOAD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C656420746F206372656174652061206E657720696E7374616E636500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x391 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xCC1E9C890BC4F4943C457ABB8D17F97703B9F7144E1F4A69E50C6E4988EF38B7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP3 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP3 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 PUSH1 0x0 CREATE SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313136373A20637265617465206661696C656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x391 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x69C JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x677 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x6F2 JUMPI PUSH2 0x6F2 PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x71A JUMPI PUSH2 0x71A PUSH2 0x6A8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x75E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76D DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x6D7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x656 DUP2 PUSH2 0x774 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x807 DUP13 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x6D7 JUMP JUMPDEST SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x81D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82A DUP12 DUP3 DUP13 ADD PUSH2 0x74D JUMP JUMPDEST SWAP8 POP POP PUSH2 0x839 PUSH1 0x40 DUP11 ADD PUSH2 0x78C JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH2 0x85C PUSH1 0xC0 DUP11 ADD PUSH2 0x797 JUMP JUMPDEST SWAP2 POP PUSH2 0x86A PUSH1 0xE0 DUP11 ADD PUSH2 0x78C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x88B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x76D DUP2 PUSH2 0x774 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8EC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8D4 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x90D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP15 AND DUP5 MSTORE DUP2 PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x945 DUP3 DUP6 ADD DUP15 PUSH2 0x8F5 JUMP JUMPDEST SWAP2 POP DUP4 DUP3 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x959 DUP3 DUP14 PUSH2 0x8F5 JUMP JUMPDEST SWAP11 DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP10 SWAP1 SWAP10 MSTORE POP POP PUSH1 0xA0 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0xE0 DUP6 ADD MSTORE AND PUSH2 0x100 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x9B6 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x8D1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 ADDMOD 0xE6 SWAP13 JUMPDEST PUSH24 0x8BD39A55AC800DDD280C9A9D931185FE8E7C2E7B02592AD2 0x1E TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"329:3806:18:-:0;;;860:413;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;958:21:18;;950:73;;;;-1:-1:-1;;;950:73:18;;861:2:21;950:73:18;;;843:21:21;900:2;880:18;;;873:30;939:34;919:18;;;912:62;-1:-1:-1;;;990:18:21;;;983:37;1037:19;;950:73:18;;;;;;;;;-1:-1:-1;;;;;1042:21:18;;1034:65;;;;-1:-1:-1;;;1034:65:18;;1269:2:21;1034:65:18;;;1251:21:21;1308:2;1288:18;;;1281:30;1347:33;1327:18;;;1320:61;1398:18;;1034:65:18;1067:355:21;1034:65:18;1110:22;:40;;1161:6;:33;;-1:-1:-1;;;;;;1161:33:18;-1:-1:-1;;;;;1161:33:18;;;;;;;;;;-1:-1:-1;;;;;;1205:34:18;;;1110:40;;;;;;;;-1:-1:-1;;;;;;1205:34:18;;-1:-1:-1;;;;;1205:34:18;;;;;1250:15;:13;:15::i;:::-;860:413;;;329:3806;;3963:169;4054:6;;:69;;-1:-1:-1;;;4054:69:18;;4086:36;4054:69;;;1573:25:21;-1:-1:-1;;;;;4054:6:18;;;;:31;;1546:18:21;;4054:69:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4006:19;:118;;-1:-1:-1;;;;;;4006:118:18;-1:-1:-1;;;;;4006:118:18;;;;;;;;;;3963:169::o;14:177:21:-;93:13;;-1:-1:-1;;;;;135:31:21;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:458::-;283:6;291;299;352:2;340:9;331:7;327:23;323:32;320:52;;;368:1;365;358:12;320:52;391:40;421:9;391:40;:::i;:::-;381:50;;450:49;495:2;484:9;480:18;450:49;:::i;:::-;542:2;527:18;;521:25;440:59;;-1:-1:-1;;;;;;575:30:21;;565:41;;555:69;;620:1;617;610:12;555:69;643:5;633:15;;;196:458;;;;;:::o;1609:208::-;1679:6;1732:2;1720:9;1711:7;1707:23;1703:32;1700:52;;;1748:1;1745;1738:12;1700:52;1771:40;1801:9;1771:40;:::i;:::-;1761:50;1609:208;-1:-1:-1;;;1609:208:21:o;:::-;329:3806:18;;;;;;"},"deployedBytecode":{"functionDebugData":{"@allClones_4939":{"entryPoint":1424,"id":4939,"parameterSlots":0,"returnSlots":0},"@clone_135":{"entryPoint":1466,"id":135,"parameterSlots":1,"returnSlots":1},"@collateralWhitelist_4945":{"entryPoint":null,"id":4945,"parameterSlots":0,"returnSlots":0},"@createNewDecentralist_5075":{"entryPoint":667,"id":5075,"parameterSlots":8,"returnSlots":1},"@finder_4942":{"entryPoint":null,"id":4942,"parameterSlots":0,"returnSlots":0},"@getAllClones_5085":{"entryPoint":569,"id":5085,"parameterSlots":0,"returnSlots":1},"@implementationContract_4936":{"entryPoint":null,"id":4936,"parameterSlots":0,"returnSlots":0},"@minimumLiveness_4934":{"entryPoint":null,"id":4934,"parameterSlots":0,"returnSlots":0},"@syncWhitelist_5100":{"entryPoint":357,"id":5100,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":1932,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":1751,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string":{"entryPoint":1869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":2194,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":2223,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptrt_string_memory_ptrt_addresst_uint256t_uint256t_uint256t_uint64t_address":{"entryPoint":1967,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_uint256":{"entryPoint":2169,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint64":{"entryPoint":1943,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes":{"entryPoint":2293,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2468,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_uint64_t_uint64_t_address__to_t_address_t_bytes_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_uint64_t_uint64_t_address__fromStack_reversed":{"entryPoint":2337,"id":null,"parameterSlots":11,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":1627,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_AddressWhitelistInterface_$3551__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_FinderInterface_$3622__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_284a847f07c9e11f6d6a09b7ffb7c1312021489096d61c8c2e1aa269c3ad5534__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dd6254682a2283a2c9e2200dc67615bd0491e95d67a854e3cea8e733b2d0026a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2257,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x41":{"entryPoint":1704,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":1908,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8254:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"165:530:21","statements":[{"nodeType":"YulVariableDeclaration","src":"175:12:21","value":{"kind":"number","nodeType":"YulLiteral","src":"185:2:21","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"179:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"196:32:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"214:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"225:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"210:3:21"},"nodeType":"YulFunctionCall","src":"210:18:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"200:6:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"244:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"255:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"237:6:21"},"nodeType":"YulFunctionCall","src":"237:21:21"},"nodeType":"YulExpressionStatement","src":"237:21:21"},{"nodeType":"YulVariableDeclaration","src":"267:17:21","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"278:6:21"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"271:3:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"293:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"313:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"307:5:21"},"nodeType":"YulFunctionCall","src":"307:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"297:6:21","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"336:6:21"},{"name":"length","nodeType":"YulIdentifier","src":"344:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"329:6:21"},"nodeType":"YulFunctionCall","src":"329:22:21"},"nodeType":"YulExpressionStatement","src":"329:22:21"},{"nodeType":"YulAssignment","src":"360:25:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"371:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"382:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"367:3:21"},"nodeType":"YulFunctionCall","src":"367:18:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"360:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"394:29:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"412:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"420:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"408:3:21"},"nodeType":"YulFunctionCall","src":"408:15:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"398:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"432:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"441:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"436:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"500:169:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"521:3:21"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"536:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"530:5:21"},"nodeType":"YulFunctionCall","src":"530:13:21"},{"kind":"number","nodeType":"YulLiteral","src":"545:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"526:3:21"},"nodeType":"YulFunctionCall","src":"526:62:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"514:6:21"},"nodeType":"YulFunctionCall","src":"514:75:21"},"nodeType":"YulExpressionStatement","src":"514:75:21"},{"nodeType":"YulAssignment","src":"602:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"613:3:21"},{"name":"_1","nodeType":"YulIdentifier","src":"618:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"609:3:21"},"nodeType":"YulFunctionCall","src":"609:12:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"602:3:21"}]},{"nodeType":"YulAssignment","src":"634:25:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"648:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"656:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"644:3:21"},"nodeType":"YulFunctionCall","src":"644:15:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"634:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"462:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"465:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"459:2:21"},"nodeType":"YulFunctionCall","src":"459:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"473:18:21","statements":[{"nodeType":"YulAssignment","src":"475:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"484:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"487:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"480:3:21"},"nodeType":"YulFunctionCall","src":"480:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"475:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"455:3:21","statements":[]},"src":"451:218:21"},{"nodeType":"YulAssignment","src":"678:11:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"686:3:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"678:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"134:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"145:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"156:4:21","type":""}],"src":"14:681:21"},{"body":{"nodeType":"YulBlock","src":"732:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"752:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"742:6:21"},"nodeType":"YulFunctionCall","src":"742:88:21"},"nodeType":"YulExpressionStatement","src":"742:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"846:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"849:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:21"},"nodeType":"YulFunctionCall","src":"839:15:21"},"nodeType":"YulExpressionStatement","src":"839:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"870:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"873:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"863:6:21"},"nodeType":"YulFunctionCall","src":"863:15:21"},"nodeType":"YulExpressionStatement","src":"863:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"700:184:21"},{"body":{"nodeType":"YulBlock","src":"963:557:21","statements":[{"nodeType":"YulVariableDeclaration","src":"973:28:21","value":{"kind":"number","nodeType":"YulLiteral","src":"983:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"977:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1028:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1030:16:21"},"nodeType":"YulFunctionCall","src":"1030:18:21"},"nodeType":"YulExpressionStatement","src":"1030:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1016:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1024:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1013:2:21"},"nodeType":"YulFunctionCall","src":"1013:14:21"},"nodeType":"YulIf","src":"1010:40:21"},{"nodeType":"YulVariableDeclaration","src":"1059:17:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1073:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1069:3:21"},"nodeType":"YulFunctionCall","src":"1069:7:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1063:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1085:23:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1105:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1099:5:21"},"nodeType":"YulFunctionCall","src":"1099:9:21"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1089:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1117:73:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1139:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1163:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1171:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1159:3:21"},"nodeType":"YulFunctionCall","src":"1159:15:21"},{"name":"_2","nodeType":"YulIdentifier","src":"1176:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1155:3:21"},"nodeType":"YulFunctionCall","src":"1155:24:21"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:21","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1151:3:21"},"nodeType":"YulFunctionCall","src":"1151:33:21"},{"name":"_2","nodeType":"YulIdentifier","src":"1186:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1147:3:21"},"nodeType":"YulFunctionCall","src":"1147:42:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1135:3:21"},"nodeType":"YulFunctionCall","src":"1135:55:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1121:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1249:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1251:16:21"},"nodeType":"YulFunctionCall","src":"1251:18:21"},"nodeType":"YulExpressionStatement","src":"1251:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1208:10:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1220:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1205:2:21"},"nodeType":"YulFunctionCall","src":"1205:18:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1228:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1240:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1225:2:21"},"nodeType":"YulFunctionCall","src":"1225:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1202:2:21"},"nodeType":"YulFunctionCall","src":"1202:46:21"},"nodeType":"YulIf","src":"1199:72:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1287:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1291:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1280:6:21"},"nodeType":"YulFunctionCall","src":"1280:22:21"},"nodeType":"YulExpressionStatement","src":"1280:22:21"},{"nodeType":"YulAssignment","src":"1311:15:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1320:6:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1311:5:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1342:6:21"},{"name":"length","nodeType":"YulIdentifier","src":"1350:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1335:6:21"},"nodeType":"YulFunctionCall","src":"1335:22:21"},"nodeType":"YulExpressionStatement","src":"1335:22:21"},{"body":{"nodeType":"YulBlock","src":"1395:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1404:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1407:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1397:6:21"},"nodeType":"YulFunctionCall","src":"1397:12:21"},"nodeType":"YulExpressionStatement","src":"1397:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1376:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1381:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1372:3:21"},"nodeType":"YulFunctionCall","src":"1372:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"1390:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1369:2:21"},"nodeType":"YulFunctionCall","src":"1369:25:21"},"nodeType":"YulIf","src":"1366:45:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1437:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1445:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1433:3:21"},"nodeType":"YulFunctionCall","src":"1433:17:21"},{"name":"src","nodeType":"YulIdentifier","src":"1452:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1457:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1420:12:21"},"nodeType":"YulFunctionCall","src":"1420:44:21"},"nodeType":"YulExpressionStatement","src":"1420:44:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1488:6:21"},{"name":"length","nodeType":"YulIdentifier","src":"1496:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1484:3:21"},"nodeType":"YulFunctionCall","src":"1484:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"1505:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1480:3:21"},"nodeType":"YulFunctionCall","src":"1480:30:21"},{"kind":"number","nodeType":"YulLiteral","src":"1512:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1473:6:21"},"nodeType":"YulFunctionCall","src":"1473:41:21"},"nodeType":"YulExpressionStatement","src":"1473:41:21"}]},"name":"abi_decode_available_length_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"932:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"937:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"945:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"953:5:21","type":""}],"src":"889:631:21"},{"body":{"nodeType":"YulBlock","src":"1578:168:21","statements":[{"body":{"nodeType":"YulBlock","src":"1627:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1636:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1639:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1629:6:21"},"nodeType":"YulFunctionCall","src":"1629:12:21"},"nodeType":"YulExpressionStatement","src":"1629:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1606:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1614:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1602:3:21"},"nodeType":"YulFunctionCall","src":"1602:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"1621:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1598:3:21"},"nodeType":"YulFunctionCall","src":"1598:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1591:6:21"},"nodeType":"YulFunctionCall","src":"1591:35:21"},"nodeType":"YulIf","src":"1588:55:21"},{"nodeType":"YulAssignment","src":"1652:88:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1699:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1707:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1695:3:21"},"nodeType":"YulFunctionCall","src":"1695:17:21"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1727:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1714:12:21"},"nodeType":"YulFunctionCall","src":"1714:20:21"},{"name":"end","nodeType":"YulIdentifier","src":"1736:3:21"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"1661:33:21"},"nodeType":"YulFunctionCall","src":"1661:79:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1652:5:21"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1552:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1560:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1568:5:21","type":""}],"src":"1525:221:21"},{"body":{"nodeType":"YulBlock","src":"1796:109:21","statements":[{"body":{"nodeType":"YulBlock","src":"1883:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1892:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1895:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1885:6:21"},"nodeType":"YulFunctionCall","src":"1885:12:21"},"nodeType":"YulExpressionStatement","src":"1885:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1819:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1830:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1837:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1826:3:21"},"nodeType":"YulFunctionCall","src":"1826:54:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1816:2:21"},"nodeType":"YulFunctionCall","src":"1816:65:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1809:6:21"},"nodeType":"YulFunctionCall","src":"1809:73:21"},"nodeType":"YulIf","src":"1806:93:21"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1785:5:21","type":""}],"src":"1751:154:21"},{"body":{"nodeType":"YulBlock","src":"1959:85:21","statements":[{"nodeType":"YulAssignment","src":"1969:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1991:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1978:12:21"},"nodeType":"YulFunctionCall","src":"1978:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1969:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2032:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2007:24:21"},"nodeType":"YulFunctionCall","src":"2007:31:21"},"nodeType":"YulExpressionStatement","src":"2007:31:21"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1938:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1949:5:21","type":""}],"src":"1910:134:21"},{"body":{"nodeType":"YulBlock","src":"2097:123:21","statements":[{"nodeType":"YulAssignment","src":"2107:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2129:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2116:12:21"},"nodeType":"YulFunctionCall","src":"2116:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2107:5:21"}]},{"body":{"nodeType":"YulBlock","src":"2198:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2207:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2210:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2200:6:21"},"nodeType":"YulFunctionCall","src":"2200:12:21"},"nodeType":"YulExpressionStatement","src":"2200:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2158:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2169:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2176:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2165:3:21"},"nodeType":"YulFunctionCall","src":"2165:30:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2155:2:21"},"nodeType":"YulFunctionCall","src":"2155:41:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2148:6:21"},"nodeType":"YulFunctionCall","src":"2148:49:21"},"nodeType":"YulIf","src":"2145:69:21"}]},"name":"abi_decode_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2076:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2087:5:21","type":""}],"src":"2049:171:21"},{"body":{"nodeType":"YulBlock","src":"2432:896:21","statements":[{"body":{"nodeType":"YulBlock","src":"2479:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2488:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2491:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2481:6:21"},"nodeType":"YulFunctionCall","src":"2481:12:21"},"nodeType":"YulExpressionStatement","src":"2481:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2453:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2462:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2449:3:21"},"nodeType":"YulFunctionCall","src":"2449:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2474:3:21","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2445:3:21"},"nodeType":"YulFunctionCall","src":"2445:33:21"},"nodeType":"YulIf","src":"2442:53:21"},{"nodeType":"YulVariableDeclaration","src":"2504:37:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2531:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2518:12:21"},"nodeType":"YulFunctionCall","src":"2518:23:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2508:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2550:28:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2560:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2554:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2605:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2614:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2617:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2607:6:21"},"nodeType":"YulFunctionCall","src":"2607:12:21"},"nodeType":"YulExpressionStatement","src":"2607:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2593:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"2601:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2590:2:21"},"nodeType":"YulFunctionCall","src":"2590:14:21"},"nodeType":"YulIf","src":"2587:34:21"},{"nodeType":"YulVariableDeclaration","src":"2630:32:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2644:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2655:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2640:3:21"},"nodeType":"YulFunctionCall","src":"2640:22:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2634:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2710:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2719:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2722:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2712:6:21"},"nodeType":"YulFunctionCall","src":"2712:12:21"},"nodeType":"YulExpressionStatement","src":"2712:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2689:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"2693:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2685:3:21"},"nodeType":"YulFunctionCall","src":"2685:13:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2700:7:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2681:3:21"},"nodeType":"YulFunctionCall","src":"2681:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2674:6:21"},"nodeType":"YulFunctionCall","src":"2674:35:21"},"nodeType":"YulIf","src":"2671:55:21"},{"nodeType":"YulAssignment","src":"2735:85:21","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2783:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"2787:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2779:3:21"},"nodeType":"YulFunctionCall","src":"2779:13:21"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2807:2:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2794:12:21"},"nodeType":"YulFunctionCall","src":"2794:16:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:21"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"2745:33:21"},"nodeType":"YulFunctionCall","src":"2745:75:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2735:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"2829:50:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2862:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2873:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2858:3:21"},"nodeType":"YulFunctionCall","src":"2858:20:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2845:12:21"},"nodeType":"YulFunctionCall","src":"2845:34:21"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"2833:8:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2908:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2917:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2920:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2910:6:21"},"nodeType":"YulFunctionCall","src":"2910:12:21"},"nodeType":"YulExpressionStatement","src":"2910:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"2894:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"2904:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2891:2:21"},"nodeType":"YulFunctionCall","src":"2891:16:21"},"nodeType":"YulIf","src":"2888:36:21"},{"nodeType":"YulAssignment","src":"2933:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2965:9:21"},{"name":"offset_1","nodeType":"YulIdentifier","src":"2976:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2961:3:21"},"nodeType":"YulFunctionCall","src":"2961:24:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2987:7:21"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"2943:17:21"},"nodeType":"YulFunctionCall","src":"2943:52:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:21"}]},{"nodeType":"YulAssignment","src":"3004:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3037:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3048:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3033:3:21"},"nodeType":"YulFunctionCall","src":"3033:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3014:18:21"},"nodeType":"YulFunctionCall","src":"3014:38:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3004:6:21"}]},{"nodeType":"YulAssignment","src":"3061:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3088:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3099:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3084:3:21"},"nodeType":"YulFunctionCall","src":"3084:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3071:12:21"},"nodeType":"YulFunctionCall","src":"3071:32:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3061:6:21"}]},{"nodeType":"YulAssignment","src":"3112:43:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3139:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3150:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3135:3:21"},"nodeType":"YulFunctionCall","src":"3135:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3122:12:21"},"nodeType":"YulFunctionCall","src":"3122:33:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3112:6:21"}]},{"nodeType":"YulAssignment","src":"3164:43:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3191:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3202:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3187:3:21"},"nodeType":"YulFunctionCall","src":"3187:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3174:12:21"},"nodeType":"YulFunctionCall","src":"3174:33:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"3164:6:21"}]},{"nodeType":"YulAssignment","src":"3216:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3248:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3259:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3244:3:21"},"nodeType":"YulFunctionCall","src":"3244:19:21"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"3226:17:21"},"nodeType":"YulFunctionCall","src":"3226:38:21"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"3216:6:21"}]},{"nodeType":"YulAssignment","src":"3273:49:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3306:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3317:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3302:3:21"},"nodeType":"YulFunctionCall","src":"3302:19:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3283:18:21"},"nodeType":"YulFunctionCall","src":"3283:39:21"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"3273:6:21"}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptrt_string_memory_ptrt_addresst_uint256t_uint256t_uint256t_uint64t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2342:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2353:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2365:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2373:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2381:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2389:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2397:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2405:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2413:6:21","type":""},{"name":"value7","nodeType":"YulTypedName","src":"2421:6:21","type":""}],"src":"2225:1103:21"},{"body":{"nodeType":"YulBlock","src":"3434:125:21","statements":[{"nodeType":"YulAssignment","src":"3444:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3456:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3467:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3452:3:21"},"nodeType":"YulFunctionCall","src":"3452:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3444:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3486:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3501:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3509:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3497:3:21"},"nodeType":"YulFunctionCall","src":"3497:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3479:6:21"},"nodeType":"YulFunctionCall","src":"3479:74:21"},"nodeType":"YulExpressionStatement","src":"3479:74:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3403:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3414:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3425:4:21","type":""}],"src":"3333:226:21"},{"body":{"nodeType":"YulBlock","src":"3663:101:21","statements":[{"nodeType":"YulAssignment","src":"3673:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3685:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3696:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3681:3:21"},"nodeType":"YulFunctionCall","src":"3681:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3673:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3715:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3730:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3738:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3726:3:21"},"nodeType":"YulFunctionCall","src":"3726:31:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3708:6:21"},"nodeType":"YulFunctionCall","src":"3708:50:21"},"nodeType":"YulExpressionStatement","src":"3708:50:21"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3632:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3643:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3654:4:21","type":""}],"src":"3564:200:21"},{"body":{"nodeType":"YulBlock","src":"3894:125:21","statements":[{"nodeType":"YulAssignment","src":"3904:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3916:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3927:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3912:3:21"},"nodeType":"YulFunctionCall","src":"3912:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3904:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3946:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3961:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3969:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3957:3:21"},"nodeType":"YulFunctionCall","src":"3957:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3939:6:21"},"nodeType":"YulFunctionCall","src":"3939:74:21"},"nodeType":"YulExpressionStatement","src":"3939:74:21"}]},"name":"abi_encode_tuple_t_contract$_FinderInterface_$3622__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3863:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3874:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3885:4:21","type":""}],"src":"3769:250:21"},{"body":{"nodeType":"YulBlock","src":"4094:110:21","statements":[{"body":{"nodeType":"YulBlock","src":"4140:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4149:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4152:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4142:6:21"},"nodeType":"YulFunctionCall","src":"4142:12:21"},"nodeType":"YulExpressionStatement","src":"4142:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4115:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4124:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4111:3:21"},"nodeType":"YulFunctionCall","src":"4111:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4136:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4107:3:21"},"nodeType":"YulFunctionCall","src":"4107:32:21"},"nodeType":"YulIf","src":"4104:52:21"},{"nodeType":"YulAssignment","src":"4165:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4188:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4175:12:21"},"nodeType":"YulFunctionCall","src":"4175:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4165:6:21"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4060:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4071:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4083:6:21","type":""}],"src":"4024:180:21"},{"body":{"nodeType":"YulBlock","src":"4344:125:21","statements":[{"nodeType":"YulAssignment","src":"4354:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4366:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4377:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4362:3:21"},"nodeType":"YulFunctionCall","src":"4362:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4354:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4396:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4411:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4419:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4407:3:21"},"nodeType":"YulFunctionCall","src":"4407:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4389:6:21"},"nodeType":"YulFunctionCall","src":"4389:74:21"},"nodeType":"YulExpressionStatement","src":"4389:74:21"}]},"name":"abi_encode_tuple_t_contract$_AddressWhitelistInterface_$3551__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4313:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4324:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4335:4:21","type":""}],"src":"4209:260:21"},{"body":{"nodeType":"YulBlock","src":"4575:76:21","statements":[{"nodeType":"YulAssignment","src":"4585:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4597:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4608:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4593:3:21"},"nodeType":"YulFunctionCall","src":"4593:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4585:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4627:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"4638:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4620:6:21"},"nodeType":"YulFunctionCall","src":"4620:25:21"},"nodeType":"YulExpressionStatement","src":"4620:25:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4544:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4555:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4566:4:21","type":""}],"src":"4474:177:21"},{"body":{"nodeType":"YulBlock","src":"4737:170:21","statements":[{"body":{"nodeType":"YulBlock","src":"4783:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4792:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4795:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4785:6:21"},"nodeType":"YulFunctionCall","src":"4785:12:21"},"nodeType":"YulExpressionStatement","src":"4785:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4758:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4767:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4754:3:21"},"nodeType":"YulFunctionCall","src":"4754:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4779:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4750:3:21"},"nodeType":"YulFunctionCall","src":"4750:32:21"},"nodeType":"YulIf","src":"4747:52:21"},{"nodeType":"YulVariableDeclaration","src":"4808:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4827:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4821:5:21"},"nodeType":"YulFunctionCall","src":"4821:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4812:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4871:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4846:24:21"},"nodeType":"YulFunctionCall","src":"4846:31:21"},"nodeType":"YulExpressionStatement","src":"4846:31:21"},{"nodeType":"YulAssignment","src":"4886:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"4896:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4886:6:21"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4703:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4714:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4726:6:21","type":""}],"src":"4656:251:21"},{"body":{"nodeType":"YulBlock","src":"4990:199:21","statements":[{"body":{"nodeType":"YulBlock","src":"5036:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5045:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5048:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5038:6:21"},"nodeType":"YulFunctionCall","src":"5038:12:21"},"nodeType":"YulExpressionStatement","src":"5038:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5011:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5020:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5007:3:21"},"nodeType":"YulFunctionCall","src":"5007:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5032:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5003:3:21"},"nodeType":"YulFunctionCall","src":"5003:32:21"},"nodeType":"YulIf","src":"5000:52:21"},{"nodeType":"YulVariableDeclaration","src":"5061:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5080:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5074:5:21"},"nodeType":"YulFunctionCall","src":"5074:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5065:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5143:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5152:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5155:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5145:6:21"},"nodeType":"YulFunctionCall","src":"5145:12:21"},"nodeType":"YulExpressionStatement","src":"5145:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5112:5:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5133:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5126:6:21"},"nodeType":"YulFunctionCall","src":"5126:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5119:6:21"},"nodeType":"YulFunctionCall","src":"5119:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5109:2:21"},"nodeType":"YulFunctionCall","src":"5109:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5102:6:21"},"nodeType":"YulFunctionCall","src":"5102:40:21"},"nodeType":"YulIf","src":"5099:60:21"},{"nodeType":"YulAssignment","src":"5168:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"5178:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5168:6:21"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4956:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4967:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4979:6:21","type":""}],"src":"4912:277:21"},{"body":{"nodeType":"YulBlock","src":"5368:232:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5385:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5396:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5378:6:21"},"nodeType":"YulFunctionCall","src":"5378:21:21"},"nodeType":"YulExpressionStatement","src":"5378:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5419:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5430:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5415:3:21"},"nodeType":"YulFunctionCall","src":"5415:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5435:2:21","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5408:6:21"},"nodeType":"YulFunctionCall","src":"5408:30:21"},"nodeType":"YulExpressionStatement","src":"5408:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5458:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5469:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5454:3:21"},"nodeType":"YulFunctionCall","src":"5454:18:21"},{"hexValue":"746f6b656e206973206e6f74206f6e20554d41277320636f6c6c61746572616c","kind":"string","nodeType":"YulLiteral","src":"5474:34:21","type":"","value":"token is not on UMA's collateral"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5447:6:21"},"nodeType":"YulFunctionCall","src":"5447:62:21"},"nodeType":"YulExpressionStatement","src":"5447:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5529:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5540:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5525:3:21"},"nodeType":"YulFunctionCall","src":"5525:18:21"},{"hexValue":"2077686974656c697374","kind":"string","nodeType":"YulLiteral","src":"5545:12:21","type":"","value":" whitelist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5518:6:21"},"nodeType":"YulFunctionCall","src":"5518:40:21"},"nodeType":"YulExpressionStatement","src":"5518:40:21"},{"nodeType":"YulAssignment","src":"5567:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5579:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5590:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5575:3:21"},"nodeType":"YulFunctionCall","src":"5575:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5567:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_284a847f07c9e11f6d6a09b7ffb7c1312021489096d61c8c2e1aa269c3ad5534__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5345:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5359:4:21","type":""}],"src":"5194:406:21"},{"body":{"nodeType":"YulBlock","src":"5671:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5681:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5690:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5685:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5750:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5775:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"5780:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5771:3:21"},"nodeType":"YulFunctionCall","src":"5771:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5794:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"5799:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5790:3:21"},"nodeType":"YulFunctionCall","src":"5790:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5784:5:21"},"nodeType":"YulFunctionCall","src":"5784:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5764:6:21"},"nodeType":"YulFunctionCall","src":"5764:39:21"},"nodeType":"YulExpressionStatement","src":"5764:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5711:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"5714:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5708:2:21"},"nodeType":"YulFunctionCall","src":"5708:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5722:19:21","statements":[{"nodeType":"YulAssignment","src":"5724:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5733:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"5736:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5729:3:21"},"nodeType":"YulFunctionCall","src":"5729:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5724:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"5704:3:21","statements":[]},"src":"5700:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5833:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5838:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5829:3:21"},"nodeType":"YulFunctionCall","src":"5829:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"5847:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5822:6:21"},"nodeType":"YulFunctionCall","src":"5822:27:21"},"nodeType":"YulExpressionStatement","src":"5822:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5649:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5654:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"5659:6:21","type":""}],"src":"5605:250:21"},{"body":{"nodeType":"YulBlock","src":"5909:221:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5919:26:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5939:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5933:5:21"},"nodeType":"YulFunctionCall","src":"5933:12:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5923:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5961:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5966:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5954:6:21"},"nodeType":"YulFunctionCall","src":"5954:19:21"},"nodeType":"YulExpressionStatement","src":"5954:19:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6021:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"6028:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6017:3:21"},"nodeType":"YulFunctionCall","src":"6017:16:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6039:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"6044:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6035:3:21"},"nodeType":"YulFunctionCall","src":"6035:14:21"},{"name":"length","nodeType":"YulIdentifier","src":"6051:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5982:34:21"},"nodeType":"YulFunctionCall","src":"5982:76:21"},"nodeType":"YulExpressionStatement","src":"5982:76:21"},{"nodeType":"YulAssignment","src":"6067:57:21","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6082:3:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6095:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6103:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6091:3:21"},"nodeType":"YulFunctionCall","src":"6091:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6112:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6108:3:21"},"nodeType":"YulFunctionCall","src":"6108:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6087:3:21"},"nodeType":"YulFunctionCall","src":"6087:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6078:3:21"},"nodeType":"YulFunctionCall","src":"6078:39:21"},{"kind":"number","nodeType":"YulLiteral","src":"6119:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6074:3:21"},"nodeType":"YulFunctionCall","src":"6074:50:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6067:3:21"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5886:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5893:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5901:3:21","type":""}],"src":"5860:270:21"},{"body":{"nodeType":"YulBlock","src":"6522:727:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6532:13:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6542:3:21","type":"","value":"320"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6536:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6554:52:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6564:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6558:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6622:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6637:6:21"},{"name":"_2","nodeType":"YulIdentifier","src":"6645:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6633:3:21"},"nodeType":"YulFunctionCall","src":"6633:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6615:6:21"},"nodeType":"YulFunctionCall","src":"6615:34:21"},"nodeType":"YulExpressionStatement","src":"6615:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6669:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6680:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6665:3:21"},"nodeType":"YulFunctionCall","src":"6665:18:21"},{"name":"_1","nodeType":"YulIdentifier","src":"6685:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6658:6:21"},"nodeType":"YulFunctionCall","src":"6658:30:21"},"nodeType":"YulExpressionStatement","src":"6658:30:21"},{"nodeType":"YulVariableDeclaration","src":"6697:58:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6728:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6740:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"6751:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6736:3:21"},"nodeType":"YulFunctionCall","src":"6736:18:21"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"6711:16:21"},"nodeType":"YulFunctionCall","src":"6711:44:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"6701:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6775:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6786:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6771:3:21"},"nodeType":"YulFunctionCall","src":"6771:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"6795:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"6803:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6791:3:21"},"nodeType":"YulFunctionCall","src":"6791:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6764:6:21"},"nodeType":"YulFunctionCall","src":"6764:50:21"},"nodeType":"YulExpressionStatement","src":"6764:50:21"},{"nodeType":"YulAssignment","src":"6823:40:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6848:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"6856:6:21"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"6831:16:21"},"nodeType":"YulFunctionCall","src":"6831:32:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6823:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6883:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6894:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6879:3:21"},"nodeType":"YulFunctionCall","src":"6879:18:21"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"6903:6:21"},{"name":"_2","nodeType":"YulIdentifier","src":"6911:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6899:3:21"},"nodeType":"YulFunctionCall","src":"6899:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6872:6:21"},"nodeType":"YulFunctionCall","src":"6872:43:21"},"nodeType":"YulExpressionStatement","src":"6872:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6935:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6946:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6931:3:21"},"nodeType":"YulFunctionCall","src":"6931:19:21"},{"name":"value4","nodeType":"YulIdentifier","src":"6952:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6924:6:21"},"nodeType":"YulFunctionCall","src":"6924:35:21"},"nodeType":"YulExpressionStatement","src":"6924:35:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6979:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6990:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6975:3:21"},"nodeType":"YulFunctionCall","src":"6975:19:21"},{"name":"value5","nodeType":"YulIdentifier","src":"6996:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6968:6:21"},"nodeType":"YulFunctionCall","src":"6968:35:21"},"nodeType":"YulExpressionStatement","src":"6968:35:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7023:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7034:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7019:3:21"},"nodeType":"YulFunctionCall","src":"7019:19:21"},{"name":"value6","nodeType":"YulIdentifier","src":"7040:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7012:6:21"},"nodeType":"YulFunctionCall","src":"7012:35:21"},"nodeType":"YulExpressionStatement","src":"7012:35:21"},{"nodeType":"YulVariableDeclaration","src":"7056:28:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7066:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"7060:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7104:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7115:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7100:3:21"},"nodeType":"YulFunctionCall","src":"7100:19:21"},{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"7125:6:21"},{"name":"_3","nodeType":"YulIdentifier","src":"7133:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7121:3:21"},"nodeType":"YulFunctionCall","src":"7121:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7093:6:21"},"nodeType":"YulFunctionCall","src":"7093:44:21"},"nodeType":"YulExpressionStatement","src":"7093:44:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7157:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7168:3:21","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7153:3:21"},"nodeType":"YulFunctionCall","src":"7153:19:21"},{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"7178:6:21"},{"name":"_3","nodeType":"YulIdentifier","src":"7186:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7174:3:21"},"nodeType":"YulFunctionCall","src":"7174:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7146:6:21"},"nodeType":"YulFunctionCall","src":"7146:44:21"},"nodeType":"YulExpressionStatement","src":"7146:44:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7210:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7221:3:21","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7206:3:21"},"nodeType":"YulFunctionCall","src":"7206:19:21"},{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"7231:6:21"},{"name":"_2","nodeType":"YulIdentifier","src":"7239:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7227:3:21"},"nodeType":"YulFunctionCall","src":"7227:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7199:6:21"},"nodeType":"YulFunctionCall","src":"7199:44:21"},"nodeType":"YulExpressionStatement","src":"7199:44:21"}]},"name":"abi_encode_tuple_t_address_t_bytes_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_uint64_t_uint64_t_address__to_t_address_t_bytes_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_uint64_t_uint64_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6419:9:21","type":""},{"name":"value9","nodeType":"YulTypedName","src":"6430:6:21","type":""},{"name":"value8","nodeType":"YulTypedName","src":"6438:6:21","type":""},{"name":"value7","nodeType":"YulTypedName","src":"6446:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6454:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6462:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6470:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6478:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6486:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6494:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6502:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6513:4:21","type":""}],"src":"6135:1114:21"},{"body":{"nodeType":"YulBlock","src":"7391:150:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7401:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7421:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7415:5:21"},"nodeType":"YulFunctionCall","src":"7415:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7405:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7476:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7484:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7472:3:21"},"nodeType":"YulFunctionCall","src":"7472:17:21"},{"name":"pos","nodeType":"YulIdentifier","src":"7491:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"7496:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7437:34:21"},"nodeType":"YulFunctionCall","src":"7437:66:21"},"nodeType":"YulExpressionStatement","src":"7437:66:21"},{"nodeType":"YulAssignment","src":"7512:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7523:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"7528:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7519:3:21"},"nodeType":"YulFunctionCall","src":"7519:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7512:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7367:3:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7372:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7383:3:21","type":""}],"src":"7254:287:21"},{"body":{"nodeType":"YulBlock","src":"7720:181:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7737:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7748:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7730:6:21"},"nodeType":"YulFunctionCall","src":"7730:21:21"},"nodeType":"YulExpressionStatement","src":"7730:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7771:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7782:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7767:3:21"},"nodeType":"YulFunctionCall","src":"7767:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"7787:2:21","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7760:6:21"},"nodeType":"YulFunctionCall","src":"7760:30:21"},"nodeType":"YulExpressionStatement","src":"7760:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7810:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7821:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7806:3:21"},"nodeType":"YulFunctionCall","src":"7806:18:21"},{"hexValue":"6661696c656420746f206372656174652061206e657720696e7374616e6365","kind":"string","nodeType":"YulLiteral","src":"7826:33:21","type":"","value":"failed to create a new instance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7799:6:21"},"nodeType":"YulFunctionCall","src":"7799:61:21"},"nodeType":"YulExpressionStatement","src":"7799:61:21"},{"nodeType":"YulAssignment","src":"7869:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7881:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7892:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7877:3:21"},"nodeType":"YulFunctionCall","src":"7877:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7869:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_dd6254682a2283a2c9e2200dc67615bd0491e95d67a854e3cea8e733b2d0026a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7697:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7711:4:21","type":""}],"src":"7546:355:21"},{"body":{"nodeType":"YulBlock","src":"8080:172:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8097:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8108:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8090:6:21"},"nodeType":"YulFunctionCall","src":"8090:21:21"},"nodeType":"YulExpressionStatement","src":"8090:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8131:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8142:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8127:3:21"},"nodeType":"YulFunctionCall","src":"8127:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"8147:2:21","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8120:6:21"},"nodeType":"YulFunctionCall","src":"8120:30:21"},"nodeType":"YulExpressionStatement","src":"8120:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8170:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8181:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8166:3:21"},"nodeType":"YulFunctionCall","src":"8166:18:21"},{"hexValue":"455243313136373a20637265617465206661696c6564","kind":"string","nodeType":"YulLiteral","src":"8186:24:21","type":"","value":"ERC1167: create failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8159:6:21"},"nodeType":"YulFunctionCall","src":"8159:52:21"},"nodeType":"YulExpressionStatement","src":"8159:52:21"},{"nodeType":"YulAssignment","src":"8220:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8232:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8243:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8228:3:21"},"nodeType":"YulFunctionCall","src":"8228:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8220:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8057:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8071:4:21","type":""}],"src":"7906:346:21"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes_memory_ptrt_string_memory_ptrt_addresst_uint256t_uint256t_uint256t_uint64t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes(add(_2, 0x20), calldataload(_2), dataEnd)\n        let offset_1 := calldataload(add(headStart, 0x20))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := abi_decode_uint64(add(headStart, 192))\n        value7 := abi_decode_address(add(headStart, 224))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_FinderInterface_$3622__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_AddressWhitelistInterface_$3551__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_284a847f07c9e11f6d6a09b7ffb7c1312021489096d61c8c2e1aa269c3ad5534__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"token is not on UMA's collateral\")\n        mstore(add(headStart, 96), \" whitelist\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_uint64_t_uint64_t_address__to_t_address_t_bytes_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_uint64_t_uint64_t_address__fromStack_reversed(headStart, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 320\n        let _2 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _2))\n        mstore(add(headStart, 32), _1)\n        let tail_1 := abi_encode_bytes(value1, add(headStart, _1))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_bytes(value2, tail_1)\n        mstore(add(headStart, 96), and(value3, _2))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        let _3 := 0xffffffffffffffff\n        mstore(add(headStart, 224), and(value7, _3))\n        mstore(add(headStart, 256), and(value8, _3))\n        mstore(add(headStart, 288), and(value9, _2))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_dd6254682a2283a2c9e2200dc67615bd0491e95d67a854e3cea8e733b2d0026a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"failed to create a new instance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"ERC1167: create failed\")\n        tail := add(headStart, 96)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c806399e7d0561161005b57806399e7d0561461010d578063b9a3c84c1461012c578063d7741cad1461013f578063e4ee614a1461015257600080fd5b80632177a32b1461008d57806327831ee0146100975780633ca9482d146100b557806391152f10146100e0575b600080fd5b610095610165565b005b61009f610239565b6040516100ac919061065b565b60405180910390f35b6100c86100c33660046107af565b61029b565b6040516001600160a01b0390911681526020016100ac565b6000546100f49067ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016100ac565b6000546100c8906801000000000000000090046001600160a01b031681565b6002546100c8906001600160a01b031681565b6100c861014d366004610879565b610590565b6003546100c8906001600160a01b031681565b6002546040517faafd5e400000000000000000000000000000000000000000000000000000000081527f436f6c6c61746572616c57686974656c6973740000000000000000000000000060048201526001600160a01b039091169063aafd5e4090602401602060405180830381865afa1580156101e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020a9190610892565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6060600180548060200260200160405190810160405280929190818152602001828054801561029157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610273575b5050505050905090565b6003546040517f3a3ab6720000000000000000000000000000000000000000000000000000000081526001600160a01b0388811660048301526000921690633a3ab67290602401602060405180830381865afa1580156102ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032391906108af565b61039a5760405162461bcd60e51b815260206004820152602a60248201527f746f6b656e206973206e6f74206f6e20554d41277320636f6c6c61746572616c60448201527f2077686974656c6973740000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000546103bb906801000000000000000090046001600160a01b03166105ba565b6002546000805460405193945090926001600160a01b0380861693610400939116918e918e918e918e918e918e918e9167ffffffffffffffff16908e90602401610921565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f74881462000000000000000000000000000000000000000000000000000000001790525161046391906109a4565b6000604051808303816000865af19150503d80600081146104a0576040519150601f19603f3d011682016040523d82523d6000602084013e6104a5565b606091505b50509050806104f65760405162461bcd60e51b815260206004820152601f60248201527f6661696c656420746f206372656174652061206e657720696e7374616e6365006044820152606401610391565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091556040519081527fcc1e9c890bc4f4943c457abb8d17f97703b9f7144e1f4a69e50c6e4988ef38b79060200160405180910390a15098975050505050505050565b600181815481106105a057600080fd5b6000918252602090912001546001600160a01b0316905081565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b0381166106565760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c6564000000000000000000006044820152606401610391565b919050565b6020808252825182820181905260009190848201906040850190845b8181101561069c5783516001600160a01b031683529284019291840191600101610677565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600067ffffffffffffffff808411156106f2576106f26106a8565b604051601f8501601f19908116603f0116810190828211818310171561071a5761071a6106a8565b8160405280935085815286868601111561073357600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261075e57600080fd5b61076d838335602085016106d7565b9392505050565b6001600160a01b038116811461078957600080fd5b50565b803561065681610774565b803567ffffffffffffffff8116811461065657600080fd5b600080600080600080600080610100898b0312156107cc57600080fd5b883567ffffffffffffffff808211156107e457600080fd5b818b0191508b601f8301126107f857600080fd5b6108078c8335602085016106d7565b995060208b013591508082111561081d57600080fd5b5061082a8b828c0161074d565b97505061083960408a0161078c565b9550606089013594506080890135935060a0890135925061085c60c08a01610797565b915061086a60e08a0161078c565b90509295985092959890939650565b60006020828403121561088b57600080fd5b5035919050565b6000602082840312156108a457600080fd5b815161076d81610774565b6000602082840312156108c157600080fd5b8151801515811461076d57600080fd5b60005b838110156108ec5781810151838201526020016108d4565b50506000910152565b6000815180845261090d8160208601602086016108d1565b601f01601f19169290920160200192915050565b60006101406001600160a01b03808e1684528160208501526109458285018e6108f5565b91508382036040850152610959828d6108f5565b9a811660608501526080840199909952505060a081019590955260c085019390935267ffffffffffffffff91821660e085015216610100830152909116610120909101529392505050565b600082516109b68184602087016108d1565b919091019291505056fea2646970667358221220e108e69c5b778bd39a55ac800ddd280c9a9d931185fe8e7c2e7b02592ad21e4264736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x99E7D056 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x99E7D056 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xB9A3C84C EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xD7741CAD EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xE4EE614A EQ PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2177A32B EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x27831EE0 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x3CA9482D EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x91152F10 EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x165 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9F PUSH2 0x239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC8 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x29B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xF4 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xC8 SWAP1 PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xC8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x14D CALLDATASIZE PUSH1 0x4 PUSH2 0x879 JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xC8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0xAAFD5E4000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x436F6C6C61746572616C57686974656C69737400000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAAFD5E40 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x892 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x273 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x3A3AB67200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x3A3AB672 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x8AF JUMP JUMPDEST PUSH2 0x39A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E206973206E6F74206F6E20554D41277320636F6C6C61746572616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2077686974656C69737400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x3BB SWAP1 PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP4 PUSH2 0x400 SWAP4 SWAP2 AND SWAP2 DUP15 SWAP2 DUP15 SWAP2 DUP15 SWAP2 DUP15 SWAP2 DUP15 SWAP2 DUP15 SWAP2 DUP15 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP15 SWAP1 PUSH1 0x24 ADD PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7488146200000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE MLOAD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C656420746F206372656174652061206E657720696E7374616E636500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x391 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xCC1E9C890BC4F4943C457ABB8D17F97703B9F7144E1F4A69E50C6E4988EF38B7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP3 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP3 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 PUSH1 0x0 CREATE SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313136373A20637265617465206661696C656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x391 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x69C JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x677 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x6F2 JUMPI PUSH2 0x6F2 PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x71A JUMPI PUSH2 0x71A PUSH2 0x6A8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x75E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76D DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x6D7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x656 DUP2 PUSH2 0x774 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x807 DUP13 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x6D7 JUMP JUMPDEST SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x81D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82A DUP12 DUP3 DUP13 ADD PUSH2 0x74D JUMP JUMPDEST SWAP8 POP POP PUSH2 0x839 PUSH1 0x40 DUP11 ADD PUSH2 0x78C JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH2 0x85C PUSH1 0xC0 DUP11 ADD PUSH2 0x797 JUMP JUMPDEST SWAP2 POP PUSH2 0x86A PUSH1 0xE0 DUP11 ADD PUSH2 0x78C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x88B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x76D DUP2 PUSH2 0x774 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8EC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8D4 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x90D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP15 AND DUP5 MSTORE DUP2 PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x945 DUP3 DUP6 ADD DUP15 PUSH2 0x8F5 JUMP JUMPDEST SWAP2 POP DUP4 DUP3 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x959 DUP3 DUP14 PUSH2 0x8F5 JUMP JUMPDEST SWAP11 DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP10 SWAP1 SWAP10 MSTORE POP POP PUSH1 0xA0 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0xE0 DUP6 ADD MSTORE AND PUSH2 0x100 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x9B6 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x8D1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 ADDMOD 0xE6 SWAP13 JUMPDEST PUSH24 0x8BD39A55AC800DDD280C9A9D931185FE8E7C2E7B02592AD2 0x1E TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"329:3806:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3963:169;;;:::i;:::-;;3605:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2279:1258;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3497:55:21;;;3479:74;;3467:2;3452:18;2279:1258:18;3333:226:21;372:29:18;;;;;;;;;;;;3738:18:21;3726:31;;;3708:50;;3696:2;3681:18;372:29:18;3564:200:21;410:37:18;;;;;;;;-1:-1:-1;;;;;410:37:18;;;491:29;;;;;-1:-1:-1;;;;;491:29:18;;;456:26;;;;;;:::i;:::-;;:::i;527:52::-;;;;;-1:-1:-1;;;;;527:52:18;;;3963:169;4054:6;;:69;;;;;4086:36;4054:69;;;4620:25:21;-1:-1:-1;;;;;4054:6:18;;;;:31;;4593:18:21;;4054:69:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4006:19;:118;;-1:-1:-1;;4006:118:18;-1:-1:-1;;;;;4006:118:18;;;;;;;;;;3963:169::o;3605:90::-;3651:16;3681:9;3674:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3674:16:18;;;;;;;;;;;;;;;;;;;;;;;3605:90;:::o;2279:1258::-;2661:19;;:41;;;;;-1:-1:-1;;;;;3497:55:21;;;2661:41:18;;;3479:74:21;2577:16:18;;2661:19;;:33;;3452:18:21;;2661:41:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2653:96;;;;-1:-1:-1;;;2653:96:18;;5396:2:21;2653:96:18;;;5378:21:21;5435:2;5415:18;;;5408:30;5474:34;5454:18;;;5447:62;5545:12;5525:18;;;5518:40;5575:19;;2653:96:18;;;;;;;;;2827:22;;2814:36;;2827:22;;;-1:-1:-1;;;;;2827:22:18;2814:12;:36::i;:::-;3101:6;;2898:12;3274:15;;2944:385;;2803:47;;-1:-1:-1;2898:12:18;;-1:-1:-1;;;;;2916:13:18;;;;2944:385;;3101:6;;;3127:13;;3147:6;;3160;;3173:11;;3191:15;;3213:14;;3246:9;;3274:15;;;3308:6;;2944:385;;;:::i;:::-;;;;-1:-1:-1;;2944:385:18;;;;;;;;;;;;;;;;;;;;2916:424;;;2944:385;2916:424;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2897:443;;;3359:7;3351:51;;;;-1:-1:-1;;;3351:51:18;;7748:2:21;3351:51:18;;;7730:21:21;7787:2;7767:18;;;7760:30;7826:33;7806:18;;;7799:61;7877:18;;3351:51:18;7546:355:21;3351:51:18;3445:9;:24;;;;;;;-1:-1:-1;3445:24:18;;;;;;;;-1:-1:-1;;3445:24:18;-1:-1:-1;;;;;3445:24:18;;;;;;;;3485:18;;3479:74:21;;;3485:18:18;;3467:2:21;3452:18;3485::18;;;;;;;3514:15;2279:1258;;;;;;;;;;:::o;456:26::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;456:26:18;;-1:-1:-1;456:26:18;:::o;973:759:1:-;1030:16;1362:48;1344:14;1338:4;1334:25;1328:4;1324:36;1321:90;1315:4;1308:104;1569:32;1552:14;1546:4;1542:25;1539:63;1533:4;1526:77;1644:4;1638;1635:1;1628:21;1616:33;-1:-1:-1;;;;;;1676:22:1;;1668:57;;;;-1:-1:-1;;;1668:57:1;;8108:2:21;1668:57:1;;;8090:21:21;8147:2;8127:18;;;8120:30;8186:24;8166:18;;;8159:52;8228:18;;1668:57:1;7906:346:21;1668:57:1;973:759;;;:::o;14:681:21:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:218;465:6;462:1;459:13;451:218;;;530:13;;-1:-1:-1;;;;;526:62:21;514:75;;644:15;;;;609:12;;;;487:1;480:9;451:218;;;-1:-1:-1;686:3:21;;14:681;-1:-1:-1;;;;;;14:681:21:o;700:184::-;752:77;749:1;742:88;849:4;846:1;839:15;873:4;870:1;863:15;889:631;953:5;983:18;1024:2;1016:6;1013:14;1010:40;;;1030:18;;:::i;:::-;1105:2;1099:9;1073:2;1159:15;;-1:-1:-1;;1155:24:21;;;1181:2;1151:33;1147:42;1135:55;;;1205:18;;;1225:22;;;1202:46;1199:72;;;1251:18;;:::i;:::-;1291:10;1287:2;1280:22;1320:6;1311:15;;1350:6;1342;1335:22;1390:3;1381:6;1376:3;1372:16;1369:25;1366:45;;;1407:1;1404;1397:12;1366:45;1457:6;1452:3;1445:4;1437:6;1433:17;1420:44;1512:1;1505:4;1496:6;1488;1484:19;1480:30;1473:41;;;;889:631;;;;;:::o;1525:221::-;1568:5;1621:3;1614:4;1606:6;1602:17;1598:27;1588:55;;1639:1;1636;1629:12;1588:55;1661:79;1736:3;1727:6;1714:20;1707:4;1699:6;1695:17;1661:79;:::i;:::-;1652:88;1525:221;-1:-1:-1;;;1525:221:21:o;1751:154::-;-1:-1:-1;;;;;1830:5:21;1826:54;1819:5;1816:65;1806:93;;1895:1;1892;1885:12;1806:93;1751:154;:::o;1910:134::-;1978:20;;2007:31;1978:20;2007:31;:::i;2049:171::-;2116:20;;2176:18;2165:30;;2155:41;;2145:69;;2210:1;2207;2200:12;2225:1103;2365:6;2373;2381;2389;2397;2405;2413;2421;2474:3;2462:9;2453:7;2449:23;2445:33;2442:53;;;2491:1;2488;2481:12;2442:53;2531:9;2518:23;2560:18;2601:2;2593:6;2590:14;2587:34;;;2617:1;2614;2607:12;2587:34;2655:6;2644:9;2640:22;2630:32;;2700:7;2693:4;2689:2;2685:13;2681:27;2671:55;;2722:1;2719;2712:12;2671:55;2745:75;2812:7;2807:2;2794:16;2787:4;2783:2;2779:13;2745:75;:::i;:::-;2735:85;;2873:4;2862:9;2858:20;2845:34;2829:50;;2904:2;2894:8;2891:16;2888:36;;;2920:1;2917;2910:12;2888:36;;2943:52;2987:7;2976:8;2965:9;2961:24;2943:52;:::i;:::-;2933:62;;;3014:38;3048:2;3037:9;3033:18;3014:38;:::i;:::-;3004:48;;3099:2;3088:9;3084:18;3071:32;3061:42;;3150:3;3139:9;3135:19;3122:33;3112:43;;3202:3;3191:9;3187:19;3174:33;3164:43;;3226:38;3259:3;3248:9;3244:19;3226:38;:::i;:::-;3216:48;;3283:39;3317:3;3306:9;3302:19;3283:39;:::i;:::-;3273:49;;2225:1103;;;;;;;;;;;:::o;4024:180::-;4083:6;4136:2;4124:9;4115:7;4111:23;4107:32;4104:52;;;4152:1;4149;4142:12;4104:52;-1:-1:-1;4175:23:21;;4024:180;-1:-1:-1;4024:180:21:o;4656:251::-;4726:6;4779:2;4767:9;4758:7;4754:23;4750:32;4747:52;;;4795:1;4792;4785:12;4747:52;4827:9;4821:16;4846:31;4871:5;4846:31;:::i;4912:277::-;4979:6;5032:2;5020:9;5011:7;5007:23;5003:32;5000:52;;;5048:1;5045;5038:12;5000:52;5080:9;5074:16;5133:5;5126:13;5119:21;5112:5;5109:32;5099:60;;5155:1;5152;5145:12;5605:250;5690:1;5700:113;5714:6;5711:1;5708:13;5700:113;;;5790:11;;;5784:18;5771:11;;;5764:39;5736:2;5729:10;5700:113;;;-1:-1:-1;;5847:1:21;5829:16;;5822:27;5605:250::o;5860:270::-;5901:3;5939:5;5933:12;5966:6;5961:3;5954:19;5982:76;6051:6;6044:4;6039:3;6035:14;6028:4;6021:5;6017:16;5982:76;:::i;:::-;6112:2;6091:15;-1:-1:-1;;6087:29:21;6078:39;;;;6119:4;6074:50;;5860:270;-1:-1:-1;;5860:270:21:o;6135:1114::-;6513:4;6542:3;-1:-1:-1;;;;;6645:2:21;6637:6;6633:15;6622:9;6615:34;6685:2;6680;6669:9;6665:18;6658:30;6711:44;6751:2;6740:9;6736:18;6728:6;6711:44;:::i;:::-;6697:58;;6803:9;6795:6;6791:22;6786:2;6775:9;6771:18;6764:50;6831:32;6856:6;6848;6831:32;:::i;:::-;6899:15;;;6894:2;6879:18;;6872:43;6946:3;6931:19;;6924:35;;;;-1:-1:-1;;6990:3:21;6975:19;;6968:35;;;;7034:3;7019:19;;7012:35;;;;7066:18;7121:15;;;7115:3;7100:19;;7093:44;7174:15;7168:3;7153:19;;7146:44;7227:15;;;7221:3;7206:19;;;7199:44;6823:40;6135:1114;-1:-1:-1;;;6135:1114:21:o;7254:287::-;7383:3;7421:6;7415:13;7437:66;7496:6;7491:3;7484:4;7476:6;7472:17;7437:66;:::i;:::-;7519:16;;;;;7254:287;-1:-1:-1;;7254:287:21:o"},"methodIdentifiers":{"allClones(uint256)":"d7741cad","collateralWhitelist()":"e4ee614a","createNewDecentralist(bytes,string,address,uint256,uint256,uint256,uint64,address)":"3ca9482d","finder()":"b9a3c84c","getAllClones()":"27831ee0","implementationContract()":"99e7d056","minimumLiveness()":"91152f10","syncWhitelist()":"2177a32b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_finder\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_minimumLiveness\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_clone\",\"type\":\"address\"}],\"name\":\"NewClone\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allClones\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralWhitelist\",\"outputs\":[{\"internalType\":\"contract AddressWhitelistInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_listCriteria\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bondAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_additionReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_removalReward\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_liveness\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"createNewDecentralist\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"instance\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finder\",\"outputs\":[{\"internalType\":\"contract FinderInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllClones\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumLiveness\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syncWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_finder\":\"The address of UMA Finder contract. This is set in the DecentralistProxyFactory constructor.\",\"_implementation\":\"The decentraList implementation contract that clones will be based on.\"}},\"createNewDecentralist(bytes,string,address,uint256,uint256,uint256,uint64,address)\":{\"params\":{\"_additionReward\":\"Reward per address successfully added to the list, paid by the contract to the proposer.\",\"_bondAmount\":\"Additional bond required, beyond the final fee.\",\"_listCriteria\":\"Criteria for what addresses should be included on the list. Can be on-chain text or a link to IPFS.\",\"_liveness\":\"The period, in seconds, in which a proposal can be disputed. Must be greater than 8 hours.\",\"_owner\":\"Owner of the contract can remove funds from the contract and adjust bondAmount, rewards and liveness.  Set to the 0 address to make the contract a non-managed public good.\",\"_removalReward\":\"Reward per address successfully removed from the list, paid by the contract to the proposer.\",\"_title\":\"Short title for the list.\",\"_token\":\"The address of the token currency used for this contract. Must be on UMA's collateral whitelist.\"}},\"syncWhitelist()\":{\"details\":\"If a new OptimisticOracle is added and this function is run between a list revision's proposal and execution, the proposal will become unexecutable.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createNewDecentralist(bytes,string,address,uint256,uint256,uint256,uint64,address)\":{\"notice\":\"Creates a new decentraList smart contract.\"},\"getAllClones()\":{\"notice\":\"Returns all instances created.\"},\"syncWhitelist()\":{\"notice\":\"This pulls in the most up-to-date collateral whitelist.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DecentralistProxyFactory.sol\":\"DecentralistProxyFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7\",\"dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5\"]},\"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol\":{\"keccak256\":\"0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533\",\"dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei\"]},\"@uma/core/contracts/oracle/implementation/Constants.sol\":{\"keccak256\":\"0xda68bfe488310f86be9423666bbb1025a7dfa8494df73914da91abb8ff6cb774\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7dbf823c0a519d9db56b26abaaf75cbff73c2094583cdf50f7025c0ed23f8072\",\"dweb:/ipfs/Qmey1e83re5NPbyijqbLUJJm5z5fdtcqpzVaxu75988XD1\"]},\"@uma/core/contracts/oracle/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"contracts/DecentralistProxyFactory.sol\":{\"keccak256\":\"0xcf0574aa75e14b8f96013f14a17575bbeafaa8e840ad900fd480348019736c97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://886d7a4aedc511067d6e2a947de5897b0af7bfe514486771ab4886b1f7facf42\",\"dweb:/ipfs/QmTCT2Up6vbc8LXDTvgfZocvGFbtad5c1SxcftVM4rNqnW\"]}},\"version\":1}"}},"contracts/interfaces/DecentralistInterface.sol":{"DecentralistInterface":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"bondAmount","type":"uint256"}],"name":"BondSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"liveness","type":"uint64"}],"name":"LivenessSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"revisionId","type":"uint256"},{"indexed":false,"internalType":"int256","name":"proposedValue","type":"int256"}],"name":"RevisionApproved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"revisionId","type":"uint256"},{"indexed":false,"internalType":"int256","name":"proposedValue","type":"int256"},{"indexed":false,"internalType":"address[]","name":"revisedAddresses","type":"address[]"}],"name":"RevisionExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"revisionId","type":"uint256"},{"indexed":false,"internalType":"int256","name":"proposedValue","type":"int256"},{"indexed":false,"internalType":"address[]","name":"pendingAddresses","type":"address[]"}],"name":"RevisionProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"revisionId","type":"uint256"},{"indexed":false,"internalType":"int256","name":"proposedValue","type":"int256"}],"name":"RevisionRejected","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"additionReward","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"removalReward","type":"uint256"}],"name":"RewardsSet","type":"event"},{"inputs":[],"name":"additionReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bondAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_revisionId","type":"uint256"},{"internalType":"address[]","name":"_addresses","type":"address[]"}],"name":"executeRevision","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"finder","outputs":[{"internalType":"contract FinderInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fixedAncillaryData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_finder","type":"address"},{"internalType":"bytes","name":"_listCriteria","type":"bytes"},{"internalType":"string","name":"_title","type":"string"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_bondAmount","type":"uint256"},{"internalType":"uint256","name":"_additionReward","type":"uint256"},{"internalType":"uint256","name":"_removalReward","type":"uint256"},{"internalType":"uint64","name":"_liveness","type":"uint64"},{"internalType":"uint64","name":"_minimumLiveness","type":"uint64"},{"internalType":"address","name":"_owner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liveness","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minimumLiveness","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"onList","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oracle","outputs":[{"internalType":"contract OptimisticOracleV2Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"internalType":"int256","name":"value","type":"int256"}],"name":"priceSettled","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int256","name":"_value","type":"int256"},{"internalType":"address[]","name":"_addresses","type":"address[]"}],"name":"proposeRevision","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"removalReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"_token","type":"address"}],"name":"rescue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"RevisionId","type":"uint256"}],"name":"revisions","outputs":[{"components":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"bytes32","name":"addressesHash","type":"bytes32"},{"internalType":"int256","name":"proposedValue","type":"int256"},{"internalType":"enum DecentralistInterface.Status","name":"status","type":"uint8"}],"internalType":"struct DecentralistInterface.Revision","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_bondAmount","type":"uint256"}],"name":"setBond","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_liveness","type":"uint64"}],"name":"setLiveness","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_additionReward","type":"uint256"},{"internalType":"uint256","name":"_removalReward","type":"uint256"}],"name":"setRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"store","outputs":[{"internalType":"contract StoreInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"syncContracts","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"title","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"additionReward()":"8dee967e","bondAmount()":"80f323a7","executeRevision(uint256,address[])":"fee53ab6","finder()":"b9a3c84c","fixedAncillaryData()":"5cae7fb5","initialize(address,bytes,string,address,uint256,uint256,uint256,uint64,uint64,address)":"74881462","liveness()":"6ad0690a","minimumLiveness()":"91152f10","onList(address)":"6f626eb3","oracle()":"7dc0d1d0","owner()":"8da5cb5b","priceSettled(bytes32,uint256,bytes,int256)":"04cc1fd5","proposeRevision(int256,address[])":"ec40ad51","removalReward()":"c207ec6e","renounceOwnership()":"715018a6","rescue(address,uint256,address)":"8671d23b","revisions(uint256)":"0ef486d1","setBond(uint256)":"259bd920","setLiveness(uint64)":"3c4432f1","setRewards(uint256,uint256)":"654e51e7","store()":"975057e7","syncContracts()":"8a301adc","title()":"4a79d50c","token()":"fc0c546a","transferOwnership(address)":"f2fde38b","withdraw(address,uint256)":"f3fef3a3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"BondSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"liveness\",\"type\":\"uint64\"}],\"name\":\"LivenessSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"revisionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"proposedValue\",\"type\":\"int256\"}],\"name\":\"RevisionApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"revisionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"proposedValue\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"revisedAddresses\",\"type\":\"address[]\"}],\"name\":\"RevisionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"revisionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"proposedValue\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"pendingAddresses\",\"type\":\"address[]\"}],\"name\":\"RevisionProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"revisionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"proposedValue\",\"type\":\"int256\"}],\"name\":\"RevisionRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"additionReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removalReward\",\"type\":\"uint256\"}],\"name\":\"RewardsSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"additionReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_revisionId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"}],\"name\":\"executeRevision\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finder\",\"outputs\":[{\"internalType\":\"contract FinderInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fixedAncillaryData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_finder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_listCriteria\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bondAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_additionReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_removalReward\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_liveness\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_minimumLiveness\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liveness\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumLiveness\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"onList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract OptimisticOracleV2Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"priceSettled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_value\",\"type\":\"int256\"},{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"}],\"name\":\"proposeRevision\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"rescue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"RevisionId\",\"type\":\"uint256\"}],\"name\":\"revisions\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"addressesHash\",\"type\":\"bytes32\"},{\"internalType\":\"int256\",\"name\":\"proposedValue\",\"type\":\"int256\"},{\"internalType\":\"enum DecentralistInterface.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct DecentralistInterface.Revision\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bondAmount\",\"type\":\"uint256\"}],\"name\":\"setBond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_liveness\",\"type\":\"uint64\"}],\"name\":\"setLiveness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_additionReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_removalReward\",\"type\":\"uint256\"}],\"name\":\"setRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"store\",\"outputs\":[{\"internalType\":\"contract StoreInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syncContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"title\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeRevision(uint256,address[])\":{\"params\":{\"_addresses\":\"Address array that matches the array logged in the RevisionProposed event for the provided _revisionId.\",\"_revisionId\":\"ID of revision to be executed. If Revision submitted does not have status Approved, tx will revert.\"}},\"initialize(address,bytes,string,address,uint256,uint256,uint256,uint64,uint64,address)\":{\"params\":{\"_additionReward\":\"Reward per address successfully added to the list, paid by the contract to the proposer.\",\"_bondAmount\":\"Additional bond required, beyond the final fee.\",\"_finder\":\"The address of UMA Finder contract. This is set in the DecentralistProxyFactory constructor.\",\"_listCriteria\":\"Criteria for what addresses should be included on the list. Can be on-chain text or a link to IPFS.\",\"_liveness\":\"The period, in seconds, in which a proposal can be disputed.\",\"_minimumLiveness\":\"The minimum allowable liveness period, in seconds.\",\"_owner\":\"Owner of the contract can remove funds from the contract and adjust reward rates. Set to the 0 address to make the contract 'public'.\",\"_removalReward\":\"Reward per address successfully removed from the list, paid by the contract to the proposer.\",\"_title\":\"Short title for the list.\",\"_token\":\"The address of the token currency used for this contract. Must be on UMA's collateral whitelist.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"priceSettled(bytes32,uint256,bytes,int256)\":{\"params\":{\"ancillaryData\":\"Ancillary data of the data being requested.\",\"timestamp\":\"Timestamp to identify the existing request.\",\"value\":\"Value returned from the oracle.\"}},\"proposeRevision(int256,address[])\":{\"details\":\"Caller must have approved this contract to spend the total bond amount of the contract's token before calling.\",\"params\":{\"_addresses\":\"Array of addresses for the proposed revision.\",\"_value\":\"Indicates if the proposed revision is adding or removing addresses. 0 = remove, 1e18 = add.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"rescue(address,uint256,address)\":{\"params\":{\"_token\":\"The contract address of the token to send.\",\"amount\":\"The amount of tokens to to send.\",\"recipient\":\"The recipient of the tokens.\"}},\"setBond(uint256)\":{\"params\":{\"_bondAmount\":\"Amount of the bond token that will need to be paid for future proposals.\"}},\"setLiveness(uint64)\":{\"params\":{\"_liveness\":\"Liveness to set in seconds.\"}},\"setRewards(uint256,uint256)\":{\"params\":{\"_additionReward\":\"Reward to proposer per address successfully added to the list.\",\"_removalReward\":\"Reward to proposer per address successfully removed from the list.\"}},\"syncContracts()\":{\"details\":\"If a new OptimisticOracle is added and this is run between a revision's introduction and execution, the proposal will become unexecutable.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to to send.\",\"recipient\":\"The recipient of the tokens.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeRevision(uint256,address[])\":{\"notice\":\"Executes approved revisions by revising the list and paying out rewards to the proposer.\"},\"initialize(address,bytes,string,address,uint256,uint256,uint256,uint64,uint64,address)\":{\"notice\":\"Initializes the contract.\"},\"priceSettled(bytes32,uint256,bytes,int256)\":{\"notice\":\"Callback function called upon oracle data settlement to update the Revision status to Approved or Rejected.\"},\"proposeRevision(int256,address[])\":{\"notice\":\"Proposes addresses to add or remove from the list.\"},\"rescue(address,uint256,address)\":{\"notice\":\"Allows owner to rescue tokens sent accidentally to the contract.\"},\"setBond(uint256)\":{\"notice\":\"Sets the bond amount for revisions.\"},\"setLiveness(uint64)\":{\"notice\":\"Sets the liveness for future revisions. This is the amount of delay before a proposal is approved by default.\"},\"setRewards(uint256,uint256)\":{\"notice\":\"Sets the rewards for successful revisions.\"},\"syncContracts()\":{\"notice\":\"This pulls in the most up-to-date Optimistic Oracle contract.\"},\"withdraw(address,uint256)\":{\"notice\":\"Allows owner to withdraw the default tokens from the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/DecentralistInterface.sol\":\"DecentralistInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3798da9e212cd00a7cda94ddb5a9721171a718e89c500d8901f810e0e37fa74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93f9c584e4b29dce1c7520b63d19f34c684f5ea972b5d04323a132059851004\",\"dweb:/ipfs/QmajmiA7BsarS63FMoP5PcBS4mqVGoiJ7xZ3wJVonYNTHC\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce\",\"dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB\"]},\"@uma/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663\",\"dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT\"]},\"@uma/core/contracts/oracle/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"@uma/core/contracts/oracle/interfaces/OptimisticOracleV2Interface.sol\":{\"keccak256\":\"0xbfd9778b3e7c86e149cc140eda5e7210ef4a604cde576abaaa46c1289c5e334f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0f52a8f51cce3444937d477426077785bb68b22de41f39a6e4d58a6dc1c7ede5\",\"dweb:/ipfs/QmdNMPxBjhvcEoKNKdzLB8pA2uhqrZWHo8vcrhWeC9r6ro\"]},\"@uma/core/contracts/oracle/interfaces/StoreInterface.sol\":{\"keccak256\":\"0xbb73671684309c91ad5ef3da1474051d03f2e7d5882bed7f5c4317e5d4c768df\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://32386544d3119fd0187a8c4e8b01c739f508ab863faa04345cabc2544081f9e8\",\"dweb:/ipfs/QmYszDURs1x75rsejZkGt9zCkASXnJtufbNsL3XHe2eJPQ\"]},\"contracts/interfaces/DecentralistInterface.sol\":{\"keccak256\":\"0x909805a5c5c4daecc8c569ef48ffe1ac186554bc7e52eb7b047d0d367278d514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3079d790395eeb2a42c414175d3104acdfc94f47df20dbb674ddb47a97310682\",\"dweb:/ipfs/QmXKuB7QcQBWAodQYAtRoHHtjQqWMwQ8VfSeBMKETVLgrC\"]}},\"version\":1}"}},"contracts/interfaces/DecentralistProxyFactoryInterface.sol":{"DecentralistProxyFactoryInterface":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_clone","type":"address"}],"name":"NewClone","type":"event"},{"inputs":[],"name":"allClones","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"collateralWhitelist","outputs":[{"internalType":"contract AddressWhitelistInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_listCriteria","type":"bytes"},{"internalType":"string","name":"_title","type":"string"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_bondAmount","type":"uint256"},{"internalType":"uint256","name":"_additionReward","type":"uint256"},{"internalType":"uint256","name":"_removalReward","type":"uint256"},{"internalType":"uint64","name":"_liveness","type":"uint64"},{"internalType":"address","name":"_owner","type":"address"}],"name":"createNewDecentralist","outputs":[{"internalType":"address","name":"instance","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"finder","outputs":[{"internalType":"contract FinderInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllClones","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"implementationContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minimumLiveness","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"syncWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allClones()":"61437f88","collateralWhitelist()":"e4ee614a","createNewDecentralist(bytes,string,address,uint256,uint256,uint256,uint64,address)":"3ca9482d","finder()":"b9a3c84c","getAllClones()":"27831ee0","implementationContract()":"99e7d056","minimumLiveness()":"91152f10","syncWhitelist()":"2177a32b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_clone\",\"type\":\"address\"}],\"name\":\"NewClone\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allClones\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralWhitelist\",\"outputs\":[{\"internalType\":\"contract AddressWhitelistInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_listCriteria\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bondAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_additionReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_removalReward\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_liveness\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"createNewDecentralist\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"instance\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finder\",\"outputs\":[{\"internalType\":\"contract FinderInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllClones\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumLiveness\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syncWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createNewDecentralist(bytes,string,address,uint256,uint256,uint256,uint64,address)\":{\"params\":{\"_additionReward\":\"Reward per address successfully added to the list, paid by the contract to the proposer.\",\"_bondAmount\":\"Additional bond required, beyond the final fee.\",\"_listCriteria\":\"Criteria for what addresses should be included on the list. Can be on-chain text or a link to IPFS.\",\"_liveness\":\"The period, in seconds, in which a proposal can be disputed. Must be greater than 8 hours.\",\"_owner\":\"Owner of the contract can remove funds from the contract and adjust bondAmount, rewards and liveness. Set to the 0 address to make the contract a non-managed public good.\",\"_removalReward\":\"Reward per address successfully removed from the list, paid by the contract to the proposer.\",\"_title\":\"Short title for the list.\",\"_token\":\"The address of the token currency used for this contract. Must be on UMA's collateral whitelist.\"}},\"syncWhitelist()\":{\"details\":\"If a new OptimisticOracle is added and this function is run between a list revision's proposal and execution, the proposal will become unexecutable.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createNewDecentralist(bytes,string,address,uint256,uint256,uint256,uint64,address)\":{\"notice\":\"Creates a new decentraList smart contract.\"},\"getAllClones()\":{\"notice\":\"Returns all instances created.\"},\"syncWhitelist()\":{\"notice\":\"This pulls in the most up-to-date collateral whitelist.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/DecentralistProxyFactoryInterface.sol\":\"DecentralistProxyFactoryInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol\":{\"keccak256\":\"0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533\",\"dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei\"]},\"@uma/core/contracts/oracle/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"contracts/interfaces/DecentralistProxyFactoryInterface.sol\":{\"keccak256\":\"0x523f59a3e725202a5008a92657ef9457d0371f7dcc69cd88336dc15d1877772d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99882ea76e6e96d62a3ec16cffcd8e3ef5ea77abc9cf62b904b4f0b41a400667\",\"dweb:/ipfs/QmchPVDX4D8tRkSHpfwecqPn4bj1M1CGQjYe22R4M5mLiJ\"]}},\"version\":1}"}}}}}